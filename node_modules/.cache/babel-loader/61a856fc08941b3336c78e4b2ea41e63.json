{"ast":null,"code":"import axios from \"axios\";\naxios.defaults.withCredentials = true;\nexport const userLoginAndCheck = user_data => dispatch => {\n  axios.post(\"http://localhost:3001/login\", {\n    username: user_data.username,\n    password: user_data.password\n  }).then(response => {\n    if (response.data.errors) {\n      dispatch({\n        type: 'ERRORS_FOUND',\n        payload: response.data.errors\n      });\n    } else {\n      localStorage.setItem(\"token\", response.data.jwt);\n      dispatch({\n        type: 'USER_SUCCESS',\n        payload: response.data.id\n      });\n      dispatch({\n        type: \"GET_MENTEES\",\n        payload: response.data.mentees\n      });\n    }\n  });\n};\nexport const userSignupAndCheck = user_data => dispatch => {\n  axios.post(\"http://localhost:3001/users\", {\n    username: user_data.username,\n    email: user_data.email,\n    password: user_data.password,\n    password_confirmation: user_data.password_confirmation\n  }).then(response => {\n    if (response.data.errors) {\n      dispatch({\n        type: 'ERRORS_FOUND',\n        payload: response.data.errors\n      });\n    } else {\n      localStorage.setItem(\"token\", response.data.jwt);\n      dispatch({\n        type: 'USER_SUCCESS',\n        payload: response.data.id\n      });\n      dispatch({\n        type: \"GET_MENTEES\",\n        payload: response.data.mentees\n      });\n    }\n  });\n};\nexport const changeUserPage = () => dispatch => {\n  dispatch({\n    type: 'CHANGE_PAGE'\n  });\n};\nexport const autoLogin = () => dispatch => {\n  axios.get(\"http://localhost:3001/auto_login\", {\n    headers: {\n      \"Authenticate\": localStorage.token\n    }\n  }).then(resp => {\n    dispatch({\n      type: 'USER_SUCCESS',\n      payload: resp.data.user.id\n    });\n    dispatch({\n      type: \"GET_MENTEES\",\n      payload: resp.data.mentees\n    });\n  });\n};\nexport const userLogout = user_data => dispatch => {\n  localStorage.removeItem(\"token\");\n  dispatch({\n    type: 'LOGOUT'\n  });\n};","map":{"version":3,"sources":["/mnt/c/Users/moust/Documents/Scripts/frontend/src/actions/user.js"],"names":["axios","defaults","withCredentials","userLoginAndCheck","user_data","dispatch","post","username","password","then","response","data","errors","type","payload","localStorage","setItem","jwt","id","mentees","userSignupAndCheck","email","password_confirmation","changeUserPage","autoLogin","get","headers","token","resp","user","userLogout","removeItem"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\naxios.defaults.withCredentials = true\r\nexport const userLoginAndCheck = (user_data) => dispatch => {\r\n    axios.post(\"http://localhost:3001/login\", {username: user_data.username, password: user_data.password})\r\n    .then(response => {\r\n        if (response.data.errors){\r\n            dispatch({ type: 'ERRORS_FOUND', payload: response.data.errors});\r\n        }\r\n        else {\r\n            localStorage.setItem(\"token\", response.data.jwt)\r\n            dispatch({type: 'USER_SUCCESS', payload: response.data.id })\r\n            dispatch({type: \"GET_MENTEES\", payload: response.data.mentees})\r\n        }\r\n    })\r\n} \r\n\r\nexport const userSignupAndCheck = (user_data) => dispatch => {\r\n    axios.post(\"http://localhost:3001/users\", {username: user_data.username, email: user_data.email, password: user_data.password, password_confirmation: user_data.password_confirmation})\r\n    .then(response => {\r\n        if (response.data.errors){\r\n            dispatch({ type: 'ERRORS_FOUND', payload: response.data.errors});\r\n        }\r\n        else {\r\n            localStorage.setItem(\"token\", response.data.jwt)\r\n            dispatch({type: 'USER_SUCCESS', payload: response.data.id })\r\n            dispatch({type: \"GET_MENTEES\", payload: response.data.mentees})\r\n        }\r\n    })\r\n} \r\n\r\nexport const changeUserPage = () => dispatch => {\r\n    dispatch({type: 'CHANGE_PAGE'})\r\n}\r\n\r\nexport const autoLogin = () => dispatch => {\r\n    axios.get(\"http://localhost:3001/auto_login\", {headers: {\"Authenticate\": localStorage.token}})\r\n    .then(resp => {\r\n        dispatch({type: 'USER_SUCCESS', payload: resp.data.user.id})\r\n        dispatch({type: \"GET_MENTEES\", payload: resp.data.mentees})\r\n    })\r\n}\r\n\r\nexport const userLogout = (user_data) => dispatch => {\r\n    localStorage.removeItem(\"token\");\r\n    dispatch({ type: 'LOGOUT' });\r\n} \r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}