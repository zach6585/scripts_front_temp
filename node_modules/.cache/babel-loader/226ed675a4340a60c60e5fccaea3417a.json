{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/moust/Documents/Scripts/frontend/src/components/scripts/script16/pages/page12.js\",\n    _s = $RefreshSig$();\n\nimport checkButSmaller from \"../../pictures/checkbutsmaller.png\";\nimport redXButSmaller from \"../../pictures/redxbutsmaller.png\";\nimport { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { toggleCommentMode } from '../../../../actions/comment';\nimport { goToSpecificPage } from \"../../../../actions/page\";\nimport Sidebar from '../../general pages/sidebar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Page12 = props => {\n  _s();\n\n  const [redXWords, setRedXWords] = useState(\"\");\n  const [sideBar, setSidebar] = useState(null);\n  const [blur, setBlur] = useState(\"\");\n  useEffect(() => {\n    setBlur(\"\");\n    setSidebar(null);\n  }, [props.sendingComment]);\n\n  const handleClick = (e, letter) => {\n    if (props.commentMode === 'commentModeOn') {\n      if (blur === \"\") {\n        setBlur(\"blur\");\n      } else {\n        setBlur(\"\");\n      }\n\n      if (sideBar === null) {\n        setSidebar( /*#__PURE__*/_jsxDEV(Sidebar, {\n          id_tag: e.target.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 28\n        }, this));\n      }\n\n      props.toggleCommentMode();\n    } else {\n      if (letter === 'c') {\n        goToSpecificPage(13);\n      } else if (letter === 'x') {\n        setRedXWords(\"Say goodbye and thank your mentee\");\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `sheet ${blur}`,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: `bold center ${props.commentMode}`,\n        id: \"h1_1\",\n        onClick: event => handleClick(event, \"\"),\n        children: \"Keeping in touch\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container_for_extra_small_margin\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            id: \"img_1\",\n            className: \"check\",\n            src: checkButSmaller,\n            alt: \"Check\",\n            onClick: event => handleClick(event, 'c')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"p_1\",\n            className: `what_does_your_mentor_say ${props.commentMode}`,\n            onClick: event => handleClick(event, \"\"),\n            children: \"You want to stay in touch with your mentee\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 136\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 26\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            id: \"img_2\",\n            className: \"redX\",\n            src: redXButSmaller,\n            alt: \"Red X\",\n            onClick: event => handleClick(event, 'x')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"p_2\",\n            className: `what_does_your_mentor_say ${props.commentMode}`,\n            onClick: event => handleClick(event, \"\"),\n            children: \"You do not want to stay in touch with your mentee\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 134\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"p_3\",\n            className: `choicePicked ${props.commentMode}`,\n            onClick: event => handleClick(event, \"\"),\n            children: redXWords\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Page12, \"LDJf2PY/RdOQZonMIRSAyNXkCxs=\");\n\n_c = Page12;\n\nconst mapStateToProps = state => {\n  return {\n    commentMode: state.comments.commentMode,\n    sendingComment: state.comments.sendingComment\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    toggleCommentMode: () => dispatch(toggleCommentMode()),\n    goToSpecificPage: pageNum => dispatch(goToSpecificPage(pageNum))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Page12);\n\nvar _c;\n\n$RefreshReg$(_c, \"Page12\");","map":{"version":3,"sources":["/mnt/c/Users/moust/Documents/Scripts/frontend/src/components/scripts/script16/pages/page12.js"],"names":["checkButSmaller","redXButSmaller","useState","useEffect","connect","toggleCommentMode","goToSpecificPage","Sidebar","Page12","props","redXWords","setRedXWords","sideBar","setSidebar","blur","setBlur","sendingComment","handleClick","e","letter","commentMode","target","id","event","mapStateToProps","state","comments","mapDispatchToProps","dispatch","pageNum"],"mappings":"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","sourcesContent":["import checkButSmaller from \"../../pictures/checkbutsmaller.png\";\r\nimport redXButSmaller from \"../../pictures/redxbutsmaller.png\";\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { toggleCommentMode } from '../../../../actions/comment';\r\nimport { goToSpecificPage } from \"../../../../actions/page\";\r\n\r\n\r\n\r\nimport Sidebar from '../../general pages/sidebar';\r\n\r\n\r\nconst Page12 = (props) =>{\r\n\r\n    const [redXWords, setRedXWords] = useState(\"\")\r\n    const [sideBar, setSidebar] = useState(null);\r\n    const [blur, setBlur] = useState(\"\");                         \r\n\r\n\r\n    useEffect(() => {\r\n        setBlur(\"\");\r\n        setSidebar(null);\r\n      }, [props.sendingComment]);\r\n\r\n\r\n    const handleClick = (e, letter) => {\r\n        if (props.commentMode === 'commentModeOn'){\r\n            if (blur === \"\"){\r\n                setBlur(\"blur\");\r\n            }\r\n            else {\r\n                setBlur(\"\");\r\n            }\r\n            if (sideBar === null){\r\n                setSidebar(<Sidebar id_tag={e.target.id} />)\r\n            }\r\n            props.toggleCommentMode();\r\n        }\r\n        else{\r\n            if (letter === 'c'){\r\n                goToSpecificPage(13);\r\n            }\r\n            else if (letter === 'x'){\r\n                setRedXWords(\"Say goodbye and thank your mentee\")\r\n            }\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={`sheet ${blur}`}>\r\n            <h1 className={`bold center ${props.commentMode}`} id=\"h1_1\" onClick={event => handleClick(event, \"\")}>Keeping in touch</h1>\r\n            <div className=\"left\">\r\n                <div className='container_for_extra_small_margin'>\r\n                    <img id=\"img_1\" className=\"check\" src={checkButSmaller} alt=\"Check\" onClick={(event) => handleClick(event, 'c')} /><p id=\"p_1\" className={`what_does_your_mentor_say ${props.commentMode}`} onClick={event => handleClick(event, \"\")}>You want to stay in touch with your mentee</p>\r\n                    <br/><br/>\r\n                    <img id=\"img_2\" className=\"redX\" src={redXButSmaller} alt=\"Red X\" onClick={(event) => handleClick(event, 'x')} /><p id=\"p_2\" className={`what_does_your_mentor_say ${props.commentMode}`} onClick={event => handleClick(event, \"\")}>You do not want to stay in touch with your mentee</p>\r\n                    <br/>\r\n                    <p id=\"p_3\" className={`choicePicked ${props.commentMode}`} onClick={event => handleClick(event, \"\")}>{redXWords}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return{\r\n        commentMode: state.comments.commentMode,\r\n        sendingComment: state.comments.sendingComment \r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return{\r\n        toggleCommentMode: () => dispatch(toggleCommentMode()),\r\n        goToSpecificPage: (pageNum) => dispatch(goToSpecificPage(pageNum))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Page12);"]},"metadata":{},"sourceType":"module"}