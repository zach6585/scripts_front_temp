{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/moust/Documents/Scripts/frontend/src/components/scripts/script3/pages/page7.js\",\n    _s = $RefreshSig$();\n\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { toggleCommentMode } from '../../../../actions/comment';\nimport { patchTexts, postTexts } from '../../../../actions/text';\nimport { useState, useEffect } from 'react';\nimport Sidebar from '../../general pages/sidebar';\nimport componentWrapper from '../../../../HOC';\nimport BodyDiagram from '../../general pages/bodydiagram';\nimport shareScreen from '../../pictures/sharescreen.png';\nimport stopShare from '../../pictures/stopshare.png';\nimport body from '../../pictures/body.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Page7 = props => {\n  _s();\n\n  const [sideBar, setSidebar] = useState(null);\n  const [blur, setBlur] = useState(\"\");\n  useEffect(() => {\n    setBlur(\"\");\n    setSidebar(null);\n  }, [props.sendingComment]);\n\n  const handleCommentClick = event => {\n    //Here is where you render the sidebar\n    if (props.commentMode === 'commentModeOn') {\n      if (blur === \"\") {\n        setBlur(\"blur\");\n      } else {\n        setBlur(\"\");\n      }\n\n      if (sideBar === null) {\n        setSidebar( /*#__PURE__*/_jsxDEV(Sidebar, {\n          id_tag: event.target.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 28\n        }, this));\n      }\n\n      props.toggleCommentMode();\n    }\n  };\n\n  const handleChange = event => {\n    const object_outcome = getObject(event.target.id);\n    object_outcome === \"\" ? props.postTexts({\n      value: event.target.value,\n      id_tag: event.target.id,\n      mentee_id: props.mentee_id,\n      script: props.script\n    }) : props.patchTexts({\n      value: event.target.value,\n      id_tag: event.target.id,\n      id: object_outcome.id,\n      mentee_id: props.mentee_id,\n      script: props.script\n    });\n  };\n\n  const getObject = current_id_tag => {\n    //Returns the object that has the specific id_tag\n    let current_text = props.texts.find(text_item => {\n      return text_item.id_tag === current_id_tag;\n    });\n    return current_text ? current_text : \"\";\n  };\n\n  const getValue = current_id_tag => {\n    //Same as getObject but instead it returns the value\n    let current_text_for_value = props.texts.find(text_item => {\n      return text_item.id_tag === current_id_tag;\n    });\n    return current_text_for_value ? current_text_for_value.value : \"\";\n  };\n\n  if (!props.imageClicked) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `sheet ${blur}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"body_page_main_div\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: `bold center ${props.commentMode}`,\n            id: \"h1\",\n            onClick: event => handleCommentClick(event),\n            children: \"Body scan\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 26\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"left container_for_medium_margin\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: props.commentMode,\n              id: \"p_1\",\n              onClick: event => handleCommentClick(event),\n              children: \"Now we will practice thinking about how your body feels using something called a body scan.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 30\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"div_with_body_image\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: props.commentMode,\n                id: \"p_1\",\n                onClick: event => handleCommentClick(event),\n                children: \"Our bodies can help us learn about our feelings and emotions. I will show you an example.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 34\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                target: \"_blank\",\n                to: \"/body\",\n                rel: \"noopener noreferrer\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"image\",\n                  alt: \"Body image\",\n                  src: body,\n                  name: \"body_image\",\n                  className: `body_diagram_button ${props.commentMode}`,\n                  id: \"body_image_button\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 93\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 34\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 30\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 30\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"instruction_box_number_1_page_7_script_3\",\n              className: `custom_svg demo_box container_for_medium_margin ${props.commentMode}`,\n              onClick: event => handleCommentClick(event),\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"top_line_in_instruction_box\",\n                children: [\"Click on the link: \", /*#__PURE__*/_jsxDEV(\"textarea\", {\n                  onChange: event => handleChange(event),\n                  id: \"text_box_number_1_page_7_script_3\",\n                  defaultValue: getValue(\"text_box_number_1_page_7_script_3\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 96\n                }, this), \" and share your screen. \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 34\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 34\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 39\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 44\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: shareScreen,\n                alt: \"Share screen\",\n                id: \"share_your_screen_page_7_script_3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 34\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 34\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 39\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Explain your example \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 34\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 30\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 30\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"instruction_box_number_2_page_7_script_3\",\n              className: `custom_svg demo_box container_for_large_margin ${props.commentMode}`,\n              onClick: event => handleCommentClick(event),\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"top_line_in_instruction_box\",\n                children: \"When you are done, stop screen sharing\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 34\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: stopShare,\n                alt: \"Stop sharing screen\",\n                id: \"stop_sharing_screen_page_7_script_3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 34\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 30\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 26\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 18\n      }, this), sideBar]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(BodyDiagram, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), sideBar]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this);\n  }\n};\n\n_s(Page7, \"XCCcHz0cDyTlGKX0ZuBjrdhgAv8=\");\n\n_c = Page7;\n\nconst mapStateToProps = state => {\n  return {\n    texts: state.texts.curatedTextsFromCurrentScript,\n    mentee_id: state.mentees.current_mentee_id,\n    script: state.texts.currentScript,\n    commentMode: state.comments.commentMode,\n    sendingComment: state.comments.sendingComment\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    patchTexts: text_data => dispatch(patchTexts(text_data)),\n    postTexts: text_data => dispatch(postTexts(text_data)),\n    toggleCommentMode: () => dispatch(toggleCommentMode())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(componentWrapper(Page7));\n\nvar _c;\n\n$RefreshReg$(_c, \"Page7\");","map":{"version":3,"sources":["/mnt/c/Users/moust/Documents/Scripts/frontend/src/components/scripts/script3/pages/page7.js"],"names":["connect","Link","toggleCommentMode","patchTexts","postTexts","useState","useEffect","Sidebar","componentWrapper","BodyDiagram","shareScreen","stopShare","body","Page7","props","sideBar","setSidebar","blur","setBlur","sendingComment","handleCommentClick","event","commentMode","target","id","handleChange","object_outcome","getObject","value","id_tag","mentee_id","script","current_id_tag","current_text","texts","find","text_item","getValue","current_text_for_value","imageClicked","mapStateToProps","state","curatedTextsFromCurrentScript","mentees","current_mentee_id","currentScript","comments","mapDispatchToProps","dispatch","text_data"],"mappings":"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","sourcesContent":["import { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { toggleCommentMode } from '../../../../actions/comment';\r\nimport { patchTexts, postTexts } from '../../../../actions/text';\r\n\r\nimport { useState, useEffect } from 'react';\r\n\r\nimport Sidebar from '../../general pages/sidebar';\r\nimport componentWrapper from '../../../../HOC'; \r\n\r\nimport BodyDiagram from '../../general pages/bodydiagram';\r\n\r\nimport shareScreen from '../../pictures/sharescreen.png';\r\nimport stopShare from '../../pictures/stopshare.png';\r\nimport body from '../../pictures/body.png';\r\n\r\n\r\nconst Page7 = (props) => {\r\n    \r\n    const [sideBar, setSidebar] = useState(null);\r\n    const [blur, setBlur] = useState(\"\");                  \r\n\r\n    useEffect(() => {\r\n        setBlur(\"\");\r\n        setSidebar(null);\r\n      }, [props.sendingComment]);\r\n\r\n    const handleCommentClick = (event) => {\r\n        //Here is where you render the sidebar\r\n        if (props.commentMode === 'commentModeOn'){\r\n            if (blur === \"\"){\r\n                setBlur(\"blur\");\r\n            }\r\n            else {\r\n                setBlur(\"\");\r\n            }\r\n            if (sideBar === null){\r\n                setSidebar(<Sidebar id_tag={event.target.id} />)\r\n            }\r\n            props.toggleCommentMode();\r\n        }\r\n    }\r\n\r\n    \r\n    const handleChange = (event) => {\r\n        const object_outcome = getObject(event.target.id)\r\n        object_outcome === \"\" ? \r\n        props.postTexts({value: event.target.value, id_tag: event.target.id, mentee_id: props.mentee_id, script: props.script})\r\n        :\r\n        props.patchTexts({value: event.target.value, id_tag: event.target.id, id: object_outcome.id, mentee_id: props.mentee_id, script: props.script})\r\n\r\n    }\r\n    \r\n    const getObject = (current_id_tag) => {\r\n        //Returns the object that has the specific id_tag\r\n        let current_text = props.texts.find(text_item => {return text_item.id_tag === current_id_tag})\r\n        return current_text ? current_text : \"\"\r\n    }\r\n\r\n    const getValue = (current_id_tag) => {\r\n        //Same as getObject but instead it returns the value\r\n        let current_text_for_value = props.texts.find(text_item => {return text_item.id_tag === current_id_tag})\r\n        return current_text_for_value ? current_text_for_value.value : \"\"\r\n    }\r\n    \r\n    if (!props.imageClicked){\r\n        return (\r\n            <div>\r\n                 <div className={`sheet ${blur}`}>\r\n                     <div className='body_page_main_div'>\r\n                         <h1 className={`bold center ${props.commentMode}`} id=\"h1\" onClick={event => handleCommentClick(event)}>Body scan</h1>\r\n                         <div className=\"left container_for_medium_margin\">\r\n                             \r\n                             <p className={props.commentMode} id=\"p_1\" onClick={event => handleCommentClick(event)}>Now we will practice thinking about how your body feels using something called a body scan.</p>\r\n                             <div className=\"div_with_body_image\">\r\n                                 <p className={props.commentMode} id=\"p_1\" onClick={event => handleCommentClick(event)}>Our bodies can help us learn about our feelings and emotions. I will show you an example.</p>\r\n                                 <Link target=\"_blank\" to=\"/body\" rel=\"noopener noreferrer\"><input type=\"image\" alt=\"Body image\" src={body} name=\"body_image\" className={`body_diagram_button ${props.commentMode}`} id=\"body_image_button\" /></Link>\r\n                             </div>\r\n                             <br/>\r\n                             <div id=\"instruction_box_number_1_page_7_script_3\" className={`custom_svg demo_box container_for_medium_margin ${props.commentMode}`} onClick={event => handleCommentClick(event)}>\r\n                                 <p className=\"top_line_in_instruction_box\">Click on the link: <textarea onChange={event => handleChange(event)} id=\"text_box_number_1_page_7_script_3\" defaultValue={getValue(\"text_box_number_1_page_7_script_3\")} /> and share your screen. </p>\r\n                                 <br/><br/><br/>\r\n                                 <img src={shareScreen} alt=\"Share screen\" id=\"share_your_screen_page_7_script_3\"/>\r\n                                 <br/><br/>\r\n                                 <p>Explain your example </p>\r\n                             </div>\r\n                             <br/>\r\n                             <div id=\"instruction_box_number_2_page_7_script_3\" className={`custom_svg demo_box container_for_large_margin ${props.commentMode}`} onClick={event => handleCommentClick(event)}>\r\n                                 <p className='top_line_in_instruction_box'>When you are done, stop screen sharing</p>\r\n                                 <img src={stopShare} alt=\"Stop sharing screen\" id=\"stop_sharing_screen_page_7_script_3\"/>\r\n                             </div>\r\n                         </div>\r\n                     </div>\r\n                 </div>\r\n                 {sideBar}\r\n             </div>\r\n        )\r\n    }\r\n    else{\r\n        return(\r\n            <div>\r\n                <BodyDiagram />\r\n                {sideBar}\r\n            </div>\r\n            \r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return{\r\n        texts: state.texts.curatedTextsFromCurrentScript,\r\n        mentee_id: state.mentees.current_mentee_id,\r\n        script: state.texts.currentScript,\r\n        commentMode: state.comments.commentMode,\r\n        sendingComment: state.comments.sendingComment\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return{\r\n        patchTexts: (text_data) => dispatch(patchTexts(text_data)),\r\n        postTexts: (text_data) => dispatch(postTexts(text_data)),\r\n        toggleCommentMode: () => dispatch(toggleCommentMode())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(componentWrapper(Page7));\r\n"]},"metadata":{},"sourceType":"module"}