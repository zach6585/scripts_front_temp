{"ast":null,"code":"/**\n * A localStorage-only method which uses localstorage and its 'storage'-event\n * This does not work inside of webworkers because they have no access to locastorage\n * This is basically implemented to support IE9 or your grandmothers toaster.\n * @link https://caniuse.com/#feat=namevalue-storage\n * @link https://caniuse.com/#feat=indexeddb\n */\nimport { ObliviousSet } from 'oblivious-set';\nimport { fillOptionsWithDefaults } from '../options';\nimport { sleep, randomToken, microSeconds as micro, isNode } from '../util';\nexport var microSeconds = micro;\nvar KEY_PREFIX = 'pubkey.broadcastChannel-';\nexport var type = 'localstorage';\n/**\n * copied from crosstab\n * @link https://github.com/tejacques/crosstab/blob/master/src/crosstab.js#L32\n */\n\nexport function getLocalStorage() {\n  var localStorage;\n  if (typeof window === 'undefined') return null;\n\n  try {\n    localStorage = window.localStorage;\n    localStorage = window['ie8-eventlistener/storage'] || window.localStorage;\n  } catch (e) {// New versions of Firefox throw a Security exception\n    // if cookies are disabled. See\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1028153\n  }\n\n  return localStorage;\n}\nexport function storageKey(channelName) {\n  return KEY_PREFIX + channelName;\n}\n/**\n* writes the new message to the storage\n* and fires the storage-event so other readers can find it\n*/\n\nexport function postMessage(channelState, messageJson) {\n  return new Promise(function (res) {\n    sleep().then(function () {\n      var key = storageKey(channelState.channelName);\n      var writeObj = {\n        token: randomToken(),\n        time: new Date().getTime(),\n        data: messageJson,\n        uuid: channelState.uuid\n      };\n      var value = JSON.stringify(writeObj);\n      getLocalStorage().setItem(key, value);\n      /**\n       * StorageEvent does not fire the 'storage' event\n       * in the window that changes the state of the local storage.\n       * So we fire it manually\n       */\n\n      var ev = document.createEvent('Event');\n      ev.initEvent('storage', true, true);\n      ev.key = key;\n      ev.newValue = value;\n      window.dispatchEvent(ev);\n      res();\n    });\n  });\n}\nexport function addStorageEventListener(channelName, fn) {\n  var key = storageKey(channelName);\n\n  var listener = function listener(ev) {\n    if (ev.key === key) {\n      fn(JSON.parse(ev.newValue));\n    }\n  };\n\n  window.addEventListener('storage', listener);\n  return listener;\n}\nexport function removeStorageEventListener(listener) {\n  window.removeEventListener('storage', listener);\n}\nexport function create(channelName, options) {\n  options = fillOptionsWithDefaults(options);\n\n  if (!canBeUsed()) {\n    throw new Error('BroadcastChannel: localstorage cannot be used');\n  }\n\n  var uuid = randomToken();\n  /**\n   * eMIs\n   * contains all messages that have been emitted before\n   * @type {ObliviousSet}\n   */\n\n  var eMIs = new ObliviousSet(options.localstorage.removeTimeout);\n  var state = {\n    channelName: channelName,\n    uuid: uuid,\n    eMIs: eMIs // emittedMessagesIds\n\n  };\n  state.listener = addStorageEventListener(channelName, function (msgObj) {\n    if (!state.messagesCallback) return; // no listener\n\n    if (msgObj.uuid === uuid) return; // own message\n\n    if (!msgObj.token || eMIs.has(msgObj.token)) return; // already emitted\n\n    if (msgObj.data.time && msgObj.data.time < state.messagesCallbackTime) return; // too old\n\n    eMIs.add(msgObj.token);\n    state.messagesCallback(msgObj.data);\n  });\n  return state;\n}\nexport function close(channelState) {\n  removeStorageEventListener(channelState.listener);\n}\nexport function onMessage(channelState, fn, time) {\n  channelState.messagesCallbackTime = time;\n  channelState.messagesCallback = fn;\n}\nexport function canBeUsed() {\n  if (isNode) return false;\n  var ls = getLocalStorage();\n  if (!ls) return false;\n\n  try {\n    var key = '__broadcastchannel_check';\n    ls.setItem(key, 'works');\n    ls.removeItem(key);\n  } catch (e) {\n    // Safari 10 in private mode will not allow write access to local\n    // storage and fail with a QuotaExceededError. See\n    // https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API#Private_Browsing_Incognito_modes\n    return false;\n  }\n\n  return true;\n}\nexport function averageResponseTime() {\n  var defaultTime = 120;\n  var userAgent = navigator.userAgent.toLowerCase();\n\n  if (userAgent.includes('safari') && !userAgent.includes('chrome')) {\n    // safari is much slower so this time is higher\n    return defaultTime * 2;\n  }\n\n  return defaultTime;\n}\nexport default {\n  create: create,\n  close: close,\n  onMessage: onMessage,\n  postMessage: postMessage,\n  canBeUsed: canBeUsed,\n  type: type,\n  averageResponseTime: averageResponseTime,\n  microSeconds: microSeconds\n};","map":{"version":3,"sources":["/mnt/c/Users/moust/Documents/Scripts/frontend/node_modules/broadcast-channel/dist/es/methods/localstorage.js"],"names":["ObliviousSet","fillOptionsWithDefaults","sleep","randomToken","microSeconds","micro","isNode","KEY_PREFIX","type","getLocalStorage","localStorage","window","e","storageKey","channelName","postMessage","channelState","messageJson","Promise","res","then","key","writeObj","token","time","Date","getTime","data","uuid","value","JSON","stringify","setItem","ev","document","createEvent","initEvent","newValue","dispatchEvent","addStorageEventListener","fn","listener","parse","addEventListener","removeStorageEventListener","removeEventListener","create","options","canBeUsed","Error","eMIs","localstorage","removeTimeout","state","msgObj","messagesCallback","has","messagesCallbackTime","add","close","onMessage","ls","removeItem","averageResponseTime","defaultTime","userAgent","navigator","toLowerCase","includes"],"mappings":"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","sourcesContent":["/**\n * A localStorage-only method which uses localstorage and its 'storage'-event\n * This does not work inside of webworkers because they have no access to locastorage\n * This is basically implemented to support IE9 or your grandmothers toaster.\n * @link https://caniuse.com/#feat=namevalue-storage\n * @link https://caniuse.com/#feat=indexeddb\n */\nimport { ObliviousSet } from 'oblivious-set';\nimport { fillOptionsWithDefaults } from '../options';\nimport { sleep, randomToken, microSeconds as micro, isNode } from '../util';\nexport var microSeconds = micro;\nvar KEY_PREFIX = 'pubkey.broadcastChannel-';\nexport var type = 'localstorage';\n/**\n * copied from crosstab\n * @link https://github.com/tejacques/crosstab/blob/master/src/crosstab.js#L32\n */\n\nexport function getLocalStorage() {\n  var localStorage;\n  if (typeof window === 'undefined') return null;\n\n  try {\n    localStorage = window.localStorage;\n    localStorage = window['ie8-eventlistener/storage'] || window.localStorage;\n  } catch (e) {// New versions of Firefox throw a Security exception\n    // if cookies are disabled. See\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1028153\n  }\n\n  return localStorage;\n}\nexport function storageKey(channelName) {\n  return KEY_PREFIX + channelName;\n}\n/**\n* writes the new message to the storage\n* and fires the storage-event so other readers can find it\n*/\n\nexport function postMessage(channelState, messageJson) {\n  return new Promise(function (res) {\n    sleep().then(function () {\n      var key = storageKey(channelState.channelName);\n      var writeObj = {\n        token: randomToken(),\n        time: new Date().getTime(),\n        data: messageJson,\n        uuid: channelState.uuid\n      };\n      var value = JSON.stringify(writeObj);\n      getLocalStorage().setItem(key, value);\n      /**\n       * StorageEvent does not fire the 'storage' event\n       * in the window that changes the state of the local storage.\n       * So we fire it manually\n       */\n\n      var ev = document.createEvent('Event');\n      ev.initEvent('storage', true, true);\n      ev.key = key;\n      ev.newValue = value;\n      window.dispatchEvent(ev);\n      res();\n    });\n  });\n}\nexport function addStorageEventListener(channelName, fn) {\n  var key = storageKey(channelName);\n\n  var listener = function listener(ev) {\n    if (ev.key === key) {\n      fn(JSON.parse(ev.newValue));\n    }\n  };\n\n  window.addEventListener('storage', listener);\n  return listener;\n}\nexport function removeStorageEventListener(listener) {\n  window.removeEventListener('storage', listener);\n}\nexport function create(channelName, options) {\n  options = fillOptionsWithDefaults(options);\n\n  if (!canBeUsed()) {\n    throw new Error('BroadcastChannel: localstorage cannot be used');\n  }\n\n  var uuid = randomToken();\n  /**\n   * eMIs\n   * contains all messages that have been emitted before\n   * @type {ObliviousSet}\n   */\n\n  var eMIs = new ObliviousSet(options.localstorage.removeTimeout);\n  var state = {\n    channelName: channelName,\n    uuid: uuid,\n    eMIs: eMIs // emittedMessagesIds\n\n  };\n  state.listener = addStorageEventListener(channelName, function (msgObj) {\n    if (!state.messagesCallback) return; // no listener\n\n    if (msgObj.uuid === uuid) return; // own message\n\n    if (!msgObj.token || eMIs.has(msgObj.token)) return; // already emitted\n\n    if (msgObj.data.time && msgObj.data.time < state.messagesCallbackTime) return; // too old\n\n    eMIs.add(msgObj.token);\n    state.messagesCallback(msgObj.data);\n  });\n  return state;\n}\nexport function close(channelState) {\n  removeStorageEventListener(channelState.listener);\n}\nexport function onMessage(channelState, fn, time) {\n  channelState.messagesCallbackTime = time;\n  channelState.messagesCallback = fn;\n}\nexport function canBeUsed() {\n  if (isNode) return false;\n  var ls = getLocalStorage();\n  if (!ls) return false;\n\n  try {\n    var key = '__broadcastchannel_check';\n    ls.setItem(key, 'works');\n    ls.removeItem(key);\n  } catch (e) {\n    // Safari 10 in private mode will not allow write access to local\n    // storage and fail with a QuotaExceededError. See\n    // https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API#Private_Browsing_Incognito_modes\n    return false;\n  }\n\n  return true;\n}\nexport function averageResponseTime() {\n  var defaultTime = 120;\n  var userAgent = navigator.userAgent.toLowerCase();\n\n  if (userAgent.includes('safari') && !userAgent.includes('chrome')) {\n    // safari is much slower so this time is higher\n    return defaultTime * 2;\n  }\n\n  return defaultTime;\n}\nexport default {\n  create: create,\n  close: close,\n  onMessage: onMessage,\n  postMessage: postMessage,\n  canBeUsed: canBeUsed,\n  type: type,\n  averageResponseTime: averageResponseTime,\n  microSeconds: microSeconds\n};"]},"metadata":{},"sourceType":"module"}