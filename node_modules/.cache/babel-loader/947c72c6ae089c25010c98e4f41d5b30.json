{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/moust/Documents/Scripts/frontend/src/components/scripts/script4/pages/page4.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport { connect } from 'react-redux';\nimport checkButSmaller from \"../../pictures/checkbutsmaller.png\";\nimport redXButSmaller from \"../../pictures/redxbutsmaller.png\";\nimport { patchTexts, postTexts } from '../../../../actions/text';\nimport { toggleCommentMode } from '../../../../actions/comment';\nimport { useState, useEffect } from 'react';\nimport Sidebar from '../../general pages/sidebar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Page4 = props => {\n  _s();\n\n  const [sideBar, setSidebar] = useState(null);\n  const [blur, setBlur] = useState(\"\");\n  const [words_that_appear_when_you_click_green_check, setCheckWords] = useState(null);\n  const [words_that_appear_when_you_click_red_x, setXWords] = useState(null);\n  useEffect(() => {\n    setBlur(\"\");\n    setSidebar(null);\n  }, [props.sendingComment]);\n\n  const handleClick = (e, letter) => {\n    if (props.commentMode === 'commentModeOn') {\n      if (blur === \"\") {\n        setBlur(\"blur\");\n      } else {\n        setBlur(\"\");\n      }\n\n      if (sideBar === null) {\n        setSidebar( /*#__PURE__*/_jsxDEV(Sidebar, {\n          id_tag: e.target.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 28\n        }, this));\n      }\n\n      props.toggleCommentMode();\n    } else {\n      if (letter === 'c') {\n        setCheckWords( /*#__PURE__*/_jsxDEV(GreenCheckClicked, {\n          props: props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 31\n        }, this));\n        setXWords(null);\n      } else if (letter === 'x') {\n        setCheckWords(null);\n        setXWords( /*#__PURE__*/_jsxDEV(RedXClicked, {\n          props: props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 27\n        }, this));\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `sheet ${blur}`,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: `bold center ${props.commentMode}`,\n        id: \"h1\",\n        onClick: event => handleClick(event, \"\"),\n        children: \"Icebreaker game/fun activity\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left container_for_medium_margin\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: props.commentMode,\n          id: \"p_1\",\n          onClick: event => handleClick(event, \"\"),\n          children: \"Would you like to do another scavenger hunt show and tell? \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container_for_medium_margin\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: `check ${props.commentMode}`,\n            id: \"img_1\",\n            src: checkButSmaller,\n            alt: \"Check\",\n            onClick: event => handleClick(event, 'c')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: `what_does_your_mentor_say ${props.commentMode}`,\n            id: \"p_2\",\n            onClick: event => handleClick(event, \"\"),\n            children: \"Your mentee says yes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 163\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"choicePicked\",\n            children: words_that_appear_when_you_click_green_check\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 30\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            className: `redX ${props.commentMode}`,\n            id: \"img_2\",\n            src: redXButSmaller,\n            alt: \"Red X\",\n            onClick: event => handleClick(event, 'x')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: `what_does_your_mentor_say ${props.commentMode}`,\n            id: \"p_3\",\n            onClick: event => handleClick(event, \"\"),\n            children: \"Your mentee says no\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 161\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"choicePicked\",\n            children: words_that_appear_when_you_click_red_x\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), sideBar]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Page4, \"/DDtkCHaNDCeneenqDy7p+hlVeY=\");\n\n_c = Page4;\n\nconst GreenCheckClicked = props => {\n  _s2();\n\n  const [sideBar, setSidebar] = useState(null);\n  const [blur, setBlur] = useState(\"\");\n\n  const handleCommentClick = event => {\n    //Here is where you render the sidebar\n    if (props.commentMode === 'commentModeOn') {\n      if (blur === \"\") {\n        setBlur(\"blur\");\n      } else {\n        setBlur(\"\");\n      }\n\n      if (sideBar === null) {\n        setSidebar( /*#__PURE__*/_jsxDEV(Sidebar, {\n          id_tag: event.target.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 28\n        }, this));\n      }\n\n      props.toggleCommentMode();\n    }\n  };\n\n  const handleChange = event => {\n    const object_outcome = getObject(event.target.id);\n    object_outcome === \"\" ? props.props.postTexts({\n      value: event.target.value,\n      id_tag: event.target.id,\n      mentee_id: props.props.mentee_id,\n      script: props.script\n    }) : props.props.patchTexts({\n      value: event.target.value,\n      id_tag: event.target.id,\n      id: object_outcome.id,\n      mentee_id: props.props.mentee_id,\n      script: props.script\n    });\n  };\n\n  const getObject = current_id_tag => {\n    //Returns the object that has the specific id_tag\n    let current_text = props.props.texts.find(text_item => {\n      return text_item.id_tag === current_id_tag;\n    });\n    return current_text ? current_text : \"\";\n  };\n\n  const getValue = current_id_tag => {\n    //Same as getObject but instead it returns the value\n    let current_text_for_value = props.props.texts.find(text_item => {\n      return text_item.id_tag === current_id_tag;\n    });\n    return current_text_for_value ? current_text_for_value.value : \"\";\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: `what_does_your_mentor_say ${props.commentMode}`,\n        id: \"p_4\",\n        onClick: event => handleCommentClick(event),\n        children: [\"Can you find something in your house that you worked really hard to make?\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 94\n        }, this), \"If you can't find something that you made, can you find something that you worked hard to earn or to save up to buy?\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 137\n        }, this), \"I'll put my timer on for 5 minutes and I'll call out when our time is up.  If you do need a few more minutes after the timer goes off, just tell me out loud that you're still looking so I know you need some more time! \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 239\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"instruction_box_number_1_page_4_script_4\",\n        className: `custom_svg demo_box container_for_medium_margin ${props.commentMode}`,\n        onClick: event => handleCommentClick(event),\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"top_line_in_instruction_box\",\n          children: [\"Before sharing your idea, wait to see if the mentee is come up with an example on their own. Then share:  Here is what I made.  This is a \", /*#__PURE__*/_jsxDEV(\"textarea\", {\n            onChange: event => handleChange(event),\n            id: \"text_box_number_1_page_4_script_4\",\n            defaultValue: getValue(\"text_box_number_1_page_4_script_4\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 163\n          }, this), \"and I made it in / for / when \", /*#__PURE__*/_jsxDEV(\"textarea\", {\n            onChange: event => handleChange(event),\n            id: \"text_box_number_2_page_4_script_4\",\n            defaultValue: getValue(\"text_box_number_2_page_4_script_4\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 55\n          }, this), \". \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 209\n          }, this), \"When mentee shows you their item, validate them. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 74\n          }, this), \"You can also ask them question to learn more about the item they showed you\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(GreenCheckClicked, \"+CaA1yjVVLvFMK78lyoSbgktnAQ=\");\n\n_c2 = GreenCheckClicked;\n\nconst RedXClicked = props => {\n  _s3();\n\n  const [sideBar, setSidebar] = useState(null);\n  const [blur, setBlur] = useState(\"\");\n\n  const handleCommentClick = event => {\n    //Here is where you render the sidebar\n    if (props.commentMode === 'commentModeOn') {\n      if (blur === \"\") {\n        setBlur(\"blur\");\n      } else {\n        setBlur(\"\");\n      }\n\n      if (sideBar === null) {\n        setSidebar( /*#__PURE__*/_jsxDEV(Sidebar, {\n          id_tag: event.target.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 28\n        }, this));\n      }\n\n      props.toggleCommentMode();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: `what_does_your_mentor_say ${props.commentMode}`,\n        id: \"p_5\",\n        onClick: event => handleCommentClick(event),\n        children: [\"Ok! \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 25\n        }, this), \"Let's share our thumbs up and thumbs down for the week. Does that sound good? Or, do you have another idea for a short game? \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 146\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"instruction_box_number_2_page_4_script_4\",\n        className: `custom_svg demo_box container_for_medium_margin ${props.commentMode}`,\n        onClick: event => handleCommentClick(event),\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"If they have an idea for another short game, you can do that. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 87\n          }, this), \"If they do not, explain: \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 50\n          }, this), \"Thumbs up is something that made you happy, or something about the week that you enjoyed/ that felt good.  \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 132\n          }, this), \"A thumbs down can be any stress or anything that's upsetting about this week.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 102\n          }, this), \"Remember to show understanding when your mentee shares.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 80\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 9\n  }, this);\n};\n\n_s3(RedXClicked, \"+CaA1yjVVLvFMK78lyoSbgktnAQ=\");\n\n_c3 = RedXClicked;\n\nconst mapStateToProps = state => {\n  return {\n    texts: state.texts.curatedTextsFromCurrentScript,\n    mentee_id: state.mentees.current_mentee_id,\n    script: state.texts.currentScript,\n    commentMode: state.comments.commentMode,\n    sendingComment: state.comments.sendingComment\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    patchTexts: text_data => dispatch(patchTexts(text_data)),\n    postTexts: text_data => dispatch(postTexts(text_data)),\n    toggleCommentMode: () => dispatch(toggleCommentMode())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Page4);\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Page4\");\n$RefreshReg$(_c2, \"GreenCheckClicked\");\n$RefreshReg$(_c3, \"RedXClicked\");","map":{"version":3,"sources":["/mnt/c/Users/moust/Documents/Scripts/frontend/src/components/scripts/script4/pages/page4.js"],"names":["connect","checkButSmaller","redXButSmaller","patchTexts","postTexts","toggleCommentMode","useState","useEffect","Sidebar","Page4","props","sideBar","setSidebar","blur","setBlur","words_that_appear_when_you_click_green_check","setCheckWords","words_that_appear_when_you_click_red_x","setXWords","sendingComment","handleClick","e","letter","commentMode","target","id","event","GreenCheckClicked","handleCommentClick","handleChange","object_outcome","getObject","value","id_tag","mentee_id","script","current_id_tag","current_text","texts","find","text_item","getValue","current_text_for_value","RedXClicked","mapStateToProps","state","curatedTextsFromCurrentScript","mentees","current_mentee_id","currentScript","comments","mapDispatchToProps","dispatch","text_data"],"mappings":"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","sourcesContent":["import { connect } from 'react-redux';\r\n\r\nimport checkButSmaller from \"../../pictures/checkbutsmaller.png\";\r\nimport redXButSmaller from \"../../pictures/redxbutsmaller.png\";\r\n\r\nimport { patchTexts, postTexts } from '../../../../actions/text';\r\nimport { toggleCommentMode } from '../../../../actions/comment';\r\n\r\nimport { useState, useEffect } from 'react';\r\n\r\nimport Sidebar from '../../general pages/sidebar';\r\n\r\n\r\nconst Page4 = (props) => {\r\n\r\n    const [sideBar, setSidebar] = useState(null);\r\n    const [blur, setBlur] = useState(\"\");    \r\n    const [words_that_appear_when_you_click_green_check, setCheckWords] = useState(null);\r\n    const [words_that_appear_when_you_click_red_x, setXWords] = useState(null);                     \r\n\r\n\r\n    useEffect(() => {\r\n        setBlur(\"\");\r\n        setSidebar(null);\r\n      }, [props.sendingComment]);\r\n\r\n    \r\n    const handleClick = (e, letter) => {\r\n        if (props.commentMode === 'commentModeOn'){\r\n            if (blur === \"\"){\r\n                setBlur(\"blur\");\r\n            }\r\n            else {\r\n                setBlur(\"\");\r\n            }\r\n            if (sideBar === null){\r\n                setSidebar(<Sidebar id_tag={e.target.id} />)\r\n            }\r\n            props.toggleCommentMode();\r\n        }\r\n        else{\r\n            if (letter === 'c'){\r\n                setCheckWords(<GreenCheckClicked props={props} />);\r\n                setXWords(null);\r\n            }\r\n            else if (letter === 'x'){\r\n                setCheckWords(null);\r\n                setXWords(<RedXClicked props={props} />);\r\n            }\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={`sheet ${blur}`}>\r\n                <h1 className={`bold center ${props.commentMode}`} id=\"h1\" onClick={event => handleClick(event, \"\")}>Icebreaker game/fun activity</h1>\r\n                <div className=\"left container_for_medium_margin\">\r\n                    <p className={props.commentMode} id=\"p_1\" onClick={event => handleClick(event, \"\")}>Would you like to do another scavenger hunt show and tell? </p>\r\n                    <div className=\"container_for_medium_margin\">\r\n                        <img className={`check ${props.commentMode}`} id=\"img_1\" src={checkButSmaller} alt=\"Check\" onClick={(event) => handleClick(event, 'c')} /><p className={`what_does_your_mentor_say ${props.commentMode}`} id=\"p_2\" onClick={event => handleClick(event, \"\")}>Your mentee says yes</p>\r\n                        <br/>\r\n                        <div className=\"choicePicked\">{words_that_appear_when_you_click_green_check}</div>\r\n                        <br/><br/>\r\n                        <img className={`redX ${props.commentMode}`} id=\"img_2\" src={redXButSmaller} alt=\"Red X\" onClick={(event) => handleClick(event, 'x')} /><p className={`what_does_your_mentor_say ${props.commentMode}`} id=\"p_3\" onClick={event => handleClick(event, \"\")}>Your mentee says no</p>\r\n                        <br/>\r\n                        <div className=\"choicePicked\">{words_that_appear_when_you_click_red_x}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {sideBar}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst GreenCheckClicked = (props) => {\r\n\r\n    const [sideBar, setSidebar] = useState(null);\r\n    const [blur, setBlur] = useState(\"\"); \r\n\r\n    const handleCommentClick = (event) => {\r\n        //Here is where you render the sidebar\r\n        if (props.commentMode === 'commentModeOn'){\r\n            if (blur === \"\"){\r\n                setBlur(\"blur\");\r\n            }\r\n            else {\r\n                setBlur(\"\");\r\n            }\r\n            if (sideBar === null){\r\n                setSidebar(<Sidebar id_tag={event.target.id} />)\r\n            }\r\n            props.toggleCommentMode();\r\n        }\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        const object_outcome = getObject(event.target.id)\r\n        object_outcome === \"\" ? \r\n        props.props.postTexts({value: event.target.value, id_tag: event.target.id, mentee_id: props.props.mentee_id, script: props.script})\r\n        :\r\n        props.props.patchTexts({value: event.target.value, id_tag: event.target.id, id: object_outcome.id, mentee_id: props.props.mentee_id, script: props.script})\r\n\r\n    }\r\n    \r\n    const getObject = (current_id_tag) => {\r\n        //Returns the object that has the specific id_tag\r\n        let current_text = props.props.texts.find(text_item => {return text_item.id_tag === current_id_tag})\r\n        return current_text ? current_text : \"\"\r\n    }\r\n\r\n    const getValue = (current_id_tag) => {\r\n        //Same as getObject but instead it returns the value\r\n        let current_text_for_value = props.props.texts.find(text_item => {return text_item.id_tag === current_id_tag})\r\n        return current_text_for_value ? current_text_for_value.value : \"\"\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <div>\r\n                <p className={`what_does_your_mentor_say ${props.commentMode}`} id=\"p_4\" onClick={event => handleCommentClick(event)}>\r\n                    Can you find something in your house that you worked really hard to make?<br />\r\n                    If you can't find something that you made, can you find something that you worked hard to earn or to save up to buy?<br/>\r\n                    I'll put my timer on for 5 minutes and I'll call out when our time is up.  If you do need a few more minutes after the timer goes off, just tell me out loud that you're still looking so I know you need some more time! <br/>\r\n                </p>\r\n                <div id=\"instruction_box_number_1_page_4_script_4\" className={`custom_svg demo_box container_for_medium_margin ${props.commentMode}`} onClick={event => handleCommentClick(event)}>\r\n                    <p className='top_line_in_instruction_box'>\r\n                        Before sharing your idea, wait to see if the mentee is come up with an example on their own. Then share:  Here is what I made.  This is a <textarea onChange={event => handleChange(event)} id=\"text_box_number_1_page_4_script_4\" defaultValue={getValue(\"text_box_number_1_page_4_script_4\")} />  \r\n                        and I made it in / for / when <textarea onChange={event => handleChange(event)} id=\"text_box_number_2_page_4_script_4\" defaultValue={getValue(\"text_box_number_2_page_4_script_4\")} />. <br/>\r\n                        When mentee shows you their item, validate them. <br/>\r\n                        You can also ask them question to learn more about the item they showed you \r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst RedXClicked = props => {\r\n\r\n    const [sideBar, setSidebar] = useState(null);\r\n    const [blur, setBlur] = useState(\"\"); \r\n\r\n    const handleCommentClick = (event) => {\r\n        //Here is where you render the sidebar\r\n        if (props.commentMode === 'commentModeOn'){\r\n            if (blur === \"\"){\r\n                setBlur(\"blur\");\r\n            }\r\n            else {\r\n                setBlur(\"\");\r\n            }\r\n            if (sideBar === null){\r\n                setSidebar(<Sidebar id_tag={event.target.id} />)\r\n            }\r\n            props.toggleCommentMode();\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <div>\r\n                <p className={`what_does_your_mentor_say ${props.commentMode}`} id=\"p_5\" onClick={event => handleCommentClick(event)}>\r\n                    Ok! <br/>\r\n                    Let's share our thumbs up and thumbs down for the week. Does that sound good? Or, do you have another idea for a short game? <br/>\r\n                </p>\r\n                <div id=\"instruction_box_number_2_page_4_script_4\" className={`custom_svg demo_box container_for_medium_margin ${props.commentMode}`} onClick={event => handleCommentClick(event)}>\r\n                    <p>\r\n                        If they have an idea for another short game, you can do that. <br/>\r\n                        If they do not, explain: <br/>\r\n\r\n                        Thumbs up is something that made you happy, or something about the week that you enjoyed/ that felt good.  <br/> \r\n\r\n                        A thumbs down can be any stress or anything that's upsetting about this week.<br/>\r\n\r\n                        Remember to show understanding when your mentee shares.<br/>\r\n                    </p>  \r\n                </div>\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return{\r\n        texts: state.texts.curatedTextsFromCurrentScript,\r\n        mentee_id: state.mentees.current_mentee_id,\r\n        script: state.texts.currentScript,\r\n        commentMode: state.comments.commentMode,\r\n        sendingComment: state.comments.sendingComment \r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return{\r\n        patchTexts: (text_data) => dispatch(patchTexts(text_data)),\r\n        postTexts: (text_data) => dispatch(postTexts(text_data)),\r\n        toggleCommentMode: () => dispatch(toggleCommentMode())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Page4);\r\n "]},"metadata":{},"sourceType":"module"}