{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/moust/Documents/Scripts/frontend/src/components/scripts/script4/pages/page4/greencheckclicked.js\";\nimport { patchTexts, postTexts } from '../../../../../actions/text';\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst GreenCheckClicked = props => {\n  const handleChange = event => {\n    const object_outcome = getObject(event.target.id);\n    object_outcome === \"\" ? props.postTexts({\n      value: event.target.value,\n      id_tag: event.target.id,\n      mentee_id: props.mentee_id,\n      script: props.script\n    }) : props.patchTexts({\n      value: event.target.value,\n      id_tag: event.target.id,\n      id: object_outcome.id,\n      mentee_id: props.mentee_id,\n      script: props.script\n    });\n  };\n\n  const getObject = current_id_tag => {\n    //Returns the object that has the specific id_tag\n    let current_text = props.texts.find(text_item => {\n      return text_item.id_tag === current_id_tag;\n    });\n    return current_text ? current_text : \"\";\n  };\n\n  const getValue = current_id_tag => {\n    //Same as getObject but instead it returns the value\n    let current_text_for_value = props.texts.find(text_item => {\n      return text_item.id_tag === current_id_tag;\n    });\n    return current_text_for_value ? current_text_for_value.value : \"\";\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Can you find something in your house that you worked really hard to make?\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 90\n      }, this), \"If you can't find something that you made, can you find something that you worked hard to earn or to save up to buy?\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 133\n      }, this), \"I'll put my timer on for 5 minutes and I'll call out when our time is up.  If you do need a few more minutes after the timer goes off, just tell me out loud that you're still looking so I know you need some more time! \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 235\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"instruction_box_number_1_page_4_script_4\",\n      className: \"custom_svg demo_box container_for_medium_margin\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"top_line_in_instruction_box\",\n        children: [\"Before sharing your idea, wait to see if the mentee is come up with an example on their own. Then share:  Here is what I made.  This is a \", /*#__PURE__*/_jsxDEV(\"textarea\", {\n          onChange: event => handleChange(event),\n          id: \"text_box_number_1_page_4_script_4\",\n          defaultValue: getValue(\"text_box_number_1_page_4_script_4\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 159\n        }, this), \"and I made it in / for / when \", /*#__PURE__*/_jsxDEV(\"textarea\", {\n          onChange: event => handleChange(event),\n          id: \"text_box_number_2_page_4_script_4\",\n          defaultValue: getValue(\"text_box_number_2_page_4_script_4\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 51\n        }, this), \". \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 205\n        }, this), \"When mentee shows you their item, validate them. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 70\n        }, this), \"You can also ask them question to learn more about the item they showed you\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\n_c = GreenCheckClicked;\n\nconst mapStateToProps = state => {\n  return {\n    texts: state.texts.curatedTextsFromCurrentScript,\n    mentee_id: state.mentees.current_mentee_id,\n    script: state.texts.currentScript\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    patchTexts: text_data => dispatch(patchTexts(text_data)),\n    postTexts: text_data => dispatch(postTexts(text_data))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GreenCheckClicked);\n\nvar _c;\n\n$RefreshReg$(_c, \"GreenCheckClicked\");","map":{"version":3,"sources":["/mnt/c/Users/moust/Documents/Scripts/frontend/src/components/scripts/script4/pages/page4/greencheckclicked.js"],"names":["patchTexts","postTexts","connect","GreenCheckClicked","props","handleChange","event","object_outcome","getObject","target","id","value","id_tag","mentee_id","script","current_id_tag","current_text","texts","find","text_item","getValue","current_text_for_value","mapStateToProps","state","curatedTextsFromCurrentScript","mentees","current_mentee_id","currentScript","mapDispatchToProps","dispatch","text_data"],"mappings":"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","sourcesContent":["import { patchTexts, postTexts } from '../../../../../actions/text';\r\nimport { connect } from 'react-redux';\r\n\r\nconst GreenCheckClicked = (props) => {\r\n\r\n    const handleChange = (event) => {\r\n        const object_outcome = getObject(event.target.id)\r\n        object_outcome === \"\" ? \r\n        props.postTexts({value: event.target.value, id_tag: event.target.id, mentee_id: props.mentee_id, script: props.script})\r\n        :\r\n        props.patchTexts({value: event.target.value, id_tag: event.target.id, id: object_outcome.id, mentee_id: props.mentee_id, script: props.script})\r\n\r\n    }\r\n    \r\n    const getObject = (current_id_tag) => {\r\n        //Returns the object that has the specific id_tag\r\n        let current_text = props.texts.find(text_item => {return text_item.id_tag === current_id_tag})\r\n        return current_text ? current_text : \"\"\r\n    }\r\n\r\n    const getValue = (current_id_tag) => {\r\n        //Same as getObject but instead it returns the value\r\n        let current_text_for_value = props.texts.find(text_item => {return text_item.id_tag === current_id_tag})\r\n        return current_text_for_value ? current_text_for_value.value : \"\"\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <p>\r\n                Can you find something in your house that you worked really hard to make?<br />\r\n                If you can't find something that you made, can you find something that you worked hard to earn or to save up to buy?<br/>\r\n                I'll put my timer on for 5 minutes and I'll call out when our time is up.  If you do need a few more minutes after the timer goes off, just tell me out loud that you're still looking so I know you need some more time! <br/>\r\n            </p>\r\n            <div id=\"instruction_box_number_1_page_4_script_4\" className=\"custom_svg demo_box container_for_medium_margin\">\r\n                <p className='top_line_in_instruction_box'>\r\n                    Before sharing your idea, wait to see if the mentee is come up with an example on their own. Then share:  Here is what I made.  This is a <textarea onChange={event => handleChange(event)} id=\"text_box_number_1_page_4_script_4\" defaultValue={getValue(\"text_box_number_1_page_4_script_4\")} />  \r\n                    and I made it in / for / when <textarea onChange={event => handleChange(event)} id=\"text_box_number_2_page_4_script_4\" defaultValue={getValue(\"text_box_number_2_page_4_script_4\")} />. <br/>\r\n                    When mentee shows you their item, validate them. <br/>\r\n                    You can also ask them question to learn more about the item they showed you \r\n                </p>\r\n            </div>\r\n        </div>\r\n            \r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return{\r\n        texts: state.texts.curatedTextsFromCurrentScript,\r\n        mentee_id: state.mentees.current_mentee_id,\r\n        script: state.texts.currentScript\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return{\r\n        patchTexts: (text_data) => dispatch(patchTexts(text_data)),\r\n        postTexts: (text_data) => dispatch(postTexts(text_data))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(GreenCheckClicked);"]},"metadata":{},"sourceType":"module"}