{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/moust/Documents/Scripts/frontend/src/components/scripts/script1/pages/page17.js\",\n    _s = $RefreshSig$();\n\nimport { connect } from 'react-redux';\nimport { patchTexts, postTexts } from '../../../../actions/text';\nimport { toggleCommentMode } from '../../../../actions/comment';\nimport { useState, useEffect } from 'react';\nimport Sidebar from '../../general pages/sidebar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Page17 = props => {\n  _s();\n\n  const [sideBar, setSidebar] = useState(null);\n  const [blur, setBlur] = useState(\"\");\n  useEffect(() => {\n    setBlur(\"\");\n    setSidebar(null);\n  }, [props.sendingComment]);\n  useEffect(() => {\n    setBlur(\"\");\n    setSidebar(null);\n  }, [props.sendingComment]);\n\n  const handleCommentClick = event => {\n    //Here is where you render the sidebar\n    if (props.commentMode === 'commentModeOn') {\n      if (blur === \"\") {\n        setBlur(\"blur\");\n      } else {\n        setBlur(\"\");\n      }\n\n      if (sideBar === null) {\n        setSidebar( /*#__PURE__*/_jsxDEV(Sidebar, {\n          id_tag: event.target.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 28\n        }, this));\n      }\n\n      props.toggleCommentMode();\n    }\n  };\n\n  const handleChange = event => {\n    const object_outcome = getObject(event.target.id);\n    object_outcome === \"\" ? props.postTexts({\n      value: event.target.value,\n      id_tag: event.target.id,\n      mentee_id: props.mentee_id,\n      script: props.script\n    }) : props.patchTexts({\n      value: event.target.value,\n      id_tag: event.target.id,\n      id: object_outcome.id,\n      mentee_id: props.mentee_id,\n      script: props.script\n    });\n  };\n\n  const getObject = current_id_tag => {\n    //Returns the object that has the specific id_tag\n    let current_text = props.texts.find(text_item => {\n      return text_item.id_tag === current_id_tag;\n    });\n    return current_text ? current_text : \"\";\n  };\n\n  const getValue = current_id_tag => {\n    //Same as getObject but instead it returns the value\n    let current_text_for_value = props.texts.find(text_item => {\n      return text_item.id_tag === current_id_tag;\n    });\n    return current_text_for_value ? current_text_for_value.value : \"\";\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `sheet ${blur}`,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: `bold center ${props.commentMode}`,\n        id: \"h1\",\n        children: \"Reminders about mentoring\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container_for_medium_margin\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: props.commentMode,\n            onClick: event => handleCommentClick(event),\n            id: \"p_1\",\n            children: [\"It was really great to talk with you. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 67\n            }, this), \"Remember to do your mood logs every day. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 70\n            }, this), \"The mood logs will help you keep track of your mental health every day. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 101\n            }, this), \"They will also help us make sure we can help you.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 78\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 83\n            }, this), \"Thank you for meeting with me! I am excited to get to know you more.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 97\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container_for_small_margin\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: props.commentMode,\n            onClick: event => handleCommentClick(event),\n            id: \"p_2\",\n            children: [\"We will meet again on : \", /*#__PURE__*/_jsxDEV(\"textarea\", {\n              onChange: event => handleChange(event),\n              id: \"text_box_number_1_page_17_script_1\",\n              defaultValue: getValue(\"text_box_number_1_page_17_script_1\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 53\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: props.commentMode,\n            onClick: event => handleCommentClick(event),\n            id: \"p_3\",\n            children: [\"I am going to \", /*#__PURE__*/_jsxDEV(\"textarea\", {\n              onChange: event => handleChange(event),\n              id: \"text_box_number_2_page_17_script_1\",\n              defaultValue: getValue(\"text_box_number_2_page_17_script_1\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 43\n            }, this), \" so I can remember our next meeting.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: props.commentMode,\n            onClick: event => handleCommentClick(event),\n            id: \"p_4\",\n            children: \"How will you remember our next meeting?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"instruction_box_number_1_page_13_script_1\",\n          className: `ital custom_svg demo_box container_for_small_margin ${props.commentMode}`,\n          onClick: event => handleCommentClick(event),\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"top_line_in_instruction_box\",\n            children: [\"Send your mentee the contract link: \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 63\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              onChange: event => handleChange(event),\n              id: \"text_box_number_1_page_13_script_1\",\n              defaultValue: getValue(\"text_box_number_1_page_13_script_1\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 181\n            }, this), \"Ask them to share their screen. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 59\n            }, this), \"Read each question to your mentee. If your mentee says they want to read, that's ok. Make sure that you talk about each question.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 156\n            }, this), \"Talk about the contract with your mentee. Answer their questions and help them fill out the form.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 124\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 129\n            }, this), \"When they are done, ask them to stop sharing their screen.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), sideBar]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Page17, \"k6S5vRIQrR4zijyK0DUyrH1/POc=\");\n\n_c = Page17;\n\nconst mapStateToProps = state => {\n  return {\n    texts: state.texts.curatedTextsFromCurrentScript,\n    mentee_id: state.mentees.current_mentee_id,\n    script: state.texts.currentScript,\n    commentMode: state.comments.commentMode,\n    sendingComment: state.comments.sendingComment\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    patchTexts: text_data => dispatch(patchTexts(text_data)),\n    postTexts: text_data => dispatch(postTexts(text_data)),\n    toggleCommentMode: () => dispatch(toggleCommentMode())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Page17);\n\nvar _c;\n\n$RefreshReg$(_c, \"Page17\");","map":{"version":3,"sources":["/mnt/c/Users/moust/Documents/Scripts/frontend/src/components/scripts/script1/pages/page17.js"],"names":["connect","patchTexts","postTexts","toggleCommentMode","useState","useEffect","Sidebar","Page17","props","sideBar","setSidebar","blur","setBlur","sendingComment","handleCommentClick","event","commentMode","target","id","handleChange","object_outcome","getObject","value","id_tag","mentee_id","script","current_id_tag","current_text","texts","find","text_item","getValue","current_text_for_value","mapStateToProps","state","curatedTextsFromCurrentScript","mentees","current_mentee_id","currentScript","comments","mapDispatchToProps","dispatch","text_data"],"mappings":"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","sourcesContent":["import { connect } from 'react-redux';\r\n\r\nimport { patchTexts, postTexts } from '../../../../actions/text';\r\nimport { toggleCommentMode } from '../../../../actions/comment';\r\n\r\nimport { useState, useEffect } from 'react';\r\n\r\nimport Sidebar from '../../general pages/sidebar';\r\n\r\nconst Page17 = (props) => {\r\n\r\n    const [sideBar, setSidebar] = useState(null);\r\n    const [blur, setBlur] = useState(\"\");                         \r\n\r\n\r\n    useEffect(() => {\r\n        setBlur(\"\");\r\n        setSidebar(null);\r\n      }, [props.sendingComment]);                       \r\n\r\n\r\n    useEffect(() => {\r\n        setBlur(\"\");\r\n        setSidebar(null);\r\n      }, [props.sendingComment]);\r\n\r\n    const handleCommentClick = (event) => {\r\n        //Here is where you render the sidebar\r\n        if (props.commentMode === 'commentModeOn'){\r\n            if (blur === \"\"){\r\n                setBlur(\"blur\");\r\n            }\r\n            else {\r\n                setBlur(\"\");\r\n            }\r\n            if (sideBar === null){\r\n                setSidebar(<Sidebar id_tag={event.target.id} />)\r\n            }\r\n            props.toggleCommentMode();\r\n        }\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        const object_outcome = getObject(event.target.id)\r\n        object_outcome === \"\" ? \r\n        props.postTexts({value: event.target.value, id_tag: event.target.id, mentee_id: props.mentee_id, script: props.script})\r\n        :\r\n        props.patchTexts({value: event.target.value, id_tag: event.target.id, id: object_outcome.id, mentee_id: props.mentee_id, script: props.script})\r\n\r\n    }\r\n    \r\n    const getObject = (current_id_tag) => {\r\n        //Returns the object that has the specific id_tag\r\n        let current_text = props.texts.find(text_item => {return text_item.id_tag === current_id_tag})\r\n        return current_text ? current_text : \"\"\r\n    }\r\n\r\n    const getValue = (current_id_tag) => {\r\n        //Same as getObject but instead it returns the value\r\n        let current_text_for_value = props.texts.find(text_item => {return text_item.id_tag === current_id_tag})\r\n        return current_text_for_value ? current_text_for_value.value : \"\"\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={`sheet ${blur}`}>\r\n              <h1 className={`bold center ${props.commentMode}`} id=\"h1\">Reminders about mentoring</h1>\r\n                <div className=\"left\">\r\n                    <div className='container_for_medium_margin'>\r\n                        <p className={props.commentMode} onClick={event => handleCommentClick(event)} id=\"p_1\">\r\n                            It was really great to talk with you. <br/>\r\n                            Remember to do your mood logs every day. <br/>\r\n                            The mood logs will help you keep track of your mental health every day. <br/>\r\n                            They will also help us make sure we can help you.<br/><br/>\r\n\r\n                            Thank you for meeting with me! I am excited to get to know you more.<br/>\r\n\r\n                        </p>\r\n                    </div>\r\n\r\n                    <div className='container_for_small_margin'>\r\n                        <p className={props.commentMode} onClick={event => handleCommentClick(event)} id=\"p_2\">\r\n                            We will meet again on : <textarea onChange={event => handleChange(event)} id=\"text_box_number_1_page_17_script_1\" defaultValue={getValue(\"text_box_number_1_page_17_script_1\")} />\r\n                        </p>\r\n                        <p className={props.commentMode} onClick={event => handleCommentClick(event)} id=\"p_3\">\r\n                            I am going to <textarea onChange={event => handleChange(event)} id=\"text_box_number_2_page_17_script_1\" defaultValue={getValue(\"text_box_number_2_page_17_script_1\")} /> so I can remember our next meeting. \r\n                        </p>\r\n                        <p className={props.commentMode} onClick={event => handleCommentClick(event)} id=\"p_4\">\r\n                            How will you remember our next meeting? \r\n                        </p>\r\n                    </div>\r\n\r\n                    <div id=\"instruction_box_number_1_page_13_script_1\" className={`ital custom_svg demo_box container_for_small_margin ${props.commentMode}`} onClick={event => handleCommentClick(event)}>\r\n                        <p className='top_line_in_instruction_box'>\r\n                          Send your mentee the contract link: <br/>\r\n                          <textarea onChange={event => handleChange(event)} id=\"text_box_number_1_page_13_script_1\" defaultValue={getValue(\"text_box_number_1_page_13_script_1\")} /><br/>\r\n                          Ask them to share their screen. <br/>\r\n                          Read each question to your mentee. If your mentee says they want to read, that's ok. Make sure that you talk about each question.<br/>\r\n                          Talk about the contract with your mentee. Answer their questions and help them fill out the form.<br/><br/>\r\n                          When they are done, ask them to stop sharing their screen.\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {sideBar}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return{\r\n        texts: state.texts.curatedTextsFromCurrentScript,\r\n        mentee_id: state.mentees.current_mentee_id,\r\n        script: state.texts.currentScript,\r\n        commentMode: state.comments.commentMode,\r\n        sendingComment: state.comments.sendingComment \r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return{\r\n        patchTexts: (text_data) => dispatch(patchTexts(text_data)),\r\n        postTexts: (text_data) => dispatch(postTexts(text_data)),\r\n        toggleCommentMode: () => dispatch(toggleCommentMode())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Page17)"]},"metadata":{},"sourceType":"module"}