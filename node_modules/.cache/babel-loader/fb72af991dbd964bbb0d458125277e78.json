{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/moust/Documents/Scripts/frontend/src/components/scripts/general pages/sessionstart.js\";\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { patchTexts, postTexts } from '../../../actions/text';\nimport pressrecord from '../pictures/pressrecord.png';\nimport checkButSmaller from \"../pictures/checkbutsmaller.png\";\nimport redXButSmaller from \"../pictures/redxbutsmaller.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SessionStart extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      handleclick: {\n        words_that_appear_when_you_click_green_check: null,\n        words_that_appear_when_you_click_red_x: ''\n      }\n    };\n\n    this.handleClick = (e, letter) => {\n      if (letter === 'c') {\n        this.setState({\n          handleclick: {\n            words_that_appear_when_you_click_green_check: /*#__PURE__*/_jsxDEV(GreenCheckClicked, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 88\n            }, this),\n            words_that_appear_when_you_click_red_x: ''\n          }\n        });\n      } else if (letter === 'x') {\n        this.setState({\n          handleclick: {\n            words_that_appear_when_you_click_green_check: null,\n            words_that_appear_when_you_click_red_x: \"Go to the next page\"\n          }\n        });\n      }\n    };\n\n    this.handleChange = event => {\n      const object_outcome = this.getObject(event.target.id);\n      object_outcome === \"\" ? this.props.postTexts({\n        value: event.target.value,\n        id_tag: event.target.id,\n        mentee_id: this.props.mentee_id,\n        script: this.props.script\n      }) : this.props.patchTexts({\n        value: event.target.value,\n        id_tag: event.target.id,\n        id: object_outcome.id,\n        mentee_id: this.props.mentee_id,\n        script: this.props.script\n      });\n    };\n\n    this.getObject = current_id_tag => {\n      //Returns the object that has the specific id_tag\n      let current_text = this.props.texts.find(text_item => {\n        return text_item.id_tag === current_id_tag;\n      });\n      return current_text ? current_text : \"\";\n    };\n\n    this.getValue = current_id_tag => {\n      //Same as getObject but instead it returns the value\n      let current_text_for_value = this.props.texts.find(text_item => {\n        return text_item.id_tag === current_id_tag;\n      });\n      return current_text_for_value ? current_text_for_value.value : \"\";\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sheet\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: pressrecord,\n        alt: \"Press Record\",\n        className: \"left\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"bold center\",\n        children: \"Starting the Session\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left container_for_medium_margin\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Hi, it is good to talk with you again!\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 63\n          }, this), \"As a reminder, I am audio recording this session so I can remember what you say and make sure I am doing a good job. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 142\n          }, this), \"I had a good time talking with you last week. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 71\n          }, this), \"I enjoyed : \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"session_start_text_box\",\n            onChange: event => this.handleChange(event),\n            id: `text_box_number_1_session_start_script_${this.props.script}`,\n            defaultValue: this.getValue(`text_box_number_1_session_start_script_${this.props.script}`)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 276\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 281\n          }, this), \"Was there anything last week you wanted to talk about more?\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container_for_medium_margin\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"check\",\n            src: checkButSmaller,\n            alt: \"Check\",\n            onClick: event => this.handleClick(event, 'c')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"what_does_your_mentor_say\",\n            children: \"Your mentee says yes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 134\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"choicePicked\",\n            children: this.state.handleclick.words_that_appear_when_you_click_green_check\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 30\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"redX\",\n            src: redXButSmaller,\n            alt: \"Red X\",\n            onClick: event => this.handleClick(event, 'x')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"what_does_your_mentor_say\",\n            children: \"Your mentee says no\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 132\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"choicePicked\",\n            children: this.state.handleclick.words_that_appear_when_you_click_red_x\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass GreenCheckClicked extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"checked\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Talk to your mentee about this topic for up to 5 minutes.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 22\n        }, this), \"Once you and your mentee have talked for about five minutes, you can thank them for sharing.  Politely suggest that it's time to transition to hearing about the plan for the day.  If the mentee still wants to talk, suggest \\u201Cpausing\\u201D for now and coming back to the conversation at the end of the peer mentoring session. \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    script: state.texts.currentScript,\n    texts: state.texts.curatedTextsFromCurrentScript,\n    mentee_id: state.mentees.current_mentee_id\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    patchTexts: text_data => dispatch(patchTexts(text_data)),\n    postTexts: text_data => dispatch(postTexts(text_data))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SessionStart);","map":{"version":3,"sources":["/mnt/c/Users/moust/Documents/Scripts/frontend/src/components/scripts/general pages/sessionstart.js"],"names":["Component","connect","patchTexts","postTexts","pressrecord","checkButSmaller","redXButSmaller","SessionStart","state","handleclick","words_that_appear_when_you_click_green_check","words_that_appear_when_you_click_red_x","handleClick","e","letter","setState","handleChange","event","object_outcome","getObject","target","id","props","value","id_tag","mentee_id","script","current_id_tag","current_text","texts","find","text_item","getValue","current_text_for_value","render","GreenCheckClicked","mapStateToProps","currentScript","curatedTextsFromCurrentScript","mentees","current_mentee_id","mapDispatchToProps","dispatch","text_data"],"mappings":"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","sourcesContent":["import { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { patchTexts, postTexts } from '../../../actions/text';\r\n\r\n\r\nimport pressrecord from '../pictures/pressrecord.png'; \r\nimport checkButSmaller from \"../pictures/checkbutsmaller.png\";\r\nimport redXButSmaller from \"../pictures/redxbutsmaller.png\";\r\n\r\n\r\nclass SessionStart extends Component {\r\n\r\n    state = {\r\n        handleclick: {\r\n        words_that_appear_when_you_click_green_check: null,\r\n        words_that_appear_when_you_click_red_x: ''\r\n        }\r\n    }\r\n\r\n    handleClick = (e, letter) => {\r\n        if (letter === 'c'){\r\n            this.setState({handleclick: {words_that_appear_when_you_click_green_check: <GreenCheckClicked />, words_that_appear_when_you_click_red_x: ''}})\r\n        }\r\n        else if (letter === 'x'){\r\n            this.setState({handleclick: {words_that_appear_when_you_click_green_check : null, words_that_appear_when_you_click_red_x: \"Go to the next page\"}})\r\n        }\r\n    }\r\n\r\n    \r\n    handleChange = (event) => {\r\n        const object_outcome = this.getObject(event.target.id)\r\n        object_outcome === \"\" ? \r\n        this.props.postTexts({value: event.target.value, id_tag: event.target.id, mentee_id: this.props.mentee_id, script: this.props.script})\r\n        :\r\n        this.props.patchTexts({value: event.target.value, id_tag: event.target.id, id: object_outcome.id, mentee_id: this.props.mentee_id, script: this.props.script})\r\n\r\n    }\r\n    \r\n    getObject = (current_id_tag) => {\r\n        //Returns the object that has the specific id_tag\r\n        let current_text = this.props.texts.find(text_item => {return text_item.id_tag === current_id_tag})\r\n        return current_text ? current_text : \"\"\r\n    }\r\n\r\n    getValue = (current_id_tag) => {\r\n        //Same as getObject but instead it returns the value\r\n        let current_text_for_value = this.props.texts.find(text_item => {return text_item.id_tag === current_id_tag})\r\n        return current_text_for_value ? current_text_for_value.value : \"\"\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"sheet\">\r\n                <img src={pressrecord} alt=\"Press Record\" className=\"left\" />\r\n                <h1 className=\"bold center\">Starting the Session</h1>\r\n                <div className=\"left container_for_medium_margin\">\r\n                    <p>\r\n                        Hi, it is good to talk with you again!<br/>\r\n                        As a reminder, I am audio recording this session so I can remember what you say and make sure I am doing a good job. <br />\r\n                        I had a good time talking with you last week. <br/>\r\n                        I enjoyed : <br/>\r\n                        <textarea className='session_start_text_box' onChange={event => this.handleChange(event)} id={`text_box_number_1_session_start_script_${this.props.script}`} defaultValue={this.getValue(`text_box_number_1_session_start_script_${this.props.script}`)} /><br/><br/>\r\n                        Was there anything last week you wanted to talk about more? \r\n                    </p>\r\n                    <div className='container_for_medium_margin'>\r\n                        <img className=\"check\" src={checkButSmaller} alt=\"Check\" onClick={(event) => this.handleClick(event, 'c')} /><p className=\"what_does_your_mentor_say\">Your mentee says yes</p>\r\n                        <br/>\r\n                        <div className=\"choicePicked\">{this.state.handleclick.words_that_appear_when_you_click_green_check}</div>\r\n                        <br/><br/>\r\n                        <img className=\"redX\" src={redXButSmaller} alt=\"Red X\" onClick={(event) => this.handleClick(event, 'x')} /><p className=\"what_does_your_mentor_say\">Your mentee says no</p>\r\n                        <br/>\r\n                        <p className=\"choicePicked\">{this.state.handleclick.words_that_appear_when_you_click_red_x}</p>\r\n                    </div>\r\n                    \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nclass GreenCheckClicked extends Component{\r\n    render(){\r\n        return(\r\n            <div id=\"checked\">\r\n                <p>Talk to your mentee about this topic for up to 5 minutes.\r\n                <br/><br/>\r\n                Once you and your mentee have talked for about five minutes, you can thank them for sharing.  Politely suggest that it's time to transition to hearing about the plan for the day.  If the mentee still wants to talk, suggest “pausing” for now and coming back to the conversation at the end of the peer mentoring session. </p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return{\r\n        script: state.texts.currentScript,\r\n        texts: state.texts.curatedTextsFromCurrentScript,\r\n        mentee_id: state.mentees.current_mentee_id\r\n        \r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return{\r\n        patchTexts: (text_data) => dispatch(patchTexts(text_data)),\r\n        postTexts: (text_data) => dispatch(postTexts(text_data))\r\n\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SessionStart);\r\n\r\n"]},"metadata":{},"sourceType":"module"}