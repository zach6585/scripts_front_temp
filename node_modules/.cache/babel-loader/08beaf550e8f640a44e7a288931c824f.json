{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/moust/Documents/Scripts/frontend/src/components/scripts/general pages/remindersaboutmentoring/otfz.js\";\nimport { connect } from 'react-redux';\nimport { patchTexts, postTexts } from '../../../../actions/text';\nimport allEars from \"../../pictures/allears.png\";\nimport pause from \"../../pictures/pause.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst OTFZ = props => {\n  const handleChange = event => {\n    const object_outcome = getObject(event.target.id);\n    object_outcome === \"\" ? props.postTexts({\n      value: event.target.value,\n      id_tag: event.target.id,\n      mentee_id: props.mentee_id,\n      script: props.script\n    }) : props.patchTexts({\n      value: event.target.value,\n      id_tag: event.target.id,\n      id: object_outcome.id,\n      mentee_id: props.mentee_id,\n      script: props.script\n    });\n  };\n\n  const getObject = current_id_tag => {\n    //Returns the object that has the specific id_tag\n    let current_text = props.texts.find(text_item => {\n      return text_item.id_tag === current_id_tag;\n    });\n    return current_text ? current_text : \"\";\n  };\n\n  const getValue = current_id_tag => {\n    //Same as getObject but instead it returns the value\n    let current_text_for_value = props.texts.find(text_item => {\n      return text_item.id_tag === current_id_tag;\n    });\n    return current_text_for_value ? current_text_for_value.value : \"\";\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"left\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"How have you been doing at remembering your mood logs?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: pause,\n      alt: \"Pause\",\n      className: \"pause\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: allEars,\n      alt: \"All ears\",\n      className: \"allEars\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 18\n    }, this), props.otf_or_z === \"otf\" ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"This week you did \", /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"reminders_number_done\",\n        onChange: event => handleChange(event),\n        id: `text_box_number_1_mentoring_reminders_script_${props.script}`,\n        defaultValue: getValue(`text_box_number_1_mentoring_reminders_script_${props.script}`)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 62\n      }, this), \" mood logs. Thanks for doing those. Please try to do 5 this week.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 41\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"I noticed that you did not get a chance to do any of your mood logs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 376\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Remember, you will earn $5 for every week that you do 5 mood logs. That means you can earn $80 for doing the mood logs during mentoring.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 153\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 158\n      }, this), \"Also, the more you practice, the easier it will be to tell how you feel, so you can be in charge of your mental health.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 136\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 141\n      }, this), \"What do you think is making it hard to do your mood logs?\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 74\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 79\n      }, this), \"Is there a way I can help you remember to do them?\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 18\n    }, this), props.otf_or_z === \"otf\" ? /*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: \"reminders_text_box\",\n      onChange: event => handleChange(event),\n      id: `text_box_number_2_mentoring_reminders_script_${props.script}`,\n      defaultValue: getValue(`text_box_number_2_mentoring_reminders_script_${props.script}`)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 41\n    }, this) : null, props.otf_or_z === \"otf\" ? null : /*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: \"reminders_text_box\",\n      onChange: event => handleChange(event),\n      id: `text_box_number_3_mentoring_reminders_script_${props.script}`,\n      defaultValue: getValue(`text_box_number_3_mentoring_reminders_script_${props.script}`)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 48\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n\n_c = OTFZ;\n\nconst mapStateToProps = state => {\n  return {\n    texts: state.texts.curatedTextsFromCurrentScript,\n    mentee_id: state.mentees.current_mentee_id,\n    script: state.texts.currentScript\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    patchTexts: text_data => dispatch(patchTexts(text_data)),\n    postTexts: text_data => dispatch(postTexts(text_data))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OTFZ);\n\nvar _c;\n\n$RefreshReg$(_c, \"OTFZ\");","map":{"version":3,"sources":["/mnt/c/Users/moust/Documents/Scripts/frontend/src/components/scripts/general pages/remindersaboutmentoring/otfz.js"],"names":["connect","patchTexts","postTexts","allEars","pause","OTFZ","props","handleChange","event","object_outcome","getObject","target","id","value","id_tag","mentee_id","script","current_id_tag","current_text","texts","find","text_item","getValue","current_text_for_value","otf_or_z","mapStateToProps","state","curatedTextsFromCurrentScript","mentees","current_mentee_id","currentScript","mapDispatchToProps","dispatch","text_data"],"mappings":"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","sourcesContent":["import { connect } from 'react-redux';\r\nimport { patchTexts, postTexts } from '../../../../actions/text';\r\n\r\nimport allEars from \"../../pictures/allears.png\";\r\nimport pause from \"../../pictures/pause.png\";\r\n\r\nconst OTFZ = (props) => {\r\n\r\n    const handleChange = (event) => {\r\n        const object_outcome = getObject(event.target.id)\r\n        object_outcome === \"\" ? \r\n        props.postTexts({value: event.target.value, id_tag: event.target.id, mentee_id: props.mentee_id, script: props.script})\r\n        :\r\n        props.patchTexts({value: event.target.value, id_tag: event.target.id, id: object_outcome.id, mentee_id: props.mentee_id, script: props.script})\r\n    }\r\n    \r\n    const getObject = (current_id_tag) => {\r\n        //Returns the object that has the specific id_tag\r\n        let current_text = props.texts.find(text_item => {return text_item.id_tag === current_id_tag})\r\n        return current_text ? current_text : \"\"\r\n    }\r\n\r\n    const getValue = (current_id_tag) => {\r\n        //Same as getObject but instead it returns the value\r\n        let current_text_for_value = props.texts.find(text_item => {return text_item.id_tag === current_id_tag})\r\n        return current_text_for_value ? current_text_for_value.value : \"\"\r\n    }\r\n    return(\r\n        <div className=\"left\">\r\n            <p>How have you been doing at remembering your mood logs?</p>\r\n            <img src={pause} alt=\"Pause\" className=\"pause\" />\r\n            <img src={allEars} alt=\"All ears\" className=\"allEars\" />\r\n            <br/><br/>\r\n            {props.otf_or_z === \"otf\" ? <p>This week you did <textarea className='reminders_number_done' onChange={event => handleChange(event)} id={`text_box_number_1_mentoring_reminders_script_${props.script}`} defaultValue={getValue(`text_box_number_1_mentoring_reminders_script_${props.script}`)} /> mood logs. Thanks for doing those. Please try to do 5 this week.</p> : <p>I noticed that you did not get a chance to do any of your mood logs</p>}\r\n            <p>\r\n                Remember, you will earn $5 for every week that you do 5 mood logs. That means you can earn $80 for doing the mood logs during mentoring.<br/><br/>\r\n                Also, the more you practice, the easier it will be to tell how you feel, so you can be in charge of your mental health.<br/><br/>\r\n                What do you think is making it hard to do your mood logs?<br/><br/>\r\n                Is there a way I can help you remember to do them?\r\n            </p>\r\n            <br/><br/>\r\n            {props.otf_or_z === \"otf\" ? <textarea className='reminders_text_box' onChange={event => handleChange(event)} id={`text_box_number_2_mentoring_reminders_script_${props.script}`} defaultValue={getValue(`text_box_number_2_mentoring_reminders_script_${props.script}`)} /> : null}\r\n            {props.otf_or_z === \"otf\" ? null : <textarea className='reminders_text_box' onChange={event => handleChange(event)} id={`text_box_number_3_mentoring_reminders_script_${props.script}`} defaultValue={getValue(`text_box_number_3_mentoring_reminders_script_${props.script}`)} />}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return{\r\n        texts: state.texts.curatedTextsFromCurrentScript,\r\n        mentee_id: state.mentees.current_mentee_id,\r\n        script: state.texts.currentScript\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return{\r\n        patchTexts: (text_data) => dispatch(patchTexts(text_data)),\r\n        postTexts: (text_data) => dispatch(postTexts(text_data))\r\n\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(OTFZ);"]},"metadata":{},"sourceType":"module"}