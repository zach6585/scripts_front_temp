{"ast":null,"code":"import axios from 'axios';\nexport const postTexts = data => dispatch => {\n  axios.post(\"http://localhost:3001/texts\", {\n    value: data.value,\n    id_tag: data.id_tag,\n    script: data.script,\n    mentee_id: data.mentee_id\n  }).then(resp => dispatch({\n    type: 'TEXT_CREATED',\n    payload: resp.data\n  }));\n};\nexport const patchTexts = data => dispatch => {\n  axios.patch(`http://localhost:3001/texts/${data.id}`, {\n    value: data.value,\n    id_tag: data.id_tag,\n    script: data.script,\n    mentee_id: data.mentee_id\n  }).then(resp => dispatch({\n    type: 'TEXT_UPDATED',\n    payload: resp.data\n  }));\n};\nexport const TEXTS_LOADING = \"LOADING\";\nexport const TEXTS_SUCCESS = \"SUCCESS\";\nexport const FAILURE = \"FAILURE\";\nexport const getTexts = script_number_and_mentee_id => dispatch => {\n  dispatch({\n    type: TEXTS_LOADING\n  });\n  axios.get('http://localhost:3001/texts').then(res => dispatch({\n    type: TEXTS_SUCCESS,\n    payload: {\n      texts: res.data.filter(text_data => text_data.script === script_number_and_mentee_id.script_number.toString() && text_data.mentee_id === script_number_and_mentee_id.mentee_id),\n      script_number: script_number_and_mentee_id.script_number.toString()\n    }\n  })).catch(err => dispatch({\n    type: FAILURE,\n    payload: err\n  }));\n};\nexport const changeTexts = () => dispatch => {\n  dispatch({\n    type: 'CHANGE_SCRIPT'\n  });\n};","map":{"version":3,"sources":["/mnt/c/Users/moust/Documents/Scripts/frontend/src/actions/text.js"],"names":["axios","postTexts","data","dispatch","post","value","id_tag","script","mentee_id","then","resp","type","payload","patchTexts","patch","id","TEXTS_LOADING","TEXTS_SUCCESS","FAILURE","getTexts","script_number_and_mentee_id","get","res","texts","filter","text_data","script_number","toString","catch","err","changeTexts"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,OAAO,MAAMC,SAAS,GAAIC,IAAD,IAAUC,QAAQ,IAAI;AAC7CH,EAAAA,KAAK,CAACI,IAAN,CAAW,6BAAX,EAA0C;AAACC,IAAAA,KAAK,EAAEH,IAAI,CAACG,KAAb;AAAoBC,IAAAA,MAAM,EAAEJ,IAAI,CAACI,MAAjC;AAAyCC,IAAAA,MAAM,EAAEL,IAAI,CAACK,MAAtD;AAA8DC,IAAAA,SAAS,EAAEN,IAAI,CAACM;AAA9E,GAA1C,EACCC,IADD,CACMC,IAAI,IAAIP,QAAQ,CAAC;AAACQ,IAAAA,IAAI,EAAE,cAAP;AAAuBC,IAAAA,OAAO,EAAEF,IAAI,CAACR;AAArC,GAAD,CADtB;AAED,CAHM;AAKP,OAAO,MAAMW,UAAU,GAAIX,IAAD,IAAUC,QAAQ,IAAI;AAC1CH,EAAAA,KAAK,CAACc,KAAN,CAAa,+BAA8BZ,IAAI,CAACa,EAAG,EAAnD,EAAsD;AAACV,IAAAA,KAAK,EAAEH,IAAI,CAACG,KAAb;AAAoBC,IAAAA,MAAM,EAAEJ,IAAI,CAACI,MAAjC;AAAyCC,IAAAA,MAAM,EAAEL,IAAI,CAACK,MAAtD;AAA8DC,IAAAA,SAAS,EAAEN,IAAI,CAACM;AAA9E,GAAtD,EACCC,IADD,CACMC,IAAI,IAAIP,QAAQ,CAAC;AAACQ,IAAAA,IAAI,EAAE,cAAP;AAAuBC,IAAAA,OAAO,EAAEF,IAAI,CAACR;AAArC,GAAD,CADtB;AAEL,CAHM;AAKP,OAAO,MAAMc,aAAa,GAAG,SAAtB;AACP,OAAO,MAAMC,aAAa,GAAG,SAAtB;AACP,OAAO,MAAMC,OAAO,GAAG,SAAhB;AAEP,OAAO,MAAMC,QAAQ,GAAIC,2BAAD,IAAiCjB,QAAQ,IAAI;AACjEA,EAAAA,QAAQ,CAAC;AAAEQ,IAAAA,IAAI,EAAEK;AAAR,GAAD,CAAR;AACAhB,EAAAA,KAAK,CAACqB,GAAN,CAAU,6BAAV,EACGZ,IADH,CACQa,GAAG,IAAInB,QAAQ,CAAC;AAAEQ,IAAAA,IAAI,EAAEM,aAAR;AAAuBL,IAAAA,OAAO,EAAE;AAACW,MAAAA,KAAK,EAAED,GAAG,CAACpB,IAAJ,CAASsB,MAAT,CAAgBC,SAAS,IAAIA,SAAS,CAAClB,MAAV,KAAqBa,2BAA2B,CAACM,aAA5B,CAA0CC,QAA1C,EAArB,IAA6EF,SAAS,CAACjB,SAAV,KAAwBY,2BAA2B,CAACZ,SAA9J,CAAR;AAAkLkB,MAAAA,aAAa,EAAEN,2BAA2B,CAACM,aAA5B,CAA0CC,QAA1C;AAAjM;AAAhC,GAAD,CADvB,EAEGC,KAFH,CAESC,GAAG,IAAI1B,QAAQ,CAAC;AAAEQ,IAAAA,IAAI,EAAEO,OAAR;AAAiBN,IAAAA,OAAO,EAAEiB;AAA1B,GAAD,CAFxB;AAGH,CALM;AAOP,OAAO,MAAMC,WAAW,GAAG,MAAM3B,QAAQ,IAAI;AACzCA,EAAAA,QAAQ,CAAC;AAAEQ,IAAAA,IAAI,EAAE;AAAR,GAAD,CAAR;AACD,CAFI","sourcesContent":["import axios from 'axios';\r\n\r\n\r\nexport const postTexts = (data) => dispatch => {\r\n  axios.post(\"http://localhost:3001/texts\", {value: data.value, id_tag: data.id_tag, script: data.script, mentee_id: data.mentee_id })\r\n  .then(resp => dispatch({type: 'TEXT_CREATED', payload: resp.data}))\r\n}\r\n\r\nexport const patchTexts = (data) => dispatch => {\r\n      axios.patch(`http://localhost:3001/texts/${data.id}`, {value: data.value, id_tag: data.id_tag, script: data.script, mentee_id: data.mentee_id})\r\n      .then(resp => dispatch({type: 'TEXT_UPDATED', payload: resp.data}))\r\n}\r\n\r\nexport const TEXTS_LOADING = \"LOADING\";\r\nexport const TEXTS_SUCCESS = \"SUCCESS\";\r\nexport const FAILURE = \"FAILURE\";\r\n\r\nexport const getTexts = (script_number_and_mentee_id) => dispatch => {\r\n    dispatch({ type: TEXTS_LOADING })\r\n    axios.get('http://localhost:3001/texts')\r\n      .then(res => dispatch({ type: TEXTS_SUCCESS, payload: {texts: res.data.filter(text_data => text_data.script === script_number_and_mentee_id.script_number.toString() && text_data.mentee_id === script_number_and_mentee_id.mentee_id), script_number: script_number_and_mentee_id.script_number.toString()}}))\r\n      .catch(err => dispatch({ type: FAILURE, payload: err}))\r\n}\r\n\r\nexport const changeTexts = () => dispatch => {\r\n    dispatch({ type: 'CHANGE_SCRIPT' })\r\n  }\r\n"]},"metadata":{},"sourceType":"module"}