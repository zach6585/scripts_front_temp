{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/moust/Documents/Scripts/frontend/src/components/scripts/script3/pages/page7.js\",\n    _s = $RefreshSig$();\n\nimport { connect } from 'react-redux';\nimport { patchTexts, postTexts } from '../../../../actions/text';\nimport { toggleCommentMode } from '../../../../actions/comment';\nimport { useState, useEffect } from 'react';\nimport Sidebar from '../../general pages/sidebar';\nimport BodyDiagram from '../../general pages/bodydiagram';\nimport shareScreen from '../../pictures/sharescreen.png';\nimport stopShare from '../../pictures/stopshare.png';\nimport body from '../../pictures/body.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Page7 = props => {\n  _s();\n\n  const [sideBar, setSidebar] = useState(null);\n  const [blur, setBlur] = useState(\"\");\n  const [bodyimageClicked, setbodyImageClicked] = useState(false);\n  const [mainDiv, setMainDiv] = useState(\"show\");\n  const [imgAndTBDiv, setimgAndTBDiv] = useState(\"hide\");\n  useEffect(() => {\n    setBlur(\"\");\n    setSidebar(null);\n  }, [props.sendingComment]);\n\n  const handleCommentClick = event => {\n    //Here is where you render the sidebar\n    if (props.commentMode === 'commentModeOn') {\n      if (blur === \"\") {\n        setBlur(\"blur\");\n      } else {\n        setBlur(\"\");\n      }\n\n      if (sideBar === null) {\n        setSidebar( /*#__PURE__*/_jsxDEV(Sidebar, {\n          id_tag: event.target.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 28\n        }, this));\n      }\n\n      props.toggleCommentMode();\n    }\n  };\n\n  const handleBodyImageClicked = event => {\n    if (props.commentMode === 'commentModeOn') {\n      if (blur === \"\") {\n        setBlur(\"blur\");\n      } else {\n        setBlur(\"\");\n      }\n\n      if (sideBar === null) {\n        setSidebar( /*#__PURE__*/_jsxDEV(Sidebar, {\n          id_tag: event.target.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 28\n        }, this));\n      }\n\n      props.toggleCommentMode();\n    } else {\n      setbodyImageClicked(!bodyimageClicked);\n      setMainDiv(imgAndTBDiv);\n      setimgAndTBDiv(mainDiv);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `sheet ${blur}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `body_page_main_div ${mainDiv}`,\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: `bold center ${props.commentMode}`,\n            id: \"h1\",\n            onClick: event => handleCommentClick(event),\n            children: \"Body scan\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"left container_for_medium_margin\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: props.commentMode,\n              id: \"p_1\",\n              onClick: event => handleCommentClick(event),\n              children: \"Now we will practice thinking about how your body feels using something called a body scan.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"div_with_body_image_and_p_page_7_script_3\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: props.commentMode,\n                id: \"p_1\",\n                onClick: event => handleCommentClick(event),\n                children: \"Our bodies can help us learn about our feelings and emotions. I will show you an example.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"image\",\n                alt: \"Body image\",\n                src: body,\n                name: \"body_image\",\n                className: `body_diagram_button ${props.commentMode}`,\n                id: \"body_image_button\",\n                onClick: event => handleBodyImageClicked(event)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"instruction_box_number_1_page_7_script_3\",\n              className: `ital custom_svg demo_box container_for_medium_margin ${props.commentMode}`,\n              onClick: event => handleCommentClick(event),\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"top_line_in_instruction_box\",\n                children: \"Click on the [link to be inserted] and share your screen. \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 38\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 43\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: shareScreen,\n                alt: \"Share screen\",\n                id: \"share_your_screen_page_7_script_3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 38\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Explain your example \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"instruction_box_number_2_page_7_script_3\",\n              className: `ital custom_svg demo_box container_for_large_margin ${props.commentMode}`,\n              onClick: event => handleCommentClick(event),\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"top_line_in_instruction_box\",\n                children: \"When you are done, stop screen sharing\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: stopShare,\n                alt: \"Stop sharing screen\",\n                id: \"stop_sharing_screen_page_7_script_3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `body_diagram_popup ${imgAndTBDiv}`,\n        children: /*#__PURE__*/_jsxDEV(BodyDiagram, {\n          script: props.script\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 70\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Page7, \"7TTGSK6hRvQKR6al1wZbS+e7wSo=\");\n\n_c = Page7;\n\nconst mapStateToProps = state => {\n  return {\n    texts: state.texts.curatedTextsFromCurrentScript,\n    mentee_id: state.mentees.current_mentee_id,\n    script: state.texts.currentScript,\n    commentMode: state.comments.commentMode,\n    sendingComment: state.comments.sendingComment\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    patchTexts: text_data => dispatch(patchTexts(text_data)),\n    postTexts: text_data => dispatch(postTexts(text_data)),\n    toggleCommentMode: () => dispatch(toggleCommentMode())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Page7);\n\nvar _c;\n\n$RefreshReg$(_c, \"Page7\");","map":{"version":3,"sources":["/mnt/c/Users/moust/Documents/Scripts/frontend/src/components/scripts/script3/pages/page7.js"],"names":["connect","patchTexts","postTexts","toggleCommentMode","useState","useEffect","Sidebar","BodyDiagram","shareScreen","stopShare","body","Page7","props","sideBar","setSidebar","blur","setBlur","bodyimageClicked","setbodyImageClicked","mainDiv","setMainDiv","imgAndTBDiv","setimgAndTBDiv","sendingComment","handleCommentClick","event","commentMode","target","id","handleBodyImageClicked","script","mapStateToProps","state","texts","curatedTextsFromCurrentScript","mentee_id","mentees","current_mentee_id","currentScript","comments","mapDispatchToProps","dispatch","text_data"],"mappings":"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","sourcesContent":["import { connect } from 'react-redux';\r\n\r\nimport { patchTexts, postTexts } from '../../../../actions/text';\r\nimport { toggleCommentMode } from '../../../../actions/comment';\r\n\r\nimport { useState, useEffect } from 'react';\r\n\r\nimport Sidebar from '../../general pages/sidebar';\r\n\r\n\r\nimport BodyDiagram from '../../general pages/bodydiagram';\r\n\r\nimport shareScreen from '../../pictures/sharescreen.png';\r\nimport stopShare from '../../pictures/stopshare.png';\r\nimport body from '../../pictures/body.png';\r\n\r\n\r\nconst Page7 = (props) => {\r\n    \r\n    const [sideBar, setSidebar] = useState(null);\r\n    const [blur, setBlur] = useState(\"\"); \r\n    const [bodyimageClicked, setbodyImageClicked] = useState(false);\r\n    const [mainDiv, setMainDiv] = useState(\"show\");\r\n    const [imgAndTBDiv, setimgAndTBDiv] = useState(\"hide\");                        \r\n\r\n    useEffect(() => {\r\n        setBlur(\"\");\r\n        setSidebar(null);\r\n      }, [props.sendingComment]);\r\n\r\n    const handleCommentClick = (event) => {\r\n        //Here is where you render the sidebar\r\n        if (props.commentMode === 'commentModeOn'){\r\n            if (blur === \"\"){\r\n                setBlur(\"blur\");\r\n            }\r\n            else {\r\n                setBlur(\"\");\r\n            }\r\n            if (sideBar === null){\r\n                setSidebar(<Sidebar id_tag={event.target.id} />)\r\n            }\r\n            props.toggleCommentMode();\r\n        }\r\n    }\r\n    \r\n    const handleBodyImageClicked = (event) => {\r\n        if (props.commentMode === 'commentModeOn'){\r\n            if (blur === \"\"){\r\n                setBlur(\"blur\");\r\n            }\r\n            else {\r\n                setBlur(\"\");\r\n            }\r\n            if (sideBar === null){\r\n                setSidebar(<Sidebar id_tag={event.target.id} />)\r\n            }\r\n            props.toggleCommentMode();\r\n        }\r\n        else {\r\n            setbodyImageClicked(!bodyimageClicked);\r\n            setMainDiv(imgAndTBDiv);\r\n            setimgAndTBDiv(mainDiv);\r\n        }\r\n    }\r\n    \r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <div className={`sheet ${blur}`}>\r\n                    <div className={`body_page_main_div ${mainDiv}`}>\r\n                        <h1 className={`bold center ${props.commentMode}`} id=\"h1\" onClick={event => handleCommentClick(event)}>Body scan</h1>\r\n                        <div className=\"left container_for_medium_margin\">\r\n                            \r\n                            <p className={props.commentMode} id=\"p_1\" onClick={event => handleCommentClick(event)}>Now we will practice thinking about how your body feels using something called a body scan.</p>\r\n                            <div id=\"div_with_body_image_and_p_page_7_script_3\">\r\n                                <p className={props.commentMode} id=\"p_1\" onClick={event => handleCommentClick(event)}>Our bodies can help us learn about our feelings and emotions. I will show you an example.</p>\r\n                                <input type=\"image\" alt=\"Body image\" src={body} name=\"body_image\" className={`body_diagram_button ${props.commentMode}`} id=\"body_image_button\" onClick={event => handleBodyImageClicked(event)} />\r\n                            </div>\r\n                            <br/>\r\n                            <div id=\"instruction_box_number_1_page_7_script_3\" className={`ital custom_svg demo_box container_for_medium_margin ${props.commentMode}`} onClick={event => handleCommentClick(event)}>\r\n                                <p className=\"top_line_in_instruction_box\">Click on the [link to be inserted] and share your screen. </p>\r\n                                <br/><br/><br/>\r\n                                <img src={shareScreen} alt=\"Share screen\" id=\"share_your_screen_page_7_script_3\"/>\r\n                                <br/><br/>\r\n                                <p>Explain your example </p>\r\n                            </div>\r\n                            <br/>\r\n                            <div id=\"instruction_box_number_2_page_7_script_3\" className={`ital custom_svg demo_box container_for_large_margin ${props.commentMode}`} onClick={event => handleCommentClick(event)}>\r\n                                <p className='top_line_in_instruction_box'>When you are done, stop screen sharing</p>\r\n                                <img src={stopShare} alt=\"Stop sharing screen\" id=\"stop_sharing_screen_page_7_script_3\"/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className={`body_diagram_popup ${imgAndTBDiv}`}><BodyDiagram script={props.script} /></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return{\r\n        texts: state.texts.curatedTextsFromCurrentScript,\r\n        mentee_id: state.mentees.current_mentee_id,\r\n        script: state.texts.currentScript,\r\n        commentMode: state.comments.commentMode,\r\n        sendingComment: state.comments.sendingComment \r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return{\r\n        patchTexts: (text_data) => dispatch(patchTexts(text_data)),\r\n        postTexts: (text_data) => dispatch(postTexts(text_data)),\r\n        toggleCommentMode: () => dispatch(toggleCommentMode())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Page7);\r\n"]},"metadata":{},"sourceType":"module"}