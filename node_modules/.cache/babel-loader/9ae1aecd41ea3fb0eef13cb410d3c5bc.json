{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/moust/Documents/Scripts/frontend/src/components/scripts/script6/pages/page6.js\";\nimport { connect } from 'react-redux';\nimport { patchTexts, postTexts } from '../../../../actions/text';\nimport { toggleBodyImage } from '../../../../actions/body';\nimport phone from '../../pictures/phone.png';\nimport body from '../../pictures/body.png';\nimport BodyDiagram from '../../general pages/bodydiagram';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Page6 = props => {\n  const handleBodyImageClicked = event => {\n    props.toggleBodyImage();\n  };\n\n  const handleChange = event => {\n    const object_outcome = getObject(event.target.id);\n    object_outcome === \"\" ? props.postTexts({\n      value: event.target.value,\n      id_tag: event.target.id,\n      mentee_id: props.mentee_id,\n      script: props.script\n    }) : props.patchTexts({\n      value: event.target.value,\n      id_tag: event.target.id,\n      id: object_outcome.id,\n      mentee_id: props.mentee_id,\n      script: props.script\n    });\n  };\n\n  const getObject = current_id_tag => {\n    //Returns the object that has the specific id_tag\n    let current_text = props.texts.find(text_item => {\n      return text_item.id_tag === current_id_tag;\n    });\n    return current_text ? current_text : \"\";\n  };\n\n  const getValue = current_id_tag => {\n    //Same as getObject but instead it returns the value\n    let current_text_for_value = props.texts.find(text_item => {\n      return text_item.id_tag === current_id_tag;\n    });\n    return current_text_for_value ? current_text_for_value.value : \"\";\n  };\n\n  if (!props.imageClicked) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sheet\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left container_for_small_margin\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"div_with_body_image_and_p\",\n          id: \"d_w_b_i_a_p_page_6_script_6\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Step 1: Identify how you are feeling\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 82\n            }, this), \"The purpose of a coping strategy is to help you feel better when you are having challenging, uncomfortable emotions. Sometimes it can be hard to tell how you are feeling.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 199\n            }, this), \"We have been using the body scan worksheet to help you identify your emotions.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 107\n            }, this), \"Let's practice using the body scan worksheet before we practice your coping strategy.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"image\",\n            alt: \"Body image\",\n            src: body,\n            name: \"body_image\",\n            className: \"body_diagram_button\",\n            id: \"body_image_button\",\n            onClick: event => handleBodyImageClicked(event)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"instruction_box_number_1_page_6_script_6\",\n          className: \"custom_svg demo_box container_for_small_margin\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"top_line_in_instruction_box\",\n            children: [\"Help your mentee use the body scan worksheet or mood log.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 86\n            }, this), \"Put the link in the chat and ask your mentee to screen share\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 89\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Write how your mentee is feeling\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 78\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              onChange: event => handleChange(event),\n              id: \"text_box_number_1_page_6_script_6\",\n              defaultValue: getValue(\"text_box_number_1_page_6_script_6\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container_for_large_margin\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Now that you figured out how you are feeling, let's practice rating it on the mood log.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"instruction_box_number_2_page_6_script_6\",\n            className: \"custom_svg demo_box container_for_small_margin\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"top_line_in_instruction_box\",\n              children: [\"Help your mentee use the mood log on their phone.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 82\n              }, this), \"Put the link \", /*#__PURE__*/_jsxDEV(\"textarea\", {\n                onChange: event => handleChange(event),\n                id: \"text_box_number_2_page_6_script_6\",\n                defaultValue: getValue(\"text_box_number_2_page_6_script_6\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 46\n              }, this), \" in the chat and ask your mentee to screen share.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 247\n              }, this), \"If your mentee points to an emoji, but doesn't say a feeling, ask them to describe what the feeling is.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: phone,\n            alt: \"Phone with emojis\",\n            id: \"phone_page_6_script_6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this);\n  } else {\n    /*#__PURE__*/\n    _jsxDEV(BodyDiagram, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this);\n  }\n};\n\n_c = Page6;\n\nconst mapStateToProps = state => {\n  return {\n    texts: state.texts.curatedTextsFromCurrentScript,\n    mentee_id: state.mentees.current_mentee_id,\n    script: state.texts.currentScript\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    patchTexts: text_data => dispatch(patchTexts(text_data)),\n    postTexts: text_data => dispatch(postTexts(text_data)),\n    toggleBodyImage: () => dispatch(toggleBodyImage())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Page6); //                     <h1 className={`bold center ${props.commentMode}`} id=\"h1\" onClick={event => handleCommentClick(event)}>Review</h1>\n//                     <div className=\"left\">\n//                         <div className='body_page_main_div'>\n//                             <div className='container_for_medium_margin'>\n//                             \n//                                 <p className={props.commentMode} id=\"p_1\" onClick={event => handleCommentClick(event)}>\n//                                         Last week, we worked on the body scan worksheet. \n//                                         <br/><br/>\n//                                         Did you try using the body scan worksheet on your own?\n//                                         <br/><br/>\n//                                         What do you think about it?\n//                                         <br/>\n//                                         There are no right or wrong answers.\n//                                     </p>\n//                                  \n//                              </div>\n//                             </div>\n//                         </div>\n//                         <div className='container_for_medium_margin'>\n//                         <p className={props.commentMode} id=\"p_2\" onClick={event => handleCommentClick(event)}>Is any part of it hard?</p>\n//                         <textarea className={props.commentMode} onClick={event => handleCommentClick(event)} onChange={event => handleChange(event)} id=\"text_box_number_1_page_9_script_4\" defaultValue={getValue(\"text_box_number_1_page_9_script_4\")} />\n//                         <br/><br/><br/><br/><br/><br/><br/>\n//                         <p className={props.commentMode} id=\"p_3\" onClick={event => handleCommentClick(event)}>Is there anything you don't like about it?</p>\n//                         <textarea className={props.commentMode} onClick={event => handleCommentClick(event)} onChange={event => handleChange(event)} id=\"text_box_number_2_page_9_script_4\" defaultValue={getValue(\"text_box_number_2_page_9_script_4\")} /><br/><br/>\n//                         <br/><br/><br/><br/><br/><br/><br/>\n//                         <p className={props.commentMode} id=\"p_4\" onClick={event => handleCommentClick(event)}>Is there any way I can help make it easier for you?</p>\n//                         <textarea className={props.commentMode} onClick={event => handleCommentClick(event)} onChange={event => handleChange(event)} id=\"text_box_number_3_page_9_script_4\" defaultValue={getValue(\"text_box_number_3_page_9_script_4\")} /><br/><br/>\n//                         <p className={props.commentMode} id=\"p_5\" onClick={event => handleCommentClick(event)}>Let's practice using it again together. </p>\n//                         </div>\n//                         <div className='container_for_small_margin'>\n//                             <p className={props.commentMode} id=\"p_6\" onClick={event => handleCommentClick(event)}>How are you feeling right now?</p>\n//                         </div>\n//                         <div id=\"instruction_box_number_1_page_9_script_4\" className={`ital custom_svg demo_box ${props.commentMode}`} onClick={event => handleCommentClick(event)}>\n//                             <p className=\"top_line_in_instruction_box\">\n//                                 Help your mentee review their body scan workscript.<br/>\n//                                 Put the link in the chat and ask your mentee to screen share\n//                             </p>\n//                         </div>\n//                         <p className={props.commentMode} id=\"p_7\" onClick={event => handleCommentClick(event)}>\n//                             Let's think about how each part of your body feels.\n//                         </p>\n//                         <div id=\"instruction_box_number_2_page_9_script_4\" className={`ital custom_svg demo_box ${props.commentMode}`} onClick={event => handleCommentClick(event)}>\n//                             <p className=\"top_line_in_instruction_box\">\n//                                 If your mentee needs help, ask them some questions. You can use the questions below or use the long list of questions you have in your binder.\n//                             </p>\n//                         </div>\n//                         <br/><br/>\n//                         <ul>\n//                             <li className={`${props.commentMode}`} id=\"li_1\" onClick={event => handleCommentClick(event)}>How does your chest feel?</li>\n//                             <li className={`${props.commentMode}`} id=\"li_2\" onClick={event => handleCommentClick(event)}>How is your breathing?</li>\n//                             <li className={`${props.commentMode}`} id=\"li_3\" onClick={event => handleCommentClick(event)}>How do your mouth and jaw feel?</li>\n//                             <li className={`${props.commentMode}`} id=\"li_4\" onClick={event => handleCommentClick(event)}>How do your shoulders feel?</li>\n//                             <li className={`${props.commentMode}`} id=\"li_5\" onClick={event => handleCommentClick(event)}>How do your legs and feet feel?</li>\n//                             <li className={`${props.commentMode}`} id=\"li_6\" onClick={event => handleCommentClick(event)}>Do you notice yourself fidgeting?</li>\n//                             <li className={`${props.commentMode}`} id=\"li_7\" onClick={event => handleCommentClick(event)}>Do you notice a change in your energy level? </li>\n//                             <li className={`open_circles_bullets ${props.commentMode}`} id=\"li_8\" onClick={event => handleCommentClick(event)}>Do you feel like you have more or less energy than usual?</li>\n//                         </ul>\n//                         <br/><br/><br/>\n//                         <p className={props.commentMode} id=\"p_8\" onClick={event => handleCommentClick(event)}>\n//                             Do you have any questions about using the body scan worksheet?\n//                             <br/>\n//                         </p>\n//                             <textarea className={props.commentMode} onClick={event => handleCommentClick(event)} onChange={event => handleChange(event)} id=\"text_box_number_4_page_9_script_4\" defaultValue={getValue(\"text_box_number_4_page_9_script_4\")} />\n//                             <br/><br/><br/>\n//                         <p className={props.commentMode} id=\"p_9\" onClick={event => handleCommentClick(event)}>  \n//                             You can keep practicing this week to learn more about your mental health. \n//                         </p>\n//                     </div>\n//                 </div>\n//                 {sideBar}\n//             </div>\n//         )    \n//         }\n//         else{\n//             return(\n//             <div>\n//                 \n//                 {sideBar}\n//             </div>\n//             )\n//         }           \n// }\n// const mapStateToProps = state => {\n//     return{\n//         texts: state.texts.curatedTextsFromCurrentScript,\n//         mentee_id: state.mentees.current_mentee_id,\n//         script: state.texts.currentScript,\n//         commentMode: state.comments.commentMode,\n//         sendingComment: state.comments.sendingComment,\n//         imageClicked: state.body.imageClicked\n//     }\n// }\n// export default connect(mapStateToProps, mapDispatchToProps)(Page9);\n\nvar _c;\n\n$RefreshReg$(_c, \"Page6\");","map":{"version":3,"sources":["/mnt/c/Users/moust/Documents/Scripts/frontend/src/components/scripts/script6/pages/page6.js"],"names":["connect","patchTexts","postTexts","toggleBodyImage","phone","body","BodyDiagram","Page6","props","handleBodyImageClicked","event","handleChange","object_outcome","getObject","target","id","value","id_tag","mentee_id","script","current_id_tag","current_text","texts","find","text_item","getValue","current_text_for_value","imageClicked","mapStateToProps","state","curatedTextsFromCurrentScript","mentees","current_mentee_id","currentScript","mapDispatchToProps","dispatch","text_data"],"mappings":"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AAQ,CAACjC,SAAS,CAACkC,SAAD,CAAV,CAFhC;AAGFjC,IAAAA,eAAe,EAAE,MAAMgC,QAAQ,CAAChC,eAAe,EAAhB;AAH7B,GAAN;AAKH,CAND;;AAQA,eAAeH,OAAO,CAAC4B,eAAD,EAAkBM,kBAAlB,CAAP,CAA6C3B,KAA7C,CAAf,C,CAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA","sourcesContent":["import { connect } from 'react-redux';\r\n\r\nimport { patchTexts, postTexts } from '../../../../actions/text';\r\nimport { toggleBodyImage } from '../../../../actions/body';\r\n\r\n\r\nimport phone from '../../pictures/phone.png';\r\nimport body from '../../pictures/body.png';\r\n\r\nimport BodyDiagram from '../../general pages/bodydiagram';\r\n\r\nconst Page6 = props => {\r\n\r\n    const handleBodyImageClicked = (event) => {\r\n        props.toggleBodyImage();\r\n    }\r\n    \r\n    const handleChange = (event) => {\r\n        const object_outcome = getObject(event.target.id)\r\n        object_outcome === \"\" ? \r\n        props.postTexts({value: event.target.value, id_tag: event.target.id, mentee_id: props.mentee_id, script: props.script})\r\n        :\r\n        props.patchTexts({value: event.target.value, id_tag: event.target.id, id: object_outcome.id, mentee_id: props.mentee_id, script: props.script})\r\n\r\n    }\r\n    \r\n    const getObject = (current_id_tag) => {\r\n        //Returns the object that has the specific id_tag\r\n        let current_text = props.texts.find(text_item => {return text_item.id_tag === current_id_tag})\r\n        return current_text ? current_text : \"\"\r\n    }\r\n\r\n    const getValue = (current_id_tag) => {\r\n        //Same as getObject but instead it returns the value\r\n        let current_text_for_value = props.texts.find(text_item => {return text_item.id_tag === current_id_tag})\r\n        return current_text_for_value ? current_text_for_value.value : \"\"\r\n    }\r\n    if (!props.imageClicked){\r\n        return (\r\n            <div className=\"sheet\">\r\n                <div className='left container_for_small_margin'>\r\n                    <div className=\"div_with_body_image_and_p\" id=\"d_w_b_i_a_p_page_6_script_6\">\r\n                        <p>\r\n                            <strong>Step 1: Identify how you are feeling</strong><br/>\r\n                            The purpose of a coping strategy is to help you feel better when you are having challenging, uncomfortable emotions. Sometimes it can be hard to tell how you are feeling.<br/>\r\n                            We have been using the body scan worksheet to help you identify your emotions.<br/>\r\n                            Let's practice using the body scan worksheet before we practice your coping strategy. \r\n                        </p>\r\n                        <input type=\"image\" alt=\"Body image\" src={body} name=\"body_image\" className=\"body_diagram_button\" id=\"body_image_button\" onClick={event => handleBodyImageClicked(event)} />\r\n                    </div>\r\n                    \r\n                    <div id=\"instruction_box_number_1_page_6_script_6\" className=\"custom_svg demo_box container_for_small_margin\">\r\n                        <p className='top_line_in_instruction_box'>\r\n                            Help your mentee use the body scan worksheet or mood log.<br/>\r\n                            Put the link in the chat and ask your mentee to screen share<br/>\r\n                            <strong>Write how your mentee is feeling</strong><br/>\r\n                            <textarea onChange={event => handleChange(event)} id=\"text_box_number_1_page_6_script_6\" defaultValue={getValue(\"text_box_number_1_page_6_script_6\")} />\r\n                        </p>\r\n                    </div>\r\n\r\n\r\n                    <div className='container_for_large_margin'>\r\n                        <p>Now that you figured out how you are feeling, let's practice rating it on the mood log.</p>\r\n                        <div id=\"instruction_box_number_2_page_6_script_6\" className='custom_svg demo_box container_for_small_margin'>\r\n                            <p className='top_line_in_instruction_box'>\r\n                                Help your mentee use the mood log on their phone.<br/>\r\n                                Put the link <textarea onChange={event => handleChange(event)} id=\"text_box_number_2_page_6_script_6\" defaultValue={getValue(\"text_box_number_2_page_6_script_6\")} /> in the chat and ask your mentee to screen share.<br/>\r\n                                If your mentee points to an emoji, but doesn't say a feeling, ask them to describe what the feeling is. \r\n                            </p>\r\n                        </div>\r\n                        <img src={phone} alt=\"Phone with emojis\" id=\"phone_page_6_script_6\" />\r\n                    </div> \r\n                </div>\r\n            </div>\r\n            \r\n        )\r\n    \r\n    }\r\n    else{\r\n        <BodyDiagram />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return{\r\n        texts: state.texts.curatedTextsFromCurrentScript,\r\n        mentee_id: state.mentees.current_mentee_id,\r\n        script: state.texts.currentScript\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return{\r\n        patchTexts: (text_data) => dispatch(patchTexts(text_data)),\r\n        postTexts: (text_data) => dispatch(postTexts(text_data)),\r\n        toggleBodyImage: () => dispatch(toggleBodyImage())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Page6);\r\n\r\n\r\n\r\n\r\n//                     <h1 className={`bold center ${props.commentMode}`} id=\"h1\" onClick={event => handleCommentClick(event)}>Review</h1>\r\n//                     <div className=\"left\">\r\n//                         <div className='body_page_main_div'>\r\n//                             <div className='container_for_medium_margin'>\r\n//                             \r\n//                                 <p className={props.commentMode} id=\"p_1\" onClick={event => handleCommentClick(event)}>\r\n//                                         Last week, we worked on the body scan worksheet. \r\n//                                         <br/><br/>\r\n//                                         Did you try using the body scan worksheet on your own?\r\n//                                         <br/><br/>\r\n//                                         What do you think about it?\r\n//                                         <br/>\r\n//                                         There are no right or wrong answers.\r\n//                                     </p>\r\n//                                  \r\n//                              </div>\r\n                                \r\n//                             </div>\r\n//                         </div>\r\n//                         <div className='container_for_medium_margin'>\r\n//                         <p className={props.commentMode} id=\"p_2\" onClick={event => handleCommentClick(event)}>Is any part of it hard?</p>\r\n//                         <textarea className={props.commentMode} onClick={event => handleCommentClick(event)} onChange={event => handleChange(event)} id=\"text_box_number_1_page_9_script_4\" defaultValue={getValue(\"text_box_number_1_page_9_script_4\")} />\r\n//                         <br/><br/><br/><br/><br/><br/><br/>\r\n//                         <p className={props.commentMode} id=\"p_3\" onClick={event => handleCommentClick(event)}>Is there anything you don't like about it?</p>\r\n//                         <textarea className={props.commentMode} onClick={event => handleCommentClick(event)} onChange={event => handleChange(event)} id=\"text_box_number_2_page_9_script_4\" defaultValue={getValue(\"text_box_number_2_page_9_script_4\")} /><br/><br/>\r\n//                         <br/><br/><br/><br/><br/><br/><br/>\r\n//                         <p className={props.commentMode} id=\"p_4\" onClick={event => handleCommentClick(event)}>Is there any way I can help make it easier for you?</p>\r\n//                         <textarea className={props.commentMode} onClick={event => handleCommentClick(event)} onChange={event => handleChange(event)} id=\"text_box_number_3_page_9_script_4\" defaultValue={getValue(\"text_box_number_3_page_9_script_4\")} /><br/><br/>\r\n                            \r\n//                         <p className={props.commentMode} id=\"p_5\" onClick={event => handleCommentClick(event)}>Let's practice using it again together. </p>\r\n                        \r\n//                         </div>\r\n                        \r\n//                         <div className='container_for_small_margin'>\r\n//                             <p className={props.commentMode} id=\"p_6\" onClick={event => handleCommentClick(event)}>How are you feeling right now?</p>\r\n//                         </div>\r\n                    \r\n//                         <div id=\"instruction_box_number_1_page_9_script_4\" className={`ital custom_svg demo_box ${props.commentMode}`} onClick={event => handleCommentClick(event)}>\r\n//                             <p className=\"top_line_in_instruction_box\">\r\n//                                 Help your mentee review their body scan workscript.<br/>\r\n//                                 Put the link in the chat and ask your mentee to screen share\r\n//                             </p>\r\n//                         </div>\r\n//                         <p className={props.commentMode} id=\"p_7\" onClick={event => handleCommentClick(event)}>\r\n//                             Let's think about how each part of your body feels.\r\n//                         </p>\r\n//                         <div id=\"instruction_box_number_2_page_9_script_4\" className={`ital custom_svg demo_box ${props.commentMode}`} onClick={event => handleCommentClick(event)}>\r\n//                             <p className=\"top_line_in_instruction_box\">\r\n//                                 If your mentee needs help, ask them some questions. You can use the questions below or use the long list of questions you have in your binder.\r\n//                             </p>\r\n//                         </div>\r\n//                         <br/><br/>\r\n//                         <ul>\r\n//                             <li className={`${props.commentMode}`} id=\"li_1\" onClick={event => handleCommentClick(event)}>How does your chest feel?</li>\r\n//                             <li className={`${props.commentMode}`} id=\"li_2\" onClick={event => handleCommentClick(event)}>How is your breathing?</li>\r\n//                             <li className={`${props.commentMode}`} id=\"li_3\" onClick={event => handleCommentClick(event)}>How do your mouth and jaw feel?</li>\r\n//                             <li className={`${props.commentMode}`} id=\"li_4\" onClick={event => handleCommentClick(event)}>How do your shoulders feel?</li>\r\n//                             <li className={`${props.commentMode}`} id=\"li_5\" onClick={event => handleCommentClick(event)}>How do your legs and feet feel?</li>\r\n//                             <li className={`${props.commentMode}`} id=\"li_6\" onClick={event => handleCommentClick(event)}>Do you notice yourself fidgeting?</li>\r\n//                             <li className={`${props.commentMode}`} id=\"li_7\" onClick={event => handleCommentClick(event)}>Do you notice a change in your energy level? </li>\r\n//                             <li className={`open_circles_bullets ${props.commentMode}`} id=\"li_8\" onClick={event => handleCommentClick(event)}>Do you feel like you have more or less energy than usual?</li>\r\n//                         </ul>\r\n//                         <br/><br/><br/>\r\n//                         <p className={props.commentMode} id=\"p_8\" onClick={event => handleCommentClick(event)}>\r\n//                             Do you have any questions about using the body scan worksheet?\r\n//                             <br/>\r\n//                         </p>\r\n//                             <textarea className={props.commentMode} onClick={event => handleCommentClick(event)} onChange={event => handleChange(event)} id=\"text_box_number_4_page_9_script_4\" defaultValue={getValue(\"text_box_number_4_page_9_script_4\")} />\r\n//                             <br/><br/><br/>\r\n//                         <p className={props.commentMode} id=\"p_9\" onClick={event => handleCommentClick(event)}>  \r\n//                             You can keep practicing this week to learn more about your mental health. \r\n//                         </p>\r\n//                     </div>\r\n//                 </div>\r\n//                 {sideBar}\r\n//             </div>\r\n//         )    \r\n//         }\r\n//         else{\r\n//             return(\r\n//             <div>\r\n//                 \r\n//                 {sideBar}\r\n//             </div>\r\n//             )\r\n//         }           \r\n// }\r\n\r\n// const mapStateToProps = state => {\r\n//     return{\r\n//         texts: state.texts.curatedTextsFromCurrentScript,\r\n//         mentee_id: state.mentees.current_mentee_id,\r\n//         script: state.texts.currentScript,\r\n//         commentMode: state.comments.commentMode,\r\n//         sendingComment: state.comments.sendingComment,\r\n//         imageClicked: state.body.imageClicked\r\n//     }\r\n// }\r\n\r\n\r\n\r\n\r\n// export default connect(mapStateToProps, mapDispatchToProps)(Page9);\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}