{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/moust/Documents/Scripts/frontend/src/components/scripts/script3/pages/page7.js\",\n    _s = $RefreshSig$();\n\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { toggleCommentMode } from '../../../../actions/comment';\nimport { patchTexts, postTexts } from '../../../../actions/text';\nimport { useState, useEffect } from 'react';\nimport Sidebar from '../../general pages/sidebar';\nimport componentWrapper from '../../../../HOC';\nimport shareScreen from '../../pictures/sharescreen.png';\nimport stopShare from '../../pictures/stopshare.png';\nimport body from '../../pictures/body.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Page7 = props => {\n  _s();\n\n  const [sideBar, setSidebar] = useState(null);\n  const [blur, setBlur] = useState(\"\");\n  useEffect(() => {\n    setBlur(\"\");\n    setSidebar(null);\n  }, [props.sendingComment]);\n\n  const handleCommentClick = event => {\n    //Here is where you render the sidebar\n    if (props.commentMode === 'commentModeOn') {\n      if (blur === \"\") {\n        setBlur(\"blur\");\n      } else {\n        setBlur(\"\");\n      }\n\n      if (sideBar === null) {\n        setSidebar( /*#__PURE__*/_jsxDEV(Sidebar, {\n          id_tag: event.target.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 28\n        }, this));\n      }\n\n      props.toggleCommentMode();\n    }\n  };\n\n  const handleChange = event => {\n    const object_outcome = getObject(event.target.id);\n    object_outcome === \"\" ? props.postTexts({\n      value: event.target.value,\n      id_tag: event.target.id,\n      mentee_id: props.mentee_id,\n      script: props.script\n    }) : props.patchTexts({\n      value: event.target.value,\n      id_tag: event.target.id,\n      id: object_outcome.id,\n      mentee_id: props.mentee_id,\n      script: props.script\n    });\n  };\n\n  const getObject = current_id_tag => {\n    //Returns the object that has the specific id_tag\n    let current_text = props.texts.find(text_item => {\n      return text_item.id_tag === current_id_tag;\n    });\n    return current_text ? current_text : \"\";\n  };\n\n  const getValue = current_id_tag => {\n    //Same as getObject but instead it returns the value\n    let current_text_for_value = props.texts.find(text_item => {\n      return text_item.id_tag === current_id_tag;\n    });\n    return current_text_for_value ? current_text_for_value.value : \"\";\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `sheet ${blur}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"body_page_main_div\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: `bold center ${props.commentMode}`,\n          id: \"h1\",\n          onClick: event => handleCommentClick(event),\n          children: \"Body scan\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"left container_for_medium_margin\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: props.commentMode,\n            id: \"p_1\",\n            onClick: event => handleCommentClick(event),\n            children: \"Now we will practice thinking about how your body feels using something called a body scan.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 30\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"div_with_body_image\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: props.commentMode,\n              id: \"p_1\",\n              onClick: event => handleCommentClick(event),\n              children: \"Our bodies can help us learn about our feelings and emotions. I will show you an example.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 34\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              target: \"_blank\",\n              to: \"/body\",\n              rel: \"noopener noreferrer\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"image\",\n                alt: \"Body image\",\n                src: body,\n                name: \"body_image\",\n                className: `body_diagram_button ${props.commentMode}`,\n                id: \"body_image_button\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 93\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 34\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 30\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 30\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"instruction_box_number_1_page_7_script_3\",\n            className: `custom_svg demo_box container_for_medium_margin ${props.commentMode}`,\n            onClick: event => handleCommentClick(event),\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"top_line_in_instruction_box\",\n              children: [\"Click on the link: \", /*#__PURE__*/_jsxDEV(\"textarea\", {\n                onChange: event => handleChange(event),\n                id: \"text_box_number_1_page_7_script_3\",\n                defaultValue: getValue(\"text_box_number_1_page_7_script_3\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 96\n              }, this), \" and share your screen. \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 34\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 34\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 39\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 44\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: shareScreen,\n              alt: \"Share screen\",\n              id: \"share_your_screen_page_7_script_3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 34\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 34\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 39\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Explain your example \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 34\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 30\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 30\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"instruction_box_number_2_page_7_script_3\",\n            className: `custom_svg demo_box container_for_large_margin ${props.commentMode}`,\n            onClick: event => handleCommentClick(event),\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"top_line_in_instruction_box\",\n              children: \"When you are done, stop screen sharing\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 34\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: stopShare,\n              alt: \"Stop sharing screen\",\n              id: \"stop_sharing_screen_page_7_script_3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 34\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 30\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 22\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 18\n    }, this), sideBar]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 13\n  }, this);\n};\n\n_s(Page7, \"XCCcHz0cDyTlGKX0ZuBjrdhgAv8=\");\n\n_c = Page7;\n\nconst mapStateToProps = state => {\n  return {\n    texts: state.texts.curatedTextsFromCurrentScript,\n    mentee_id: state.mentees.current_mentee_id,\n    script: state.texts.currentScript,\n    commentMode: state.comments.commentMode,\n    sendingComment: state.comments.sendingComment\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    patchTexts: text_data => dispatch(patchTexts(text_data)),\n    postTexts: text_data => dispatch(postTexts(text_data)),\n    toggleCommentMode: () => dispatch(toggleCommentMode())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(componentWrapper(Page7));\n\nvar _c;\n\n$RefreshReg$(_c, \"Page7\");","map":{"version":3,"sources":["/mnt/c/Users/moust/Documents/Scripts/frontend/src/components/scripts/script3/pages/page7.js"],"names":["connect","Link","toggleCommentMode","patchTexts","postTexts","useState","useEffect","Sidebar","componentWrapper","shareScreen","stopShare","body","Page7","props","sideBar","setSidebar","blur","setBlur","sendingComment","handleCommentClick","event","commentMode","target","id","handleChange","object_outcome","getObject","value","id_tag","mentee_id","script","current_id_tag","current_text","texts","find","text_item","getValue","current_text_for_value","mapStateToProps","state","curatedTextsFromCurrentScript","mentees","current_mentee_id","currentScript","comments","mapDispatchToProps","dispatch","text_data"],"mappings":"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","sourcesContent":["import { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { toggleCommentMode } from '../../../../actions/comment';\r\nimport { patchTexts, postTexts } from '../../../../actions/text';\r\n\r\nimport { useState, useEffect } from 'react';\r\n\r\nimport Sidebar from '../../general pages/sidebar';\r\nimport componentWrapper from '../../../../HOC'; \r\n\r\n\r\nimport shareScreen from '../../pictures/sharescreen.png';\r\nimport stopShare from '../../pictures/stopshare.png';\r\nimport body from '../../pictures/body.png';\r\n\r\n\r\nconst Page7 = (props) => {\r\n    \r\n    const [sideBar, setSidebar] = useState(null);\r\n    const [blur, setBlur] = useState(\"\");                  \r\n\r\n    useEffect(() => {\r\n        setBlur(\"\");\r\n        setSidebar(null);\r\n      }, [props.sendingComment]);\r\n\r\n    const handleCommentClick = (event) => {\r\n        //Here is where you render the sidebar\r\n        if (props.commentMode === 'commentModeOn'){\r\n            if (blur === \"\"){\r\n                setBlur(\"blur\");\r\n            }\r\n            else {\r\n                setBlur(\"\");\r\n            }\r\n            if (sideBar === null){\r\n                setSidebar(<Sidebar id_tag={event.target.id} />)\r\n            }\r\n            props.toggleCommentMode();\r\n        }\r\n    }\r\n\r\n    \r\n    const handleChange = (event) => {\r\n        const object_outcome = getObject(event.target.id)\r\n        object_outcome === \"\" ? \r\n        props.postTexts({value: event.target.value, id_tag: event.target.id, mentee_id: props.mentee_id, script: props.script})\r\n        :\r\n        props.patchTexts({value: event.target.value, id_tag: event.target.id, id: object_outcome.id, mentee_id: props.mentee_id, script: props.script})\r\n\r\n    }\r\n    \r\n    const getObject = (current_id_tag) => {\r\n        //Returns the object that has the specific id_tag\r\n        let current_text = props.texts.find(text_item => {return text_item.id_tag === current_id_tag})\r\n        return current_text ? current_text : \"\"\r\n    }\r\n\r\n    const getValue = (current_id_tag) => {\r\n        //Same as getObject but instead it returns the value\r\n        let current_text_for_value = props.texts.find(text_item => {return text_item.id_tag === current_id_tag})\r\n        return current_text_for_value ? current_text_for_value.value : \"\"\r\n    }\r\n    \r\n    return (\r\n            <div>\r\n                 <div className={`sheet ${blur}`}>\r\n                     <div className='body_page_main_div'>\r\n                         <h1 className={`bold center ${props.commentMode}`} id=\"h1\" onClick={event => handleCommentClick(event)}>Body scan</h1>\r\n                         <div className=\"left container_for_medium_margin\">\r\n                             \r\n                             <p className={props.commentMode} id=\"p_1\" onClick={event => handleCommentClick(event)}>Now we will practice thinking about how your body feels using something called a body scan.</p>\r\n                             <div className=\"div_with_body_image\">\r\n                                 <p className={props.commentMode} id=\"p_1\" onClick={event => handleCommentClick(event)}>Our bodies can help us learn about our feelings and emotions. I will show you an example.</p>\r\n                                 <Link target=\"_blank\" to=\"/body\" rel=\"noopener noreferrer\"><input type=\"image\" alt=\"Body image\" src={body} name=\"body_image\" className={`body_diagram_button ${props.commentMode}`} id=\"body_image_button\" /></Link>\r\n                             </div>\r\n                             <br/>\r\n                             <div id=\"instruction_box_number_1_page_7_script_3\" className={`custom_svg demo_box container_for_medium_margin ${props.commentMode}`} onClick={event => handleCommentClick(event)}>\r\n                                 <p className=\"top_line_in_instruction_box\">Click on the link: <textarea onChange={event => handleChange(event)} id=\"text_box_number_1_page_7_script_3\" defaultValue={getValue(\"text_box_number_1_page_7_script_3\")} /> and share your screen. </p>\r\n                                 <br/><br/><br/>\r\n                                 <img src={shareScreen} alt=\"Share screen\" id=\"share_your_screen_page_7_script_3\"/>\r\n                                 <br/><br/>\r\n                                 <p>Explain your example </p>\r\n                             </div>\r\n                             <br/>\r\n                             <div id=\"instruction_box_number_2_page_7_script_3\" className={`custom_svg demo_box container_for_large_margin ${props.commentMode}`} onClick={event => handleCommentClick(event)}>\r\n                                 <p className='top_line_in_instruction_box'>When you are done, stop screen sharing</p>\r\n                                 <img src={stopShare} alt=\"Stop sharing screen\" id=\"stop_sharing_screen_page_7_script_3\"/>\r\n                             </div>\r\n                         </div>\r\n                     </div>\r\n                 </div>\r\n                 {sideBar}\r\n             </div>\r\n        )\r\n\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return{\r\n        texts: state.texts.curatedTextsFromCurrentScript,\r\n        mentee_id: state.mentees.current_mentee_id,\r\n        script: state.texts.currentScript,\r\n        commentMode: state.comments.commentMode,\r\n        sendingComment: state.comments.sendingComment\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return{\r\n        patchTexts: (text_data) => dispatch(patchTexts(text_data)),\r\n        postTexts: (text_data) => dispatch(postTexts(text_data)),\r\n        toggleCommentMode: () => dispatch(toggleCommentMode())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(componentWrapper(Page7));\r\n"]},"metadata":{},"sourceType":"module"}