{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/moust/Documents/Scripts/frontend/src/components/scripts/script16/pages/page12.js\",\n    _s = $RefreshSig$();\n\nimport checkButSmaller from \"../../pictures/checkbutsmaller.png\";\nimport redXButSmaller from \"../../pictures/redxbutsmaller.png\";\nimport { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { toggleCommentMode } from '../../../../actions/comment';\nimport { goToSpecificPage } from \"../../../../actions/page\";\nimport Sidebar from '../../general pages/sidebar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Page12 = props => {\n  _s();\n\n  const [redXWords, setRedXWords] = useState(\"\");\n  const [sideBar, setSidebar] = useState(null);\n  const [blur, setBlur] = useState(\"\");\n  useEffect(() => {\n    setBlur(\"\");\n    setSidebar(null);\n  }, [props.sendingComment]);\n\n  const handleCommentClick = event => {\n    //Here is where you render the sidebar\n    if (props.commentMode === 'commentModeOn') {\n      if (blur === \"\") {\n        setBlur(\"blur\");\n      } else {\n        setBlur(\"\");\n      }\n\n      if (sideBar === null) {\n        setSidebar( /*#__PURE__*/_jsxDEV(Sidebar, {\n          id_tag: event.target.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 28\n        }, this));\n      }\n\n      props.toggleCommentMode();\n    }\n  };\n\n  const handleClick = (e, letter) => {\n    if (letter === 'c') {\n      goToSpecificPage(13);\n    } else if (letter === 'x') {\n      setRedXWords(\"Say goodbye and thank your mentee\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `sheet ${blur}`,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: `bold center ${props.commentMode}`,\n        id: \"h1_1\",\n        onClick: event => handleCommentClick(event),\n        children: \"Keeping in touch\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container_for_extra_small_margin\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"check\",\n            src: checkButSmaller,\n            alt: \"Check\",\n            onClick: event => handleClick(event, 'c')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"what_does_your_mentor_say\",\n            children: \"You want to stay in touch with your mentee\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 125\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"choicePicked\",\n            children: greenCheckWords\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 26\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"redX\",\n            src: redXButSmaller,\n            alt: \"Red X\",\n            onClick: event => handleClick(event, 'x')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"what_does_your_mentor_say\",\n            children: \"You do not want to stay in touch with your mentee\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 123\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"choicePicked\",\n            children: redXWords\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Page12, \"LDJf2PY/RdOQZonMIRSAyNXkCxs=\");\n\n_c = Page12;\n\nconst mapStateToProps = state => {\n  return {\n    commentMode: state.comments.commentMode,\n    sendingComment: state.comments.sendingComment\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    toggleCommentMode: () => dispatch(toggleCommentMode())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Page12);\n\nvar _c;\n\n$RefreshReg$(_c, \"Page12\");","map":{"version":3,"sources":["/mnt/c/Users/moust/Documents/Scripts/frontend/src/components/scripts/script16/pages/page12.js"],"names":["checkButSmaller","redXButSmaller","useState","useEffect","connect","toggleCommentMode","goToSpecificPage","Sidebar","Page12","props","redXWords","setRedXWords","sideBar","setSidebar","blur","setBlur","sendingComment","handleCommentClick","event","commentMode","target","id","handleClick","e","letter","greenCheckWords","mapStateToProps","state","comments","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import checkButSmaller from \"../../pictures/checkbutsmaller.png\";\r\nimport redXButSmaller from \"../../pictures/redxbutsmaller.png\";\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { toggleCommentMode } from '../../../../actions/comment';\r\nimport { goToSpecificPage } from \"../../../../actions/page\";\r\n\r\n\r\n\r\nimport Sidebar from '../../general pages/sidebar';\r\n\r\n\r\nconst Page12 = (props) =>{\r\n\r\n    const [redXWords, setRedXWords] = useState(\"\")\r\n    const [sideBar, setSidebar] = useState(null);\r\n    const [blur, setBlur] = useState(\"\");                         \r\n\r\n\r\n    useEffect(() => {\r\n        setBlur(\"\");\r\n        setSidebar(null);\r\n      }, [props.sendingComment]);\r\n\r\n    const handleCommentClick = (event) => {\r\n        //Here is where you render the sidebar\r\n        if (props.commentMode === 'commentModeOn'){\r\n            if (blur === \"\"){\r\n                setBlur(\"blur\");\r\n            }\r\n            else {\r\n                setBlur(\"\");\r\n            }\r\n            if (sideBar === null){\r\n                setSidebar(<Sidebar id_tag={event.target.id} />)\r\n            }\r\n            props.toggleCommentMode();\r\n        }\r\n    }\r\n\r\n    const handleClick = (e, letter) => {\r\n        if (letter === 'c'){\r\n            goToSpecificPage(13)\r\n        }\r\n        else if (letter === 'x'){\r\n            setRedXWords(\"Say goodbye and thank your mentee\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={`sheet ${blur}`}>\r\n            <h1 className={`bold center ${props.commentMode}`} id=\"h1_1\" onClick={event => handleCommentClick(event)}>Keeping in touch</h1>\r\n            <div className=\"left\">\r\n                <div className='container_for_extra_small_margin'>\r\n                    <img className=\"check\" src={checkButSmaller} alt=\"Check\" onClick={(event) => handleClick(event, 'c')} /><p className=\"what_does_your_mentor_say\">You want to stay in touch with your mentee</p>\r\n                    <br/>\r\n                    <p className=\"choicePicked\">{greenCheckWords}</p>\r\n                    <br/><br/>\r\n                    <img className=\"redX\" src={redXButSmaller} alt=\"Red X\" onClick={(event) => handleClick(event, 'x')} /><p className=\"what_does_your_mentor_say\">You do not want to stay in touch with your mentee</p>\r\n                    <br/>\r\n                    <p className=\"choicePicked\">{redXWords}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return{\r\n        commentMode: state.comments.commentMode,\r\n        sendingComment: state.comments.sendingComment \r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return{\r\n        toggleCommentMode: () => dispatch(toggleCommentMode())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Page12);"]},"metadata":{},"sourceType":"module"}