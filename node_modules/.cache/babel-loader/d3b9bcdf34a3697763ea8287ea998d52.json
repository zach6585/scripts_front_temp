{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/moust/Documents/Scripts/frontend/src/components/scripts/script2/pages/page4.js\",\n    _s = $RefreshSig$();\n\nimport shareScreen from '../../pictures/sharescreen.png';\nimport stopShare from '../../pictures/stopshare.png';\nimport { connect } from 'react-redux';\nimport { useState, useEffect } from 'react';\nimport { patchTexts, postTexts } from '../../../../actions/text';\nimport { toggleCommentMode } from '../../../../actions/comments';\nimport Sidebar from '../../general pages/sidebar';\nimport sidebar from '../../general pages/sidebar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Page4 = props => {\n  _s();\n\n  const [sideBar, setSidebar] = useState(null);\n  const [blur, setBlur] = useState(\"\");\n  useEffect(() => {\n    handleCommentClick(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [props.sendingComment]);\n\n  const handleCommentClick = event => {\n    //Here is where you render the sidebar\n    if (props.commentMode === 'commentModeOn') {\n      if (blur === \"\") {\n        setBlur(\"blur\");\n      } else {\n        setBlur(\"\");\n      }\n\n      if (sideBar === null) {\n        setSidebar( /*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 28\n        }, this));\n      }\n\n      props.toggleCommentMode();\n    }\n  };\n\n  const handleChange = event => {\n    const object_outcome = getObject(event.target.id);\n    object_outcome === \"\" ? props.postTexts({\n      value: event.target.value,\n      id_tag: event.target.id,\n      mentee_id: props.mentee_id,\n      script: props.script\n    }) : props.patchTexts({\n      value: event.target.value,\n      id_tag: event.target.id,\n      id: object_outcome.id,\n      mentee_id: props.mentee_id,\n      script: props.script\n    });\n  };\n\n  const getObject = current_id_tag => {\n    //Returns the object that has the specific id_tag\n    let current_text = props.texts.find(text_item => {\n      return text_item.id_tag === current_id_tag;\n    });\n    return current_text ? current_text : \"\";\n  };\n\n  const getValue = current_id_tag => {\n    //Same as getObject but instead it returns the value\n    let current_text_for_value = props.texts.find(text_item => {\n      return text_item.id_tag === current_id_tag;\n    });\n    return current_text_for_value ? current_text_for_value.value : \"\";\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: sidebar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `sheet ${blur}`,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: `bold center ${props.commentMode}`,\n        id: \"h1\",\n        onClick: event => handleCommentClick(event),\n        children: \"Icebreaker\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left container_for_medium_margin\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: props.commentMode,\n          onClick: event => handleCommentClick(event),\n          id: \"p1\",\n          children: \"I think it would be fun to get to know more about each other. \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"instruction_box_number_1_page_4_script_2\",\n          className: `ital custom_svg demo_box container_for_small_margin ${props.commentMode}`,\n          onClick: event => handleCommentClick(event),\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: shareScreen,\n            alt: \"Share Screen\",\n            id: \"share_your_screen_page_4_script_2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"top_line_in_instruction_box\",\n            children: [\"Click on the \", /*#__PURE__*/_jsxDEV(\"textarea\", {\n              onChange: event => handleChange(event),\n              id: \"text_box_number_1_page_4_script_2\",\n              defaultValue: getValue(\"text_box_number_1_page_4_script_2\"),\n              placeholder: \"link to be inserted\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 42\n            }, this), \" and\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 232\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 237\n            }, this), \"share your screen.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 47\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 52\n            }, this), \"Take turns picking question to ask each other in the XXX game.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container_for_small_margin\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: props.commentMode,\n            onClick: event => handleCommentClick(event),\n            id: \"p2\",\n            children: [\"We will click on the boxes. A question will show up in the box and we will both answer it.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 119\n            }, this), \"If you also have a question that isn't in game, but you really want to ask me, just let me know!\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 125\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"instruction_box_number_2_page_4_script_2\",\n          className: `ital custom_svg demo_box container_for_small_margin ${props.commentMode}`,\n          onClick: event => handleCommentClick(event),\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"top_line_in_instruction_box\",\n            children: \"When you are done with the game, stop screen sharing\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: stopShare,\n            alt: \"Stop share\",\n            id: \"stop_sharing_screen_page_4_script_2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Page4, \"XCCcHz0cDyTlGKX0ZuBjrdhgAv8=\");\n\n_c = Page4;\n\nconst mapStateToProps = state => {\n  return {\n    texts: state.texts.curatedTextsFromCurrentScript,\n    mentee_id: state.mentees.current_mentee_id,\n    script: state.texts.currentScript,\n    commentMode: state.comments.commentMode,\n    sendingComment: state.comments.sendingComment\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    patchTexts: text_data => dispatch(patchTexts(text_data)),\n    postTexts: text_data => dispatch(postTexts(text_data)),\n    toggleCommentMode: () => dispatch(toggleCommentMode())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Page4);\n\nvar _c;\n\n$RefreshReg$(_c, \"Page4\");","map":{"version":3,"sources":["/mnt/c/Users/moust/Documents/Scripts/frontend/src/components/scripts/script2/pages/page4.js"],"names":["shareScreen","stopShare","connect","useState","useEffect","patchTexts","postTexts","toggleCommentMode","Sidebar","sidebar","Page4","props","sideBar","setSidebar","blur","setBlur","handleCommentClick","sendingComment","event","commentMode","handleChange","object_outcome","getObject","target","id","value","id_tag","mentee_id","script","current_id_tag","current_text","texts","find","text_item","getValue","current_text_for_value","mapStateToProps","state","curatedTextsFromCurrentScript","mentees","current_mentee_id","currentScript","comments","mapDispatchToProps","dispatch","text_data"],"mappings":"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","sourcesContent":["import shareScreen from '../../pictures/sharescreen.png';\r\nimport stopShare from '../../pictures/stopshare.png';\r\nimport { connect } from 'react-redux';\r\nimport { useState, useEffect } from 'react';\r\n\r\nimport { patchTexts, postTexts } from '../../../../actions/text';\r\nimport { toggleCommentMode } from '../../../../actions/comments';\r\n\r\nimport Sidebar from '../../general pages/sidebar';\r\nimport sidebar from '../../general pages/sidebar';\r\n\r\n\r\nconst Page4 = (props) => {\r\n\r\n    \r\n    const [sideBar, setSidebar] = useState(null);\r\n    const [blur, setBlur] = useState(\"\");                         \r\n\r\n\r\n    useEffect(() => {\r\n        handleCommentClick();\r\n         // eslint-disable-next-line react-hooks/exhaustive-deps\r\n      }, [props.sendingComment]);\r\n\r\n    const handleCommentClick = (event) => {\r\n        //Here is where you render the sidebar\r\n        if (props.commentMode === 'commentModeOn'){\r\n            if (blur === \"\"){\r\n                setBlur(\"blur\");\r\n            }\r\n            else {\r\n                setBlur(\"\");\r\n            }\r\n            if (sideBar === null){\r\n                setSidebar(<Sidebar />)\r\n            }\r\n            props.toggleCommentMode();\r\n        }\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        const object_outcome = getObject(event.target.id)\r\n        object_outcome === \"\" ? \r\n        props.postTexts({value: event.target.value, id_tag: event.target.id, mentee_id: props.mentee_id, script: props.script})\r\n        :\r\n        props.patchTexts({value: event.target.value, id_tag: event.target.id, id: object_outcome.id, mentee_id: props.mentee_id, script: props.script})\r\n\r\n    }\r\n    \r\n    const getObject = (current_id_tag) => {\r\n        //Returns the object that has the specific id_tag\r\n        let current_text = props.texts.find(text_item => {return text_item.id_tag === current_id_tag})\r\n        return current_text ? current_text : \"\"\r\n    }\r\n\r\n    const getValue = (current_id_tag) => {\r\n        //Same as getObject but instead it returns the value\r\n        let current_text_for_value = props.texts.find(text_item => {return text_item.id_tag === current_id_tag})\r\n        return current_text_for_value ? current_text_for_value.value : \"\"\r\n    }\r\n    return (\r\n        <div>\r\n            <div>{sidebar}</div>\r\n            <div className={`sheet ${blur}`}>\r\n                <h1 className={`bold center ${props.commentMode}`} id=\"h1\" onClick={event => handleCommentClick(event)}>Icebreaker</h1>\r\n                <div className=\"left container_for_medium_margin\">\r\n                    <p className={props.commentMode} onClick={event => handleCommentClick(event)} id=\"p1\">I think it would be fun to get to know more about each other. </p>\r\n\r\n                    <div id=\"instruction_box_number_1_page_4_script_2\" className={`ital custom_svg demo_box container_for_small_margin ${props.commentMode}`} onClick={event => handleCommentClick(event)}>\r\n                        <img src={shareScreen} alt=\"Share Screen\" id=\"share_your_screen_page_4_script_2\" />\r\n                        <p className=\"top_line_in_instruction_box\">\r\n                            Click on the <textarea onChange={event => handleChange(event)} id=\"text_box_number_1_page_4_script_2\" defaultValue={getValue(\"text_box_number_1_page_4_script_2\")} placeholder='link to be inserted' /> and<br/><br/>\r\n                            share your screen.<br/><br/>    \r\n                            Take turns picking question to ask each other in the XXX game. \r\n                        </p>\r\n                    </div>\r\n                    <div className='container_for_small_margin'>\r\n                        <p className={props.commentMode} onClick={event => handleCommentClick(event)} id=\"p2\">\r\n                            We will click on the boxes. A question will show up in the box and we will both answer it.<br/>\r\n                            If you also have a question that isn't in game, but you really want to ask me, just let me know!<br/>\r\n                        </p>\r\n                    </div>\r\n                    \r\n                    <div id=\"instruction_box_number_2_page_4_script_2\" className={`ital custom_svg demo_box container_for_small_margin ${props.commentMode}`} onClick={event => handleCommentClick(event)}>\r\n                        <p className=\"top_line_in_instruction_box\">When you are done with the game, stop screen sharing</p>\r\n                        <img src={stopShare} alt=\"Stop share\" id=\"stop_sharing_screen_page_4_script_2\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return{\r\n        texts: state.texts.curatedTextsFromCurrentScript,\r\n        mentee_id: state.mentees.current_mentee_id,\r\n        script: state.texts.currentScript,\r\n        commentMode: state.comments.commentMode,\r\n        sendingComment: state.comments.sendingComment \r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return{\r\n        patchTexts: (text_data) => dispatch(patchTexts(text_data)),\r\n        postTexts: (text_data) => dispatch(postTexts(text_data)),\r\n        toggleCommentMode: () => dispatch(toggleCommentMode())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Page4);"]},"metadata":{},"sourceType":"module"}