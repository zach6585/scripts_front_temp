{"ast":null,"code":"import axios from \"axios\";\nexport const userLoginAndCheck = user_data => dispatch => {\n  axios.post(\"https://cors-for-all.herokuapp.com/https://scripts-app-backend.herokuapp.com/login\", {\n    username: user_data.username,\n    password: user_data.password\n  }).then(response => {\n    if (response.data.errors) {\n      dispatch({\n        type: 'ERRORS_FOUND',\n        payload: response.data.errors\n      });\n    } else {\n      localStorage.setItem(\"token\", response.data.jwt);\n      dispatch({\n        type: 'USER_SUCCESS',\n        payload: {\n          user: response.data.user,\n          id: response.data.id\n        }\n      });\n      dispatch({\n        type: \"GET_MENTEES\",\n        payload: response.data.mentees\n      });\n    }\n  });\n};\nexport const userSignupAndCheck = user_data => dispatch => {\n  axios.post(\"https://cors-for-all.herokuapp.com/https://scripts-app-backend.herokuapp.com/users\", {\n    username: user_data.username,\n    email: user_data.email,\n    password: user_data.password,\n    password_confirmation: user_data.password_confirmation\n  }).then(response => {\n    console.log(response.data);\n\n    if (response.data.errors) {\n      dispatch({\n        type: 'ERRORS_FOUND',\n        payload: response.data.errors\n      });\n    } else {\n      localStorage.setItem(\"token\", response.data.jwt);\n      dispatch({\n        type: 'USER_SUCCESS',\n        payload: {\n          user: response.data.user,\n          id: response.data.id\n        }\n      });\n      dispatch({\n        type: \"GET_MENTEES\",\n        payload: response.data.mentees\n      });\n    }\n  });\n};\nexport const changeUserPage = () => dispatch => {\n  dispatch({\n    type: 'CHANGE_PAGE'\n  });\n};\nexport const autoLogin = () => dispatch => {\n  axios.get(\"https://cors-for-all.herokuapp.com/https://scripts-app-backend.herokuapp.com/auto_login\", {\n    headers: {\n      \"Authenticate\": localStorage.token\n    }\n  }).then(response => {\n    dispatch({\n      type: 'USER_SUCCESS',\n      payload: {\n        user: response.data.user,\n        id: response.data.id\n      }\n    });\n    dispatch({\n      type: \"GET_MENTEES\",\n      payload: response.data.mentees\n    });\n  });\n};\nexport const userLogout = user_data => dispatch => {\n  localStorage.removeItem(\"token\");\n  dispatch({\n    type: 'LOGOUT'\n  });\n};","map":{"version":3,"sources":["/mnt/c/Users/moust/Documents/Scripts/frontend/src/actions/user.js"],"names":["axios","userLoginAndCheck","user_data","dispatch","post","username","password","then","response","data","errors","type","payload","localStorage","setItem","jwt","user","id","mentees","userSignupAndCheck","email","password_confirmation","console","log","changeUserPage","autoLogin","get","headers","token","userLogout","removeItem"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\n\r\nexport const userLoginAndCheck = (user_data) => dispatch => {\r\n    axios.post(\"https://cors-for-all.herokuapp.com/https://scripts-app-backend.herokuapp.com/login\", {username: user_data.username, password: user_data.password})\r\n    .then(response => {\r\n        if (response.data.errors){\r\n            dispatch({ type: 'ERRORS_FOUND', payload: response.data.errors});\r\n        }\r\n        else {\r\n            localStorage.setItem(\"token\", response.data.jwt)\r\n            dispatch({type: 'USER_SUCCESS', payload: {user: response.data.user, id: response.data.id} })\r\n            dispatch({type: \"GET_MENTEES\", payload: response.data.mentees})\r\n        }\r\n    })\r\n} \r\n\r\nexport const userSignupAndCheck = (user_data) => dispatch => {\r\n    axios.post(\"https://cors-for-all.herokuapp.com/https://scripts-app-backend.herokuapp.com/users\", {username: user_data.username, email: user_data.email, password: user_data.password, password_confirmation: user_data.password_confirmation})\r\n    .then(response => {\r\n        console.log(response.data)\r\n        if (response.data.errors){\r\n            dispatch({ type: 'ERRORS_FOUND', payload: response.data.errors});\r\n        }\r\n        else {\r\n            localStorage.setItem(\"token\", response.data.jwt)\r\n            dispatch({type: 'USER_SUCCESS', payload: {user: response.data.user, id: response.data.id} })\r\n            dispatch({type: \"GET_MENTEES\", payload: response.data.mentees})\r\n        }\r\n    })\r\n} \r\n\r\nexport const changeUserPage = () => dispatch => {\r\n    dispatch({type: 'CHANGE_PAGE'})\r\n}\r\n\r\nexport const autoLogin = () => dispatch => {\r\n    axios.get(\"https://cors-for-all.herokuapp.com/https://scripts-app-backend.herokuapp.com/auto_login\", {headers: {\"Authenticate\": localStorage.token}})\r\n    .then(response => {\r\n        dispatch({type: 'USER_SUCCESS', payload: {user: response.data.user, id: response.data.id} })\r\n        dispatch({type: \"GET_MENTEES\", payload: response.data.mentees})\r\n    })\r\n}\r\n\r\nexport const userLogout = (user_data) => dispatch => {\r\n    localStorage.removeItem(\"token\");\r\n    dispatch({ type: 'LOGOUT' });\r\n} \r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}