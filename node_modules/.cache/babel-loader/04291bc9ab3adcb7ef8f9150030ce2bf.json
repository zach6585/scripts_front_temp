{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/moust/Documents/Scripts/frontend/src/App.js\";\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getTexts, changeTexts } from './actions/text';\nimport { userLogout, autoLogin } from './actions/user';\nimport { flushMenteeList, changeMentee } from './actions/mentee';\nimport hamburgerMenu from \"./components/scripts/pictures/hamburger_menu.png\";\nimport './App.css';\nimport './components/scripts/allScripts.css';\nimport './components/scripts/allScriptsiPad.css';\nimport './components/scripts/allScriptsiPadPro.css'; // import Script1List from './components/scripts/script1/componentlist';\n// import Script2List from './components/scripts/script2/componentlist';\n// import Script3List from './components/scripts/script3/componentlist';\n// import Script4List from './components/scripts/script4/componentlist';\n// import Script5List from './components/scripts/script5/componentlist';\n// import Script6List from './components/scripts/script6/componentlist';\n// import Script7List from './components/scripts/script7/componentlist';\n// import Script8List from './components/scripts/script8/componentlist';\n// import Script9List from './components/scripts/script9/componentlist';\n// import Script10List from './components/scripts/script10/componentlist';\n// import Script11List from './components/scripts/script11/componentlist';\n\nimport Script12List from './components/scripts/script12/componentlist'; // import Script13List from './components/scripts/script13/componentlist';\n\nimport Users from './components/users/users.js';\nimport Mentees from './components/mentees/mentees';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      componentList: [/*#__PURE__*/_jsxDEV(Script12List, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this)],\n      currComponent: null,\n      buttonList: [],\n      hamburger_is_clicked: false,\n      options: '' // windowWidth: 0\n\n    };\n\n    this.onScrollCloseHamburger = () => {\n      //I want to make it so that when you scroll the hamburger menu closes so this function does that\n      this.setState({\n        hamburger_is_clicked: false,\n        options: ''\n      });\n    };\n\n    this.componentDidMount = () => {\n      if (localStorage.getItem(\"token\")) {\n        this.props.autoLogin();\n      }\n\n      this.makeButtons();\n      window.addEventListener('scroll', this.onScrollCloseHamburger); // this.setState({windowWidth: window.innerWidth})\n    };\n\n    this.hamburgerClick = event => {\n      if (this.state.hamburger_is_clicked === true) {\n        this.setState({\n          hamburger_is_clicked: false,\n          options: ''\n        });\n      } else if (this.state.hamburger_is_clicked === false) {\n        this.setState({\n          hamburger_is_clicked: true,\n          options: /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"hamburger_menu_ps_div\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              onClick: event => this.menuItemHandleClick(event, 1),\n              children: \"Change Script    |\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              onClick: event => this.menuItemHandleClick(event, 2),\n              children: \"Change Mentee    |\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              onClick: event => this.menuItemHandleClick(event, 3),\n              children: \"Logout\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 9\n          }, this)\n        });\n      }\n    };\n\n    this.menuItemHandleClick = (e, choice) => {\n      //For the hamburger menu\n      if (choice === 1) {\n        this.setState({\n          hamburger_is_clicked: false,\n          options: ''\n        });\n        this.makeButtons();\n        this.props.changeTexts();\n      } else if (choice === 2) {\n        this.setState({\n          hamburger_is_clicked: false,\n          options: ''\n        });\n        this.makeButtons();\n        this.props.changeTexts();\n        this.props.changeMentee();\n      } else if (choice === 3) {\n        this.setState({\n          hamburger_is_clicked: false,\n          options: ''\n        });\n        this.makeButtons();\n        this.props.changeTexts();\n        this.props.flushMenteeList();\n        this.props.userLogout();\n      }\n    };\n\n    this.handleClick = script_number => {\n      //Once a button is clicked, it takes you to the coresponding component\n      // debugger;\n      this.setState({\n        buttonList: []\n      });\n      this.setState({\n        currComponent: this.state.componentList[script_number]\n      });\n      this.props.getTexts({\n        script_number: parseInt(script_number) + 1,\n        mentee_id: this.props.mentees.current_mentee_id\n      });\n    };\n\n    this.makeButtons = () => {\n      //Makes the button list depending on the componenents present in the componenet list\n      for (let i = 1; i < this.state.componentList.length + 1; i++) {\n        this.setState(prevstate => ({\n          buttonList: prevstate.buttonList.concat( /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => this.handleClick((i + 10).toString()),\n            children: [\"Script \", i + 11]\n          }, i + 10, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 78\n          }, this))\n        }));\n      }\n    };\n  }\n\n  // changeWindowSize = () => {\n  //   this.setState({windowWidth: window.innerWidth})\n  // }\n  render() {\n    // window.addEventListener('resize', this.changeWindowSize)\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.state.buttonList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    pages: state.pages,\n    texts: state.texts,\n    user: state.user,\n    mentees: state.mentees,\n    texts_loading: state.texts.loading\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getTexts: script_number => dispatch(getTexts(script_number)),\n    changeTexts: () => dispatch(changeTexts()),\n    userLogout: () => dispatch(userLogout()),\n    flushMenteeList: () => dispatch(flushMenteeList()),\n    autoLogin: () => dispatch(autoLogin()),\n    changeMentee: () => dispatch(changeMentee())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/mnt/c/Users/moust/Documents/Scripts/frontend/src/App.js"],"names":["Component","connect","getTexts","changeTexts","userLogout","autoLogin","flushMenteeList","changeMentee","hamburgerMenu","Script12List","Users","Mentees","App","state","componentList","currComponent","buttonList","hamburger_is_clicked","options","onScrollCloseHamburger","setState","componentDidMount","localStorage","getItem","props","makeButtons","window","addEventListener","hamburgerClick","event","menuItemHandleClick","e","choice","handleClick","script_number","parseInt","mentee_id","mentees","current_mentee_id","i","length","prevstate","concat","toString","render","mapStateToProps","pages","texts","user","texts_loading","loading","mapDispatchToProps","dispatch"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,gBAAtC;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,gBAAtC;AACA,SAASC,eAAT,EAAyBC,YAAzB,QAA6C,kBAA7C;AAEA,OAAOC,aAAP,MAA0B,kDAA1B;AAEA,OAAO,WAAP;AACA,OAAO,qCAAP;AACA,OAAO,yCAAP;AACA,OAAO,4CAAP,C,CAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAOC,YAAP,MAAyB,6CAAzB,C,CACA;;AAEA,OAAOC,KAAP,MAAkB,6BAAlB;AACA,OAAOC,OAAP,MAAoB,8BAApB;;;AAGA,MAAMC,GAAN,SAAkBZ,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAE1Ba,KAF0B,GAElB;AACNC,MAAAA,aAAa,EAAE,cAAC,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,cAAD,CADT;AAENC,MAAAA,aAAa,EAAE,IAFT;AAGNC,MAAAA,UAAU,EAAE,EAHN;AAINC,MAAAA,oBAAoB,EAAE,KAJhB;AAKNC,MAAAA,OAAO,EAAE,EALH,CAMN;;AANM,KAFkB;;AAAA,SAW1BC,sBAX0B,GAWD,MAAM;AAC7B;AACA,WAAKC,QAAL,CAAc;AAACH,QAAAA,oBAAoB,EAAE,KAAvB;AAA8BC,QAAAA,OAAO,EAAE;AAAvC,OAAd;AACD,KAdyB;;AAAA,SAgB1BG,iBAhB0B,GAgBN,MAAM;AACxB,UAAIC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAJ,EAAkC;AAChC,aAAKC,KAAL,CAAWnB,SAAX;AACD;;AACD,WAAKoB,WAAL;AACAC,MAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkC,KAAKR,sBAAvC,EALwB,CAMxB;AACD,KAvByB;;AAAA,SAyB1BS,cAzB0B,GAyBRC,KAAD,IAAW;AAC1B,UAAI,KAAKhB,KAAL,CAAWI,oBAAX,KAAoC,IAAxC,EAA6C;AACzC,aAAKG,QAAL,CAAc;AAACH,UAAAA,oBAAoB,EAAE,KAAvB;AAA8BC,UAAAA,OAAO,EAAE;AAAvC,SAAd;AACH,OAFD,MAIK,IAAI,KAAKL,KAAL,CAAWI,oBAAX,KAAoC,KAAxC,EAA8C;AAC/C,aAAKG,QAAL,CAAc;AAACH,UAAAA,oBAAoB,EAAE,IAAvB;AACdC,UAAAA,OAAO,eACP;AAAK,YAAA,EAAE,EAAC,uBAAR;AAAA,oCACI;AAAG,cAAA,OAAO,EAAEW,KAAK,IAAI,KAAKC,mBAAL,CAAyBD,KAAzB,EAAgC,CAAhC,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAG,cAAA,OAAO,EAAEA,KAAK,IAAI,KAAKC,mBAAL,CAAyBD,KAAzB,EAAgC,CAAhC,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAG,cAAA,OAAO,EAAEA,KAAK,IAAI,KAAKC,mBAAL,CAAyBD,KAAzB,EAAgC,CAAhC,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFc,SAAd;AAQH;AACF,KAxCyB;;AAAA,SA0C1BC,mBA1C0B,GA0CJ,CAACC,CAAD,EAAIC,MAAJ,KAAe;AACnC;AACA,UAAIA,MAAM,KAAK,CAAf,EAAiB;AACf,aAAKZ,QAAL,CAAc;AAACH,UAAAA,oBAAoB,EAAE,KAAvB;AAA8BC,UAAAA,OAAO,EAAE;AAAvC,SAAd;AACA,aAAKO,WAAL;AACA,aAAKD,KAAL,CAAWrB,WAAX;AACD,OAJD,MAKK,IAAI6B,MAAM,KAAK,CAAf,EAAiB;AACpB,aAAKZ,QAAL,CAAc;AAACH,UAAAA,oBAAoB,EAAE,KAAvB;AAA8BC,UAAAA,OAAO,EAAE;AAAvC,SAAd;AACA,aAAKO,WAAL;AACA,aAAKD,KAAL,CAAWrB,WAAX;AACA,aAAKqB,KAAL,CAAWjB,YAAX;AACD,OALI,MAMA,IAAIyB,MAAM,KAAK,CAAf,EAAiB;AACpB,aAAKZ,QAAL,CAAc;AAACH,UAAAA,oBAAoB,EAAE,KAAvB;AAA8BC,UAAAA,OAAO,EAAE;AAAvC,SAAd;AACA,aAAKO,WAAL;AACA,aAAKD,KAAL,CAAWrB,WAAX;AACA,aAAKqB,KAAL,CAAWlB,eAAX;AACA,aAAKkB,KAAL,CAAWpB,UAAX;AACD;AAEF,KA/DyB;;AAAA,SAiE1B6B,WAjE0B,GAiEXC,aAAD,IAAmB;AAAC;AAChC;AACA,WAAKd,QAAL,CAAc;AAACJ,QAAAA,UAAU,EAAE;AAAb,OAAd;AACA,WAAKI,QAAL,CAAc;AAACL,QAAAA,aAAa,EAAE,KAAKF,KAAL,CAAWC,aAAX,CAAyBoB,aAAzB;AAAhB,OAAd;AACA,WAAKV,KAAL,CAAWtB,QAAX,CAAoB;AAACgC,QAAAA,aAAa,EAAEC,QAAQ,CAACD,aAAD,CAAR,GAA0B,CAA1C;AAA6CE,QAAAA,SAAS,EAAE,KAAKZ,KAAL,CAAWa,OAAX,CAAmBC;AAA3E,OAApB;AACD,KAtEyB;;AAAA,SAyE1Bb,WAzE0B,GAyEZ,MAAM;AAAC;AACnB,WAAK,IAAIc,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAK1B,KAAL,CAAWC,aAAX,CAAyB0B,MAAzB,GAAkC,CAAtD,EAAyDD,CAAC,EAA1D,EAA6D;AAC3D,aAAKnB,QAAL,CAAeqB,SAAD,KAAgB;AAACzB,UAAAA,UAAU,EAAEyB,SAAS,CAACzB,UAAV,CAAqB0B,MAArB,eAA4B;AAAmB,YAAA,OAAO,EAAE,MAAM,KAAKT,WAAL,CAAiB,CAACM,CAAC,GAAC,EAAH,EAAOI,QAAP,EAAjB,CAAlC;AAAA,kCAA+EJ,CAAC,GAAC,EAAjF;AAAA,aAAaA,CAAC,GAAC,EAAf;AAAA;AAAA;AAAA;AAAA,kBAA5B;AAAb,SAAhB,CAAd;AACD;AAEF,KA9EyB;AAAA;;AAgF1B;AACA;AACA;AAEAK,EAAAA,MAAM,GAAG;AACP;AACI,wBACE;AAAA,gBACG,KAAK/B,KAAL,CAAWG;AADd;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AA5FqB;;AAgG5B,MAAM6B,eAAe,GAAGhC,KAAK,IAAI;AAC/B,SAAM;AACJiC,IAAAA,KAAK,EAAEjC,KAAK,CAACiC,KADT;AAEJC,IAAAA,KAAK,EAAElC,KAAK,CAACkC,KAFT;AAGJC,IAAAA,IAAI,EAAEnC,KAAK,CAACmC,IAHR;AAIJX,IAAAA,OAAO,EAAExB,KAAK,CAACwB,OAJX;AAKJY,IAAAA,aAAa,EAAEpC,KAAK,CAACkC,KAAN,CAAYG;AALvB,GAAN;AAOD,CARD;;AAUA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAM;AACFlD,IAAAA,QAAQ,EAAGgC,aAAD,IAAmBkB,QAAQ,CAAClD,QAAQ,CAACgC,aAAD,CAAT,CADnC;AAEF/B,IAAAA,WAAW,EAAE,MAAMiD,QAAQ,CAACjD,WAAW,EAAZ,CAFzB;AAGFC,IAAAA,UAAU,EAAE,MAAMgD,QAAQ,CAAChD,UAAU,EAAX,CAHxB;AAIFE,IAAAA,eAAe,EAAE,MAAM8C,QAAQ,CAAC9C,eAAe,EAAhB,CAJ7B;AAKFD,IAAAA,SAAS,EAAE,MAAM+C,QAAQ,CAAC/C,SAAS,EAAV,CALvB;AAMFE,IAAAA,YAAY,EAAE,MAAM6C,QAAQ,CAAC7C,YAAY,EAAb;AAN1B,GAAN;AAQD,CATD;;AAWA,eAAeN,OAAO,CAAC4C,eAAD,EAAkBM,kBAAlB,CAAP,CAA6CvC,GAA7C,CAAf","sourcesContent":["import { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getTexts, changeTexts } from './actions/text';\nimport { userLogout, autoLogin } from './actions/user';\nimport { flushMenteeList,changeMentee } from './actions/mentee';\n\nimport hamburgerMenu from \"./components/scripts/pictures/hamburger_menu.png\";\n\nimport './App.css';\nimport './components/scripts/allScripts.css';\nimport './components/scripts/allScriptsiPad.css';\nimport './components/scripts/allScriptsiPadPro.css';\n\n\n\n// import Script1List from './components/scripts/script1/componentlist';\n// import Script2List from './components/scripts/script2/componentlist';\n// import Script3List from './components/scripts/script3/componentlist';\n// import Script4List from './components/scripts/script4/componentlist';\n// import Script5List from './components/scripts/script5/componentlist';\n// import Script6List from './components/scripts/script6/componentlist';\n// import Script7List from './components/scripts/script7/componentlist';\n// import Script8List from './components/scripts/script8/componentlist';\n// import Script9List from './components/scripts/script9/componentlist';\n// import Script10List from './components/scripts/script10/componentlist';\n// import Script11List from './components/scripts/script11/componentlist';\nimport Script12List from './components/scripts/script12/componentlist';\n// import Script13List from './components/scripts/script13/componentlist';\n\nimport Users from './components/users/users.js';\nimport Mentees from './components/mentees/mentees';\n\n\nclass App extends Component {\n  \n  state = {\n    componentList: [<Script12List />], \n    currComponent: null,\n    buttonList: [],\n    hamburger_is_clicked: false,\n    options: ''\n    // windowWidth: 0\n  }\n\n  onScrollCloseHamburger = () => {\n    //I want to make it so that when you scroll the hamburger menu closes so this function does that\n    this.setState({hamburger_is_clicked: false, options: ''});\n  }\n\n  componentDidMount = () => {\n    if (localStorage.getItem(\"token\")){\n      this.props.autoLogin();\n    }\n    this.makeButtons();\n    window.addEventListener('scroll', this.onScrollCloseHamburger);\n    // this.setState({windowWidth: window.innerWidth})\n  }\n\n  hamburgerClick = (event) => {\n    if (this.state.hamburger_is_clicked === true){\n        this.setState({hamburger_is_clicked: false, options: ''})\n    }\n  \n    else if (this.state.hamburger_is_clicked === false){\n        this.setState({hamburger_is_clicked: true,\n        options: \n        <div id=\"hamburger_menu_ps_div\">\n            <p onClick={event => this.menuItemHandleClick(event, 1)}>Change Script    |</p>\n            <p onClick={event => this.menuItemHandleClick(event, 2)}>Change Mentee    |</p>\n            <p onClick={event => this.menuItemHandleClick(event, 3)}>Logout</p>\n        </div>\n    })\n    }\n  }\n  \n  menuItemHandleClick = (e, choice) => {\n    //For the hamburger menu\n    if (choice === 1){\n      this.setState({hamburger_is_clicked: false, options: ''});\n      this.makeButtons();\n      this.props.changeTexts();\n    }\n    else if (choice === 2){\n      this.setState({hamburger_is_clicked: false, options: ''});\n      this.makeButtons();\n      this.props.changeTexts();\n      this.props.changeMentee();\n    }\n    else if (choice === 3){\n      this.setState({hamburger_is_clicked: false, options: ''});\n      this.makeButtons();\n      this.props.changeTexts();\n      this.props.flushMenteeList();\n      this.props.userLogout();\n    }\n     \n  }\n\n  handleClick = (script_number) => {//Once a button is clicked, it takes you to the coresponding component\n    // debugger;\n    this.setState({buttonList: []});\n    this.setState({currComponent: this.state.componentList[script_number]})\n    this.props.getTexts({script_number: parseInt(script_number) + 1, mentee_id: this.props.mentees.current_mentee_id});\n  }\n\n\n  makeButtons = () => {//Makes the button list depending on the componenents present in the componenet list\n    for (let i = 1; i < this.state.componentList.length + 1; i++){\n      this.setState((prevstate) => ({buttonList: prevstate.buttonList.concat(<button key={i+10} onClick={() => this.handleClick((i+10).toString())}>Script {i+11}</button>)}));\n    } \n    \n  }\n\n  // changeWindowSize = () => {\n  //   this.setState({windowWidth: window.innerWidth})\n  // }\n\n  render() {\n    // window.addEventListener('resize', this.changeWindowSize)\n        return (\n          <div>\n            {this.state.buttonList}\n            {/* <p>{this.state.windowWidth} px</p> */}\n          </div>\n        )\n      }\n} \n\n\nconst mapStateToProps = state => {\n  return{\n    pages: state.pages,\n    texts: state.texts,\n    user: state.user,\n    mentees: state.mentees,\n    texts_loading: state.texts.loading,\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return{\n      getTexts: (script_number) => dispatch(getTexts(script_number)),\n      changeTexts: () => dispatch(changeTexts()),\n      userLogout: () => dispatch(userLogout()),\n      flushMenteeList: () => dispatch(flushMenteeList()),\n      autoLogin: () => dispatch(autoLogin()),\n      changeMentee: () => dispatch(changeMentee())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}