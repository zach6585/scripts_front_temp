{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/moust/Documents/Scripts/frontend/src/components/scripts/script2/pages/page4.js\",\n    _s = $RefreshSig$();\n\nimport shareScreen from '../../pictures/sharescreen.png';\nimport stopShare from '../../pictures/stopshare.png';\nimport { connect } from 'react-redux';\nimport { toggleCommentMode } from '../../../../actions/comment';\nimport { useState, useEffect } from 'react';\nimport Sidebar from '../../general pages/sidebar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Page4 = props => {\n  _s();\n\n  const [sideBar, setSidebar] = useState(null);\n  const [blur, setBlur] = useState(\"\");\n  useEffect(() => {\n    setBlur(\"\");\n    setSidebar(null);\n  }, [props.sendingComment]);\n\n  const handleCommentClick = event => {\n    //Here is where you render the sidebar\n    if (props.commentMode === 'commentModeOn') {\n      if (blur === \"\") {\n        setBlur(\"blur\");\n      } else {\n        setBlur(\"\");\n      }\n\n      if (sideBar === null) {\n        setSidebar( /*#__PURE__*/_jsxDEV(Sidebar, {\n          id_tag: event.target.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 28\n        }, this));\n      }\n\n      props.toggleCommentMode();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `sheet ${blur}`,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: `bold center ${props.commentMode}`,\n        id: \"h1\",\n        onClick: event => handleCommentClick(event),\n        children: \"Icebreaker\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left container_for_small_margin\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: props.commentMode,\n          onClick: event => handleCommentClick(event),\n          id: \"p_1\",\n          children: \"I think it would be fun to get to know more about each other. \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"instruction_box_number_1_page_4_script_2\",\n          className: `ital custom_svg demo_box container_for_small_margin ${props.commentMode}`,\n          onClick: event => handleCommentClick(event),\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"top_line_in_instruction_box\",\n            id: \"image_organizer_p\",\n            children: [\"Click on the link:\", /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"https://jamboard.google.com/d/1fAVvfwQg6diBXDATYfx4Apox5Xtf2Maw0PpHYmVuTlA/edit?usp=sharing\",\n              target: \"_blank\",\n              rel: \"nopener noreferrer\",\n              children: \"Link\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 47\n            }, this), \"and\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 201\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 206\n            }, this), \"share your screen.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 47\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 52\n            }, this), \"Click on the link and share your screen.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 69\n            }, this), \"You will talk with your mentee about which picture or type of thing you like better and why.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: shareScreen,\n            alt: \"Share Screen\",\n            id: \"share_your_screen_page_4_script_2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container_for_small_margin\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: props.commentMode,\n            onClick: event => handleCommentClick(event),\n            id: \"p_2\",\n            children: [\"We will click on the boxes. A question will show up in the box and we will both answer it.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 119\n            }, this), \"If you also have a question that isn't in game, but you really want to ask me, just let me know!\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 125\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"instruction_box_number_2_page_4_script_2\",\n          className: `ital custom_svg demo_box container_for_large_margin ${props.commentMode}`,\n          onClick: event => handleCommentClick(event),\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"top_line_in_instruction_box\",\n            children: \"When you are done with the game, stop screen sharing\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: stopShare,\n            alt: \"Stop share\",\n            id: \"stop_sharing_screen_page_4_script_2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), sideBar]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Page4, \"XCCcHz0cDyTlGKX0ZuBjrdhgAv8=\");\n\n_c = Page4;\n\nconst mapStateToProps = state => {\n  return {\n    script: state.texts.currentScript,\n    commentMode: state.comments.commentMode,\n    sendingComment: state.comments.sendingComment\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    toggleCommentMode: () => dispatch(toggleCommentMode())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Page4);\n\nvar _c;\n\n$RefreshReg$(_c, \"Page4\");","map":{"version":3,"sources":["/mnt/c/Users/moust/Documents/Scripts/frontend/src/components/scripts/script2/pages/page4.js"],"names":["shareScreen","stopShare","connect","toggleCommentMode","useState","useEffect","Sidebar","Page4","props","sideBar","setSidebar","blur","setBlur","sendingComment","handleCommentClick","event","commentMode","target","id","mapStateToProps","state","script","texts","currentScript","comments","mapDispatchToProps","dispatch"],"mappings":";;;AAAA,OAAOA,WAAP,MAAwB,gCAAxB;AACA,OAAOC,SAAP,MAAsB,8BAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,iBAAT,QAAkC,6BAAlC;AAEA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,OAAOC,OAAP,MAAoB,6BAApB;;;AAGA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAAA;;AAErB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AAGAC,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,OAAO,CAAC,EAAD,CAAP;AACAF,IAAAA,UAAU,CAAC,IAAD,CAAV;AACD,GAHM,EAGJ,CAACF,KAAK,CAACK,cAAP,CAHI,CAAT;;AAKA,QAAMC,kBAAkB,GAAIC,KAAD,IAAW;AAClC;AACA,QAAIP,KAAK,CAACQ,WAAN,KAAsB,eAA1B,EAA0C;AACtC,UAAIL,IAAI,KAAK,EAAb,EAAgB;AACZC,QAAAA,OAAO,CAAC,MAAD,CAAP;AACH,OAFD,MAGK;AACDA,QAAAA,OAAO,CAAC,EAAD,CAAP;AACH;;AACD,UAAIH,OAAO,KAAK,IAAhB,EAAqB;AACjBC,QAAAA,UAAU,eAAC,QAAC,OAAD;AAAS,UAAA,MAAM,EAAEK,KAAK,CAACE,MAAN,CAAaC;AAA9B;AAAA;AAAA;AAAA;AAAA,gBAAD,CAAV;AACH;;AACDV,MAAAA,KAAK,CAACL,iBAAN;AACH;AACJ,GAdD;;AAgBA,sBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAG,SAAQQ,IAAK,EAA9B;AAAA,8BACI;AAAI,QAAA,SAAS,EAAG,eAAcH,KAAK,CAACQ,WAAY,EAAhD;AAAmD,QAAA,EAAE,EAAC,IAAtD;AAA2D,QAAA,OAAO,EAAED,KAAK,IAAID,kBAAkB,CAACC,KAAD,CAA/F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAC,iCAAf;AAAA,gCACI;AAAG,UAAA,SAAS,EAAEP,KAAK,CAACQ,WAApB;AAAiC,UAAA,OAAO,EAAED,KAAK,IAAID,kBAAkB,CAACC,KAAD,CAArE;AAA8E,UAAA,EAAE,EAAC,KAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAGI;AAAK,UAAA,EAAE,EAAC,0CAAR;AAAmD,UAAA,SAAS,EAAG,uDAAsDP,KAAK,CAACQ,WAAY,EAAvI;AAA0I,UAAA,OAAO,EAAED,KAAK,IAAID,kBAAkB,CAACC,KAAD,CAA9K;AAAA,kCACI;AAAG,YAAA,SAAS,EAAC,6BAAb;AAA2C,YAAA,EAAE,EAAC,mBAA9C;AAAA,0DACsB;AAAG,cAAA,IAAI,EAAC,6FAAR;AAAsG,cAAA,MAAM,EAAC,QAA7G;AAAsH,cAAA,GAAG,EAAC,oBAA1H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADtB,sBACgL;AAAA;AAAA;AAAA;AAAA,oBADhL,eACqL;AAAA;AAAA;AAAA;AAAA,oBADrL,qCAEsB;AAAA;AAAA;AAAA;AAAA,oBAFtB,eAE2B;AAAA;AAAA;AAAA;AAAA,oBAF3B,2DAG4C;AAAA;AAAA;AAAA;AAAA,oBAH5C;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAOI;AAAK,YAAA,GAAG,EAAEf,WAAV;AAAuB,YAAA,GAAG,EAAC,cAA3B;AAA0C,YAAA,EAAE,EAAC;AAA7C;AAAA;AAAA;AAAA;AAAA,kBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAYI;AAAK,UAAA,SAAS,EAAC,4BAAf;AAAA,iCACI;AAAG,YAAA,SAAS,EAAEQ,KAAK,CAACQ,WAApB;AAAiC,YAAA,OAAO,EAAED,KAAK,IAAID,kBAAkB,CAACC,KAAD,CAArE;AAA8E,YAAA,EAAE,EAAC,KAAjF;AAAA,kIAC8F;AAAA;AAAA;AAAA;AAAA,oBAD9F,mHAEoG;AAAA;AAAA;AAAA;AAAA,oBAFpG;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAZJ,eAmBI;AAAK,UAAA,EAAE,EAAC,0CAAR;AAAmD,UAAA,SAAS,EAAG,uDAAsDP,KAAK,CAACQ,WAAY,EAAvI;AAA0I,UAAA,OAAO,EAAED,KAAK,IAAID,kBAAkB,CAACC,KAAD,CAA9K;AAAA,kCACI;AAAG,YAAA,SAAS,EAAC,6BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAK,YAAA,GAAG,EAAEd,SAAV;AAAqB,YAAA,GAAG,EAAC,YAAzB;AAAsC,YAAA,EAAE,EAAC;AAAzC;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAnBJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EA4BKQ,OA5BL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiCH,CA5DD;;GAAMF,K;;KAAAA,K;;AA8DN,MAAMY,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAM;AACFC,IAAAA,MAAM,EAAED,KAAK,CAACE,KAAN,CAAYC,aADlB;AAEFP,IAAAA,WAAW,EAAEI,KAAK,CAACI,QAAN,CAAeR,WAF1B;AAGFH,IAAAA,cAAc,EAAEO,KAAK,CAACI,QAAN,CAAeX;AAH7B,GAAN;AAKH,CAND;;AAQA,MAAMY,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAM;AACFvB,IAAAA,iBAAiB,EAAE,MAAMuB,QAAQ,CAACvB,iBAAiB,EAAlB;AAD/B,GAAN;AAGH,CAJD;;AAMA,eAAeD,OAAO,CAACiB,eAAD,EAAkBM,kBAAlB,CAAP,CAA6ClB,KAA7C,CAAf","sourcesContent":["import shareScreen from '../../pictures/sharescreen.png';\r\nimport stopShare from '../../pictures/stopshare.png';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { toggleCommentMode } from '../../../../actions/comment';\r\n\r\nimport { useState, useEffect } from 'react';\r\n\r\nimport Sidebar from '../../general pages/sidebar';\r\n\r\n\r\nconst Page4 = (props) => {\r\n\r\n    const [sideBar, setSidebar] = useState(null);\r\n    const [blur, setBlur] = useState(\"\");                         \r\n\r\n\r\n    useEffect(() => {\r\n        setBlur(\"\");\r\n        setSidebar(null);\r\n      }, [props.sendingComment]);\r\n\r\n    const handleCommentClick = (event) => {\r\n        //Here is where you render the sidebar\r\n        if (props.commentMode === 'commentModeOn'){\r\n            if (blur === \"\"){\r\n                setBlur(\"blur\");\r\n            }\r\n            else {\r\n                setBlur(\"\");\r\n            }\r\n            if (sideBar === null){\r\n                setSidebar(<Sidebar id_tag={event.target.id} />)\r\n            }\r\n            props.toggleCommentMode();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={`sheet ${blur}`}>\r\n                <h1 className={`bold center ${props.commentMode}`} id=\"h1\" onClick={event => handleCommentClick(event)}>Icebreaker</h1>\r\n                <div className=\"left container_for_small_margin\">\r\n                    <p className={props.commentMode} onClick={event => handleCommentClick(event)} id=\"p_1\">I think it would be fun to get to know more about each other. </p>\r\n\r\n                    <div id=\"instruction_box_number_1_page_4_script_2\" className={`ital custom_svg demo_box container_for_small_margin ${props.commentMode}`} onClick={event => handleCommentClick(event)}>\r\n                        <p className=\"top_line_in_instruction_box\" id=\"image_organizer_p\">\r\n                            Click on the link:<a href=\"https://jamboard.google.com/d/1fAVvfwQg6diBXDATYfx4Apox5Xtf2Maw0PpHYmVuTlA/edit?usp=sharing\" target=\"_blank\" rel=\"nopener noreferrer\">Link</a>and<br/><br/>\r\n                            share your screen.<br/><br/>    \r\n                            Click on the link and share your screen.<br/>\r\n                            You will talk with your mentee about which picture or type of thing you like better and why.\r\n                        </p>\r\n                        <img src={shareScreen} alt=\"Share Screen\" id=\"share_your_screen_page_4_script_2\" />\r\n                    </div>\r\n                    <div className='container_for_small_margin'>\r\n                        <p className={props.commentMode} onClick={event => handleCommentClick(event)} id=\"p_2\">\r\n                            We will click on the boxes. A question will show up in the box and we will both answer it.<br/>\r\n                            If you also have a question that isn't in game, but you really want to ask me, just let me know!<br/>\r\n                        </p>\r\n                    </div>\r\n                    \r\n                    <div id=\"instruction_box_number_2_page_4_script_2\" className={`ital custom_svg demo_box container_for_large_margin ${props.commentMode}`} onClick={event => handleCommentClick(event)}>\r\n                        <p className=\"top_line_in_instruction_box\">When you are done with the game, stop screen sharing</p>\r\n                        <img src={stopShare} alt=\"Stop share\" id=\"stop_sharing_screen_page_4_script_2\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {sideBar}\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return{\r\n        script: state.texts.currentScript,\r\n        commentMode: state.comments.commentMode,\r\n        sendingComment: state.comments.sendingComment \r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return{\r\n        toggleCommentMode: () => dispatch(toggleCommentMode())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Page4);"]},"metadata":{},"sourceType":"module"}