{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/moust/Documents/Scripts/frontend/src/App.js\";\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getTexts, changeTexts } from './actions/text';\nimport { userLogout, autoLogin } from './actions/user';\nimport { flushMenteeList, changeMentee } from './actions/mentee';\nimport hamburgerMenu from \"./components/scripts/pictures/hamburger_menu.png\";\nimport './App.css';\nimport './components/scripts/allScripts.css';\nimport './components/scripts/allScriptsiPad.css';\nimport './components/scripts/allScriptsiPadPro.css'; // import Script1List from './components/scripts/script1/componentlist';\n// import Script2List from './components/scripts/script2/componentlist';\n// import Script3List from './components/scripts/script3/componentlist';\n// import Script4List from './components/scripts/script4/componentlist';\n// import Script5List from './components/scripts/script5/componentlist';\n// import Script6List from './components/scripts/script6/componentlist';\n// import Script7List from './components/scripts/script7/componentlist';\n// import Script8List from './components/scripts/script8/componentlist';\n// import Script9List from './components/scripts/script9/componentlist';\n// import Script10List from './components/scripts/script10/componentlist';\n// import Script11List from './components/scripts/script11/componentlist';\n\nimport Script12List from './components/scripts/script12/componentlist'; // import Script13List from './components/scripts/script13/componentlist';\n\nimport Users from './components/users/users.js';\nimport Mentees from './components/mentees/mentees';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      componentList: [/*#__PURE__*/_jsxDEV(Script12List, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this)],\n      currComponent: null,\n      buttonList: [],\n      hamburger_is_clicked: false,\n      options: '' // windowWidth: 0\n\n    };\n\n    this.onScrollCloseHamburger = () => {\n      //I want to make it so that when you scroll the hamburger menu closes so this function does that\n      this.setState({\n        hamburger_is_clicked: false,\n        options: ''\n      });\n    };\n\n    this.componentDidMount = () => {\n      this.makeButtons();\n    };\n\n    this.hamburgerClick = event => {\n      if (this.state.hamburger_is_clicked === true) {\n        this.setState({\n          hamburger_is_clicked: false,\n          options: ''\n        });\n      } else if (this.state.hamburger_is_clicked === false) {\n        this.setState({\n          hamburger_is_clicked: true,\n          options: /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"hamburger_menu_ps_div\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              onClick: event => this.menuItemHandleClick(event, 1),\n              children: \"Change Script    |\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              onClick: event => this.menuItemHandleClick(event, 2),\n              children: \"Change Mentee    |\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              onClick: event => this.menuItemHandleClick(event, 3),\n              children: \"Logout\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 9\n          }, this)\n        });\n      }\n    };\n\n    this.menuItemHandleClick = (e, choice) => {\n      //For the hamburger menu\n      if (choice === 1) {\n        this.setState({\n          hamburger_is_clicked: false,\n          options: ''\n        });\n        this.makeButtons();\n        this.props.changeTexts();\n      } else if (choice === 2) {\n        this.setState({\n          hamburger_is_clicked: false,\n          options: ''\n        });\n        this.makeButtons();\n        this.props.changeTexts();\n        this.props.changeMentee();\n      } else if (choice === 3) {\n        this.setState({\n          hamburger_is_clicked: false,\n          options: ''\n        });\n        this.makeButtons();\n        this.props.changeTexts();\n        this.props.flushMenteeList();\n        this.props.userLogout();\n      }\n    };\n\n    this.handleClick = script_number => {\n      //Once a button is clicked, it takes you to the coresponding component\n      // debugger;\n      this.setState({\n        buttonList: []\n      });\n      this.setState({\n        currComponent: this.state.componentList[script_number]\n      }); // this.props.getTexts({script_number: parseInt(script_number) + 1, mentee_id: this.props.mentees.current_mentee_id});\n    };\n\n    this.makeButtons = () => {\n      //Makes the button list depending on the componenents present in the componenet list\n      for (let i = 1; i < this.state.componentList.length + 1; i++) {\n        this.setState(prevstate => ({\n          buttonList: prevstate.buttonList.concat( /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => this.handleClick((i - 1).toString()),\n            children: [\"Script \", i + 11]\n          }, i - 1, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 78\n          }, this))\n        }));\n      }\n    };\n  }\n\n  // changeWindowSize = () => {\n  //   this.setState({windowWidth: window.innerWidth})\n  // }\n  render() {\n    // window.addEventListener('resize', this.changeWindowSize)\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.state.buttonList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    pages: state.pages,\n    texts: state.texts,\n    user: state.user,\n    mentees: state.mentees,\n    texts_loading: state.texts.loading\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getTexts: script_number => dispatch(getTexts(script_number)),\n    changeTexts: () => dispatch(changeTexts()),\n    userLogout: () => dispatch(userLogout()),\n    flushMenteeList: () => dispatch(flushMenteeList()),\n    autoLogin: () => dispatch(autoLogin()),\n    changeMentee: () => dispatch(changeMentee())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/mnt/c/Users/moust/Documents/Scripts/frontend/src/App.js"],"names":["Component","connect","getTexts","changeTexts","userLogout","autoLogin","flushMenteeList","changeMentee","hamburgerMenu","Script12List","Users","Mentees","App","state","componentList","currComponent","buttonList","hamburger_is_clicked","options","onScrollCloseHamburger","setState","componentDidMount","makeButtons","hamburgerClick","event","menuItemHandleClick","e","choice","props","handleClick","script_number","i","length","prevstate","concat","toString","render","mapStateToProps","pages","texts","user","mentees","texts_loading","loading","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getTexts, changeTexts } from './actions/text';\nimport { userLogout, autoLogin } from './actions/user';\nimport { flushMenteeList,changeMentee } from './actions/mentee';\n\nimport hamburgerMenu from \"./components/scripts/pictures/hamburger_menu.png\";\n\nimport './App.css';\nimport './components/scripts/allScripts.css';\nimport './components/scripts/allScriptsiPad.css';\nimport './components/scripts/allScriptsiPadPro.css';\n\n\n\n// import Script1List from './components/scripts/script1/componentlist';\n// import Script2List from './components/scripts/script2/componentlist';\n// import Script3List from './components/scripts/script3/componentlist';\n// import Script4List from './components/scripts/script4/componentlist';\n// import Script5List from './components/scripts/script5/componentlist';\n// import Script6List from './components/scripts/script6/componentlist';\n// import Script7List from './components/scripts/script7/componentlist';\n// import Script8List from './components/scripts/script8/componentlist';\n// import Script9List from './components/scripts/script9/componentlist';\n// import Script10List from './components/scripts/script10/componentlist';\n// import Script11List from './components/scripts/script11/componentlist';\nimport Script12List from './components/scripts/script12/componentlist';\n// import Script13List from './components/scripts/script13/componentlist';\n\nimport Users from './components/users/users.js';\nimport Mentees from './components/mentees/mentees';\n\n\nclass App extends Component {\n  \n  state = {\n    componentList: [<Script12List />], \n    currComponent: null,\n    buttonList: [],\n    hamburger_is_clicked: false,\n    options: ''\n    // windowWidth: 0\n  }\n\n  onScrollCloseHamburger = () => {\n    //I want to make it so that when you scroll the hamburger menu closes so this function does that\n    this.setState({hamburger_is_clicked: false, options: ''});\n  }\n\n  componentDidMount = () => {\n\n    this.makeButtons();\n    \n  }\n\n  hamburgerClick = (event) => {\n    if (this.state.hamburger_is_clicked === true){\n        this.setState({hamburger_is_clicked: false, options: ''})\n    }\n  \n    else if (this.state.hamburger_is_clicked === false){\n        this.setState({hamburger_is_clicked: true,\n        options: \n        <div id=\"hamburger_menu_ps_div\">\n            <p onClick={event => this.menuItemHandleClick(event, 1)}>Change Script    |</p>\n            <p onClick={event => this.menuItemHandleClick(event, 2)}>Change Mentee    |</p>\n            <p onClick={event => this.menuItemHandleClick(event, 3)}>Logout</p>\n        </div>\n    })\n    }\n  }\n  \n  menuItemHandleClick = (e, choice) => {\n    //For the hamburger menu\n    if (choice === 1){\n      this.setState({hamburger_is_clicked: false, options: ''});\n      this.makeButtons();\n      this.props.changeTexts();\n    }\n    else if (choice === 2){\n      this.setState({hamburger_is_clicked: false, options: ''});\n      this.makeButtons();\n      this.props.changeTexts();\n      this.props.changeMentee();\n    }\n    else if (choice === 3){\n      this.setState({hamburger_is_clicked: false, options: ''});\n      this.makeButtons();\n      this.props.changeTexts();\n      this.props.flushMenteeList();\n      this.props.userLogout();\n    }\n     \n  }\n\n  handleClick = (script_number) => {//Once a button is clicked, it takes you to the coresponding component\n    // debugger;\n    this.setState({buttonList: []});\n    this.setState({currComponent: this.state.componentList[script_number]})\n    // this.props.getTexts({script_number: parseInt(script_number) + 1, mentee_id: this.props.mentees.current_mentee_id});\n  }\n\n\n  makeButtons = () => {//Makes the button list depending on the componenents present in the componenet list\n    for (let i = 1; i < this.state.componentList.length + 1; i++){\n      this.setState((prevstate) => ({buttonList: prevstate.buttonList.concat(<button key={i-1} onClick={() => this.handleClick((i-1).toString())}>Script {i+11}</button>)}));\n    } \n    \n  }\n\n  // changeWindowSize = () => {\n  //   this.setState({windowWidth: window.innerWidth})\n  // }\n\n  render() {\n    // window.addEventListener('resize', this.changeWindowSize)\n        return (\n          <div>\n            {this.state.buttonList}\n            {/* <p>{this.state.windowWidth} px</p> */}\n          </div>\n        )\n      }\n} \n\n\nconst mapStateToProps = state => {\n  return{\n    pages: state.pages,\n    texts: state.texts,\n    user: state.user,\n    mentees: state.mentees,\n    texts_loading: state.texts.loading,\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return{\n      getTexts: (script_number) => dispatch(getTexts(script_number)),\n      changeTexts: () => dispatch(changeTexts()),\n      userLogout: () => dispatch(userLogout()),\n      flushMenteeList: () => dispatch(flushMenteeList()),\n      autoLogin: () => dispatch(autoLogin()),\n      changeMentee: () => dispatch(changeMentee())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}